(function() {
  window.blocks = {
    coub: {},
    clientsideTimeline: {}
  };

  window.channels = {};

  window.pages = {};

  window.pages.bestCoubs2013 = {};

  window.pages.bestCoubs2014 = {};

  window.pages.bestCoubs2015 = {};

  window.pages.bestCoubs2016 = {};

  window.pages.bestCoubs2012 = {};

  window.pages.bestCoubs2017 = {};

  window.pages.bestCoubs2018 = {};

  window.pages.bestCoubs2019 = {};

  window.pages.profile = {
    view: {},
    promo: {}
  };

  window.pages.tags = {};

  window.pages.dev_docs = {};

  window.pages.newEditorPromo = {};

  window.pages.findFriends = {};

  window.pages.editAccount = {};

  window.pages.hotPage = {};

  window.widgets = {
    player: {},
    timeline: {},
    transliteration: {},
    hints: {}
  };

  window.siteData = {};

  window.dataProviders = {};

  window.coubEditor = {
    data: {
      typeMatchers: {}
    },
    utils: {},
    widgets: {},
    helpers: {},
    serializers: {},
    functions: {},
    flash: {},
    stateMachines: {},
    animators: {},
    logic: {},
    mixins: {},
    modules: {},
    initializers: {}
  };

  window.helpers = {};

  window.mobile = {
    navigations: {},
    modules: {}
  };

  window.utils = {};

  window.functions = {};

  window.mobilePlayer = {};

  window.html5Player = {};

  window.siteAdmin = {
    moderation: {},
    widgets: {}
  };

  window.initializers = {};

  window.abstract = {};

  window.Banners = {};

}).call(this);
/*!
 * jQuery JavaScript Library v1.7.1
 * http://jquery.com/
 *
 * Copyright 2011, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2011, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Mon Nov 21 21:11:03 2011 -0500
 */

(function( window, undefined ) {

// Use the correct document accordingly with window argument (sandbox)
var document = window.document,
	navigator = window.navigator,
	location = window.location;
var jQuery = (function() {

// Define a local copy of jQuery
var jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context, rootjQuery );
	},

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// A central reference to the root jQuery(document)
	rootjQuery,

	// A simple way to check for HTML strings or ID strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	quickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,

	// Check if a string has a non-whitespace character in it
	rnotwhite = /\S/,

	// Used for trimming whitespace
	trimLeft = /^\s+/,
	trimRight = /\s+$/,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,

	// JSON RegExp
	rvalidchars = /^[\],:{}\s]*$/,
	rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
	rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,

	// Useragent RegExp
	rwebkit = /(webkit)[ \/]([\w.]+)/,
	ropera = /(opera)(?:.*version)?[ \/]([\w.]+)/,
	rmsie = /(msie) ([\w.]+)/,
	rmozilla = /(mozilla)(?:.*? rv:([\w.]+))?/,

	// Matches dashed string for camelizing
	rdashAlpha = /-([a-z]|[0-9])/ig,
	rmsPrefix = /^-ms-/,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return ( letter + "" ).toUpperCase();
	},

	// Keep a UserAgent string for use with jQuery.browser
	userAgent = navigator.userAgent,

	// For matching the engine and version of the browser
	browserMatch,

	// The deferred used on DOM ready
	readyList,

	// The ready event handler
	DOMContentLoaded,

	// Save a reference to some core methods
	toString = Object.prototype.toString,
	hasOwn = Object.prototype.hasOwnProperty,
	push = Array.prototype.push,
	slice = Array.prototype.slice,
	trim = String.prototype.trim,
	indexOf = Array.prototype.indexOf,

	// [[Class]] -> type pairs
	class2type = {};

jQuery.fn = jQuery.prototype = {
	constructor: jQuery,
	init: function( selector, context, rootjQuery ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), or $(undefined)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;
		}

		// The body element only exists once, optimize finding it
		if ( selector === "body" && !context && document.body ) {
			this.context = document;
			this[0] = document.body;
			this.selector = selector;
			this.length = 1;
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			// Are we dealing with HTML string or an ID?
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = quickExpr.exec( selector );
			}

			// Verify a match, and that no context was specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;
					doc = ( context ? context.ownerDocument || context : document );

					// If a single string is passed in and it's a single tag
					// just do a createElement and skip the rest
					ret = rsingleTag.exec( selector );

					if ( ret ) {
						if ( jQuery.isPlainObject( context ) ) {
							selector = [ document.createElement( ret[1] ) ];
							jQuery.fn.attr.call( selector, context, true );

						} else {
							selector = [ doc.createElement( ret[1] ) ];
						}

					} else {
						ret = jQuery.buildFragment( [ match[1] ], [ doc ] );
						selector = ( ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment ).childNodes;
					}

					return jQuery.merge( this, selector );

				// HANDLE: $("#id")
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.7.1",

	// The default length of a jQuery object is 0
	length: 0,

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	toArray: function() {
		return slice.call( this, 0 );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num == null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this[ this.length + num ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {
		// Build a new jQuery matched element set
		var ret = this.constructor();

		if ( jQuery.isArray( elems ) ) {
			push.apply( ret, elems );

		} else {
			jQuery.merge( ret, elems );
		}

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		ret.context = this.context;

		if ( name === "find" ) {
			ret.selector = this.selector + ( this.selector ? " " : "" ) + selector;
		} else if ( name ) {
			ret.selector = this.selector + "." + name + "(" + selector + ")";
		}

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	ready: function( fn ) {
		// Attach the listeners
		jQuery.bindReady();

		// Add the callback
		readyList.add( fn );

		return this;
	},

	eq: function( i ) {
		i = +i;
		return i === -1 ?
			this.slice( i ) :
			this.slice( i, i + 1 );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ),
			"slice", slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	noConflict: function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	},

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {
		// Either a released hold or an DOMready/load event and not yet ready
		if ( (wait === true && !--jQuery.readyWait) || (wait !== true && !jQuery.isReady) ) {
			// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
			if ( !document.body ) {
				return setTimeout( jQuery.ready, 1 );
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}

			// If there are functions bound, to execute
			readyList.fireWith( document, [ jQuery ] );

			// Trigger any bound ready events
			if ( jQuery.fn.trigger ) {
				jQuery( document ).trigger( "ready" ).off( "ready" );
			}
		}
	},

	bindReady: function() {
		if ( readyList ) {
			return;
		}

		readyList = jQuery.Callbacks( "once memory" );

		// Catch cases where $(document).ready() is called after the
		// browser event has already occurred.
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			return setTimeout( jQuery.ready, 1 );
		}

		// Mozilla, Opera and webkit nightlies currently support this event
		if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", jQuery.ready, false );

		// If IE event model is used
		} else if ( document.attachEvent ) {
			// ensure firing before onload,
			// maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", DOMContentLoaded );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", jQuery.ready );

			// If IE and not a frame
			// continually check to see if the document is ready
			var toplevel = false;

			try {
				toplevel = window.frameElement == null;
			} catch(e) {}

			if ( document.documentElement.doScroll && toplevel ) {
				doScrollCheck();
			}
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	// A crude way of determining if an object is a window
	isWindow: function( obj ) {
		return obj && typeof obj === "object" && "setInterval" in obj;
	},

	isNumeric: function( obj ) {
		return !isNaN( parseFloat(obj) ) && isFinite( obj );
	},

	type: function( obj ) {
		return obj == null ?
			String( obj ) :
			class2type[ toString.call(obj) ] || "object";
	},

	isPlainObject: function( obj ) {
		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!hasOwn.call(obj, "constructor") &&
				!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.

		var key;
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		for ( var name in obj ) {
			return false;
		}
		return true;
	},

	error: function( msg ) {
		throw new Error( msg );
	},

	parseJSON: function( data ) {
		if ( typeof data !== "string" || !data ) {
			return null;
		}

		// Make sure leading/trailing whitespace is removed (IE can't handle it)
		data = jQuery.trim( data );

		// Attempt to parse using the native JSON parser first
		if ( window.JSON && window.JSON.parse ) {
			return window.JSON.parse( data );
		}

		// Make sure the incoming data is actual JSON
		// Logic borrowed from http://json.org/json2.js
		if ( rvalidchars.test( data.replace( rvalidescape, "@" )
			.replace( rvalidtokens, "]" )
			.replace( rvalidbraces, "")) ) {

			return ( new Function( "return " + data ) )();

		}
		jQuery.error( "Invalid JSON: " + data );
	},

	// Cross-browser xml parsing
	parseXML: function( data ) {
		var xml, tmp;
		try {
			if ( window.DOMParser ) { // Standard
				tmp = new DOMParser();
				xml = tmp.parseFromString( data , "text/xml" );
			} else { // IE
				xml = new ActiveXObject( "Microsoft.XMLDOM" );
				xml.async = "false";
				xml.loadXML( data );
			}
		} catch( e ) {
			xml = undefined;
		}
		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	},

	noop: function() {},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && rnotwhite.test( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();
	},

	// args is for internal usage only
	each: function( object, callback, args ) {
		var name, i = 0,
			length = object.length,
			isObj = length === undefined || jQuery.isFunction( object );

		if ( args ) {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.apply( object[ name ], args ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.apply( object[ i++ ], args ) === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.call( object[ name ], name, object[ name ] ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {
						break;
					}
				}
			}
		}

		return object;
	},

	// Use native String.trim function wherever possible
	trim: trim ?
		function( text ) {
			return text == null ?
				"" :
				trim.call( text );
		} :

		// Otherwise use our own trimming functionality
		function( text ) {
			return text == null ?
				"" :
				text.toString().replace( trimLeft, "" ).replace( trimRight, "" );
		},

	// results is for internal usage only
	makeArray: function( array, results ) {
		var ret = results || [];

		if ( array != null ) {
			// The window, strings (and functions) also have 'length'
			// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930
			var type = jQuery.type( array );

			if ( array.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( array ) ) {
				push.call( ret, array );
			} else {
				jQuery.merge( ret, array );
			}
		}

		return ret;
	},

	inArray: function( elem, array, i ) {
		var len;

		if ( array ) {
			if ( indexOf ) {
				return indexOf.call( array, elem, i );
			}

			len = array.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in array && array[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var i = first.length,
			j = 0;

		if ( typeof second.length === "number" ) {
			for ( var l = second.length; j < l; j++ ) {
				first[ i++ ] = second[ j ];
			}

		} else {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var ret = [], retVal;
		inv = !!inv;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( var i = 0, length = elems.length; i < length; i++ ) {
			retVal = !!callback( elems[ i ], i );
			if ( inv !== retVal ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value, key, ret = [],
			i = 0,
			length = elems.length,
			// jquery objects are treated as arrays
			isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;

		// Go through the array, translating each of the items to their
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}

		// Go through every key on the object,
		} else {
			for ( key in elems ) {
				value = callback( elems[ key ], key, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}
		}

		// Flatten any nested arrays
		return ret.concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		if ( typeof context === "string" ) {
			var tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		var args = slice.call( arguments, 2 ),
			proxy = function() {
				return fn.apply( context, args.concat( slice.call( arguments ) ) );
			};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;

		return proxy;
	},

	// Mutifunctional method to get and set values to a collection
	// The value/s can optionally be executed if it's a function
	access: function( elems, key, value, exec, fn, pass ) {
		var length = elems.length;

		// Setting many attributes
		if ( typeof key === "object" ) {
			for ( var k in key ) {
				jQuery.access( elems, k, key[k], exec, fn, value );
			}
			return elems;
		}

		// Setting one attribute
		if ( value !== undefined ) {
			// Optionally, function values get executed if exec is true
			exec = !pass && exec && jQuery.isFunction(value);

			for ( var i = 0; i < length; i++ ) {
				fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );
			}

			return elems;
		}

		// Getting an attribute
		return length ? fn( elems[0], key ) : undefined;
	},

	now: function() {
		return ( new Date() ).getTime();
	},

	// Use of jQuery.browser is frowned upon.
	// More details: http://docs.jquery.com/Utilities/jQuery.browser
	uaMatch: function( ua ) {
		ua = ua.toLowerCase();

		var match = rwebkit.exec( ua ) ||
			ropera.exec( ua ) ||
			rmsie.exec( ua ) ||
			ua.indexOf("compatible") < 0 && rmozilla.exec( ua ) ||
			[];

		return { browser: match[1] || "", version: match[2] || "0" };
	},

	sub: function() {
		function jQuerySub( selector, context ) {
			return new jQuerySub.fn.init( selector, context );
		}
		jQuery.extend( true, jQuerySub, this );
		jQuerySub.superclass = this;
		jQuerySub.fn = jQuerySub.prototype = this();
		jQuerySub.fn.constructor = jQuerySub;
		jQuerySub.sub = this.sub;
		jQuerySub.fn.init = function init( selector, context ) {
			if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
				context = jQuerySub( context );
			}

			return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
		};
		jQuerySub.fn.init.prototype = jQuerySub.fn;
		var rootjQuerySub = jQuerySub(document);
		return jQuerySub;
	},

	browser: {}
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

browserMatch = jQuery.uaMatch( userAgent );
if ( browserMatch.browser ) {
	jQuery.browser[ browserMatch.browser ] = true;
	jQuery.browser.version = browserMatch.version;
}

// Deprecated, use jQuery.browser.webkit instead
if ( jQuery.browser.webkit ) {
	jQuery.browser.safari = true;
}

// IE doesn't match non-breaking spaces with \s
if ( rnotwhite.test( "\xA0" ) ) {
	trimLeft = /^[\s\xA0]+/;
	trimRight = /[\s\xA0]+$/;
}

// All jQuery objects should point back to these
rootjQuery = jQuery(document);

// Cleanup functions for the document ready method
if ( document.addEventListener ) {
	DOMContentLoaded = function() {
		document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );
		jQuery.ready();
	};

} else if ( document.attachEvent ) {
	DOMContentLoaded = function() {
		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( document.readyState === "complete" ) {
			document.detachEvent( "onreadystatechange", DOMContentLoaded );
			jQuery.ready();
		}
	};
}

// The DOM ready check for Internet Explorer
function doScrollCheck() {
	if ( jQuery.isReady ) {
		return;
	}

	try {
		// If IE is used, use the trick by Diego Perini
		// http://javascript.nwbox.com/IEContentLoaded/
		document.documentElement.doScroll("left");
	} catch(e) {
		setTimeout( doScrollCheck, 1 );
		return;
	}

	// and execute any waiting functions
	jQuery.ready();
}

return jQuery;

})();


// String to Object flags format cache
var flagsCache = {};

// Convert String-formatted flags into Object-formatted ones and store in cache
function createFlags( flags ) {
	var object = flagsCache[ flags ] = {},
		i, length;
	flags = flags.split( /\s+/ );
	for ( i = 0, length = flags.length; i < length; i++ ) {
		object[ flags[i] ] = true;
	}
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	flags:	an optional list of space-separated flags that will change how
 *			the callback list behaves
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible flags:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( flags ) {

	// Convert flags from String-formatted to Object-formatted
	// (we check in cache first)
	flags = flags ? ( flagsCache[ flags ] || createFlags( flags ) ) : {};

	var // Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = [],
		// Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Add one or several callbacks to the list
		add = function( args ) {
			var i,
				length,
				elem,
				type,
				actual;
			for ( i = 0, length = args.length; i < length; i++ ) {
				elem = args[ i ];
				type = jQuery.type( elem );
				if ( type === "array" ) {
					// Inspect recursively
					add( elem );
				} else if ( type === "function" ) {
					// Add if not in unique mode and callback is not in
					if ( !flags.unique || !self.has( elem ) ) {
						list.push( elem );
					}
				}
			}
		},
		// Fire callbacks
		fire = function( context, args ) {
			args = args || [];
			memory = !flags.memory || [ context, args ];
			firing = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( context, args ) === false && flags.stopOnFalse ) {
					memory = true; // Mark as halted
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( !flags.once ) {
					if ( stack && stack.length ) {
						memory = stack.shift();
						self.fireWith( memory[ 0 ], memory[ 1 ] );
					}
				} else if ( memory === true ) {
					self.disable();
				} else {
					list = [];
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					var length = list.length;
					add( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away, unless previous
					// firing was halted (stopOnFalse)
					} else if ( memory && memory !== true ) {
						firingStart = length;
						fire( memory[ 0 ], memory[ 1 ] );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					var args = arguments,
						argIndex = 0,
						argLength = args.length;
					for ( ; argIndex < argLength ; argIndex++ ) {
						for ( var i = 0; i < list.length; i++ ) {
							if ( args[ argIndex ] === list[ i ] ) {
								// Handle firingIndex and firingLength
								if ( firing ) {
									if ( i <= firingLength ) {
										firingLength--;
										if ( i <= firingIndex ) {
											firingIndex--;
										}
									}
								}
								// Remove the element
								list.splice( i--, 1 );
								// If we have some unicity property then
								// we only need to do this once
								if ( flags.unique ) {
									break;
								}
							}
						}
					}
				}
				return this;
			},
			// Control if a given callback is in the list
			has: function( fn ) {
				if ( list ) {
					var i = 0,
						length = list.length;
					for ( ; i < length; i++ ) {
						if ( fn === list[ i ] ) {
							return true;
						}
					}
				}
				return false;
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory || memory === true ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( stack ) {
					if ( firing ) {
						if ( !flags.once ) {
							stack.push( [ context, args ] );
						}
					} else if ( !( flags.once && memory ) ) {
						fire( context, args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!memory;
			}
		};

	return self;
};




var // Static reference to slice
	sliceDeferred = [].slice;

jQuery.extend({

	Deferred: function( func ) {
		var doneList = jQuery.Callbacks( "once memory" ),
			failList = jQuery.Callbacks( "once memory" ),
			progressList = jQuery.Callbacks( "memory" ),
			state = "pending",
			lists = {
				resolve: doneList,
				reject: failList,
				notify: progressList
			},
			promise = {
				done: doneList.add,
				fail: failList.add,
				progress: progressList.add,

				state: function() {
					return state;
				},

				// Deprecated
				isResolved: doneList.fired,
				isRejected: failList.fired,

				then: function( doneCallbacks, failCallbacks, progressCallbacks ) {
					deferred.done( doneCallbacks ).fail( failCallbacks ).progress( progressCallbacks );
					return this;
				},
				always: function() {
					deferred.done.apply( deferred, arguments ).fail.apply( deferred, arguments );
					return this;
				},
				pipe: function( fnDone, fnFail, fnProgress ) {
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( {
							done: [ fnDone, "resolve" ],
							fail: [ fnFail, "reject" ],
							progress: [ fnProgress, "notify" ]
						}, function( handler, data ) {
							var fn = data[ 0 ],
								action = data[ 1 ],
								returned;
							if ( jQuery.isFunction( fn ) ) {
								deferred[ handler ](function() {
									returned = fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise().then( newDefer.resolve, newDefer.reject, newDefer.notify );
									} else {
										newDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );
									}
								});
							} else {
								deferred[ handler ]( newDefer[ action ] );
							}
						});
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					if ( obj == null ) {
						obj = promise;
					} else {
						for ( var key in promise ) {
							obj[ key ] = promise[ key ];
						}
					}
					return obj;
				}
			},
			deferred = promise.promise({}),
			key;

		for ( key in lists ) {
			deferred[ key ] = lists[ key ].fire;
			deferred[ key + "With" ] = lists[ key ].fireWith;
		}

		// Handle state
		deferred.done( function() {
			state = "resolved";
		}, failList.disable, progressList.lock ).fail( function() {
			state = "rejected";
		}, doneList.disable, progressList.lock );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( firstParam ) {
		var args = sliceDeferred.call( arguments, 0 ),
			i = 0,
			length = args.length,
			pValues = new Array( length ),
			count = length,
			pCount = length,
			deferred = length <= 1 && firstParam && jQuery.isFunction( firstParam.promise ) ?
				firstParam :
				jQuery.Deferred(),
			promise = deferred.promise();
		function resolveFunc( i ) {
			return function( value ) {
				args[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;
				if ( !( --count ) ) {
					deferred.resolveWith( deferred, args );
				}
			};
		}
		function progressFunc( i ) {
			return function( value ) {
				pValues[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;
				deferred.notifyWith( promise, pValues );
			};
		}
		if ( length > 1 ) {
			for ( ; i < length; i++ ) {
				if ( args[ i ] && args[ i ].promise && jQuery.isFunction( args[ i ].promise ) ) {
					args[ i ].promise().then( resolveFunc(i), deferred.reject, progressFunc(i) );
				} else {
					--count;
				}
			}
			if ( !count ) {
				deferred.resolveWith( deferred, args );
			}
		} else if ( deferred !== firstParam ) {
			deferred.resolveWith( deferred, length ? [ firstParam ] : [] );
		}
		return promise;
	}
});




jQuery.support = (function() {

	var support,
		all,
		a,
		select,
		opt,
		input,
		marginDiv,
		fragment,
		tds,
		events,
		eventName,
		i,
		isSupported,
		div = document.createElement( "div" ),
		documentElement = document.documentElement;

	// Preliminary tests
	div.setAttribute("className", "t");
	div.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";

	all = div.getElementsByTagName( "*" );
	a = div.getElementsByTagName( "a" )[ 0 ];

	// Can't get basic test support
	if ( !all || !all.length || !a ) {
		return {};
	}

	// First batch of supports tests
	select = document.createElement( "select" );
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName( "input" )[ 0 ];

	support = {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: ( div.firstChild.nodeType === 3 ),

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName("tbody").length,

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName("link").length,

		// Get the style information from getAttribute
		// (IE uses .cssText instead)
		style: /top/.test( a.getAttribute("style") ),

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: ( a.getAttribute("href") === "/a" ),

		// Make sure that element opacity exists
		// (IE uses filter instead)
		// Use a regex to work around a WebKit issue. See #5145
		opacity: /^0.55/.test( a.style.opacity ),

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Make sure that if no value is specified for a checkbox
		// that it defaults to "on".
		// (WebKit defaults to "" instead)
		checkOn: ( input.value === "on" ),

		// Make sure that a selected-by-default option has a working selected property.
		// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
		optSelected: opt.selected,

		// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
		getSetAttribute: div.className !== "t",

		// Tests for enctype support on a form(#6743)
		enctype: !!document.createElement("form").enctype,

		// Makes sure cloning an html5 element does not cause problems
		// Where outerHTML is undefined, this still works
		html5Clone: document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>",

		// Will be defined later
		submitBubbles: true,
		changeBubbles: true,
		focusinBubbles: false,
		deleteExpando: true,
		noCloneEvent: true,
		inlineBlockNeedsLayout: false,
		shrinkWrapBlocks: false,
		reliableMarginRight: true
	};

	// Make sure checked status is properly cloned
	input.checked = true;
	support.noCloneChecked = input.cloneNode( true ).checked;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Test to see if it's possible to delete an expando from an element
	// Fails in Internet Explorer
	try {
		delete div.test;
	} catch( e ) {
		support.deleteExpando = false;
	}

	if ( !div.addEventListener && div.attachEvent && div.fireEvent ) {
		div.attachEvent( "onclick", function() {
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			support.noCloneEvent = false;
		});
		div.cloneNode( true ).fireEvent( "onclick" );
	}

	// Check if a radio maintains its value
	// after being appended to the DOM
	input = document.createElement("input");
	input.value = "t";
	input.setAttribute("type", "radio");
	support.radioValue = input.value === "t";

	input.setAttribute("checked", "checked");
	div.appendChild( input );
	fragment = document.createDocumentFragment();
	fragment.appendChild( div.lastChild );

	// WebKit doesn't clone checked state correctly in fragments
	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	support.appendChecked = input.checked;

	fragment.removeChild( input );
	fragment.appendChild( div );

	div.innerHTML = "";

	// Check if div with explicit width and no margin-right incorrectly
	// gets computed margin-right based on width of container. For more
	// info see bug #3333
	// Fails in WebKit before Feb 2011 nightlies
	// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
	if ( window.getComputedStyle ) {
		marginDiv = document.createElement( "div" );
		marginDiv.style.width = "0";
		marginDiv.style.marginRight = "0";
		div.style.width = "2px";
		div.appendChild( marginDiv );
		support.reliableMarginRight =
			( parseInt( ( window.getComputedStyle( marginDiv, null ) || { marginRight: 0 } ).marginRight, 10 ) || 0 ) === 0;
	}

	// Technique from Juriy Zaytsev
	// http://perfectionkills.com/detecting-event-support-without-browser-sniffing/
	// We only care about the case where non-standard event systems
	// are used, namely in IE. Short-circuiting here helps us to
	// avoid an eval call (in setAttribute) which can cause CSP
	// to go haywire. See: https://developer.mozilla.org/en/Security/CSP
	if ( div.attachEvent ) {
		for( i in {
			submit: 1,
			change: 1,
			focusin: 1
		}) {
			eventName = "on" + i;
			isSupported = ( eventName in div );
			if ( !isSupported ) {
				div.setAttribute( eventName, "return;" );
				isSupported = ( typeof div[ eventName ] === "function" );
			}
			support[ i + "Bubbles" ] = isSupported;
		}
	}

	fragment.removeChild( div );

	// Null elements to avoid leaks in IE
	fragment = select = opt = marginDiv = div = input = null;

	// Run tests that need a body at doc ready
	jQuery(function() {
		var container, outer, inner, table, td, offsetSupport,
			conMarginTop, ptlm, vb, style, html,
			body = document.getElementsByTagName("body")[0];

		if ( !body ) {
			// Return for frameset docs that don't have a body
			return;
		}

		conMarginTop = 1;
		ptlm = "position:absolute;top:0;left:0;width:1px;height:1px;margin:0;";
		vb = "visibility:hidden;border:0;";
		style = "style='" + ptlm + "border:5px solid #000;padding:0;'";
		html = "<div " + style + "><div></div></div>" +
			"<table " + style + " cellpadding='0' cellspacing='0'>" +
			"<tr><td></td></tr></table>";

		container = document.createElement("div");
		container.style.cssText = vb + "width:0;height:0;position:static;top:0;margin-top:" + conMarginTop + "px";
		body.insertBefore( container, body.firstChild );

		// Construct the test element
		div = document.createElement("div");
		container.appendChild( div );

		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		// (only IE 8 fails this test)
		div.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>";
		tds = div.getElementsByTagName( "td" );
		isSupported = ( tds[ 0 ].offsetHeight === 0 );

		tds[ 0 ].style.display = "";
		tds[ 1 ].style.display = "none";

		// Check if empty table cells still have offsetWidth/Height
		// (IE <= 8 fail this test)
		support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );

		// Figure out if the W3C box model works as expected
		div.innerHTML = "";
		div.style.width = div.style.paddingLeft = "1px";
		jQuery.boxModel = support.boxModel = div.offsetWidth === 2;

		if ( typeof div.style.zoom !== "undefined" ) {
			// Check if natively block-level elements act like inline-block
			// elements when setting their display to 'inline' and giving
			// them layout
			// (IE < 8 does this)
			div.style.display = "inline";
			div.style.zoom = 1;
			support.inlineBlockNeedsLayout = ( div.offsetWidth === 2 );

			// Check if elements with layout shrink-wrap their children
			// (IE 6 does this)
			div.style.display = "";
			div.innerHTML = "<div style='width:4px;'></div>";
			support.shrinkWrapBlocks = ( div.offsetWidth !== 2 );
		}

		div.style.cssText = ptlm + vb;
		div.innerHTML = html;

		outer = div.firstChild;
		inner = outer.firstChild;
		td = outer.nextSibling.firstChild.firstChild;

		offsetSupport = {
			doesNotAddBorder: ( inner.offsetTop !== 5 ),
			doesAddBorderForTableAndCells: ( td.offsetTop === 5 )
		};

		inner.style.position = "fixed";
		inner.style.top = "20px";

		// safari subtracts parent border width here which is 5px
		offsetSupport.fixedPosition = ( inner.offsetTop === 20 || inner.offsetTop === 15 );
		inner.style.position = inner.style.top = "";

		outer.style.overflow = "hidden";
		outer.style.position = "relative";

		offsetSupport.subtractsBorderForOverflowNotVisible = ( inner.offsetTop === -5 );
		offsetSupport.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== conMarginTop );

		body.removeChild( container );
		div  = container = null;

		jQuery.extend( support, offsetSupport );
	});

	return support;
})();




var rbrace = /^(?:\{.*\}|\[.*\])$/,
	rmultiDash = /([A-Z])/g;

jQuery.extend({
	cache: {},

	// Please use with caution
	uuid: 0,

	// Unique for each copy of jQuery on the page
	// Non-digits removed to match rinlinejQuery
	expando: "jQuery" + ( jQuery.fn.jquery + Math.random() ).replace( /\D/g, "" ),

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"embed": true,
		// Ban all objects except for Flash (which handle expandos)
		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
		"applet": true
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var privateCache, thisCache, ret,
			internalKey = jQuery.expando,
			getByName = typeof name === "string",

			// We have to handle DOM nodes and JS objects differently because IE6-7
			// can't GC object references properly across the DOM-JS boundary
			isNode = elem.nodeType,

			// Only DOM nodes need the global jQuery cache; JS object data is
			// attached directly to the object so GC can occur automatically
			cache = isNode ? jQuery.cache : elem,

			// Only defining an ID for JS objects if its cache already exists allows
			// the code to shortcut on the same path as a DOM node with no cache
			id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey,
			isEvents = name === "events";

		// Avoid doing any more work than we need to when trying to get data on an
		// object that has no data at all
		if ( (!id || !cache[id] || (!isEvents && !pvt && !cache[id].data)) && getByName && data === undefined ) {
			return;
		}

		if ( !id ) {
			// Only DOM nodes need a new unique ID for each element since their data
			// ends up in the global cache
			if ( isNode ) {
				elem[ internalKey ] = id = ++jQuery.uuid;
			} else {
				id = internalKey;
			}
		}

		if ( !cache[ id ] ) {
			cache[ id ] = {};

			// Avoids exposing jQuery metadata on plain JS objects when the object
			// is serialized using JSON.stringify
			if ( !isNode ) {
				cache[ id ].toJSON = jQuery.noop;
			}
		}

		// An object can be passed to jQuery.data instead of a key/value pair; this gets
		// shallow copied over onto the existing cache
		if ( typeof name === "object" || typeof name === "function" ) {
			if ( pvt ) {
				cache[ id ] = jQuery.extend( cache[ id ], name );
			} else {
				cache[ id ].data = jQuery.extend( cache[ id ].data, name );
			}
		}

		privateCache = thisCache = cache[ id ];

		// jQuery data() is stored in a separate object inside the object's internal data
		// cache in order to avoid key collisions between internal data and user-defined
		// data.
		if ( !pvt ) {
			if ( !thisCache.data ) {
				thisCache.data = {};
			}

			thisCache = thisCache.data;
		}

		if ( data !== undefined ) {
			thisCache[ jQuery.camelCase( name ) ] = data;
		}

		// Users should not attempt to inspect the internal events object using jQuery.data,
		// it is undocumented and subject to change. But does anyone listen? No.
		if ( isEvents && !thisCache[ name ] ) {
			return privateCache.events;
		}

		// Check for both converted-to-camel and non-converted data property names
		// If a data property was specified
		if ( getByName ) {

			// First Try to find as-is property data
			ret = thisCache[ name ];

			// Test for null|undefined property data
			if ( ret == null ) {

				// Try to find the camelCased property
				ret = thisCache[ jQuery.camelCase( name ) ];
			}
		} else {
			ret = thisCache;
		}

		return ret;
	},

	removeData: function( elem, name, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, i, l,

			// Reference to internal data cache key
			internalKey = jQuery.expando,

			isNode = elem.nodeType,

			// See jQuery.data for more information
			cache = isNode ? jQuery.cache : elem,

			// See jQuery.data for more information
			id = isNode ? elem[ internalKey ] : internalKey;

		// If there is already no cache entry for this object, there is no
		// purpose in continuing
		if ( !cache[ id ] ) {
			return;
		}

		if ( name ) {

			thisCache = pvt ? cache[ id ] : cache[ id ].data;

			if ( thisCache ) {

				// Support array or space separated string names for data keys
				if ( !jQuery.isArray( name ) ) {

					// try the string as a key before any manipulation
					if ( name in thisCache ) {
						name = [ name ];
					} else {

						// split the camel cased version by spaces unless a key with the spaces exists
						name = jQuery.camelCase( name );
						if ( name in thisCache ) {
							name = [ name ];
						} else {
							name = name.split( " " );
						}
					}
				}

				for ( i = 0, l = name.length; i < l; i++ ) {
					delete thisCache[ name[i] ];
				}

				// If there is no data left in the cache, we want to continue
				// and let the cache object itself get destroyed
				if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {
					return;
				}
			}
		}

		// See jQuery.data for more information
		if ( !pvt ) {
			delete cache[ id ].data;

			// Don't destroy the parent cache unless the internal data object
			// had been the only thing left in it
			if ( !isEmptyDataObject(cache[ id ]) ) {
				return;
			}
		}

		// Browsers that fail expando deletion also refuse to delete expandos on
		// the window, but it will allow it on all other JS objects; other browsers
		// don't care
		// Ensure that `cache` is not a window object #10080
		if ( jQuery.support.deleteExpando || !cache.setInterval ) {
			delete cache[ id ];
		} else {
			cache[ id ] = null;
		}

		// We destroyed the cache and need to eliminate the expando on the node to avoid
		// false lookups in the cache for entries that no longer exist
		if ( isNode ) {
			// IE does not allow us to delete expando properties from nodes,
			// nor does it have a removeAttribute function on Document nodes;
			// we must handle all of these cases
			if ( jQuery.support.deleteExpando ) {
				delete elem[ internalKey ];
			} else if ( elem.removeAttribute ) {
				elem.removeAttribute( internalKey );
			} else {
				elem[ internalKey ] = null;
			}
		}
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return jQuery.data( elem, name, data, true );
	},

	// A method for determining if a DOM node can handle the data expando
	acceptData: function( elem ) {
		if ( elem.nodeName ) {
			var match = jQuery.noData[ elem.nodeName.toLowerCase() ];

			if ( match ) {
				return !(match === true || elem.getAttribute("classid") !== match);
			}
		}

		return true;
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var parts, attr, name,
			data = null;

		if ( typeof key === "undefined" ) {
			if ( this.length ) {
				data = jQuery.data( this[0] );

				if ( this[0].nodeType === 1 && !jQuery._data( this[0], "parsedAttrs" ) ) {
					attr = this[0].attributes;
					for ( var i = 0, l = attr.length; i < l; i++ ) {
						name = attr[i].name;

						if ( name.indexOf( "data-" ) === 0 ) {
							name = jQuery.camelCase( name.substring(5) );

							dataAttr( this[0], name, data[ name ] );
						}
					}
					jQuery._data( this[0], "parsedAttrs", true );
				}
			}

			return data;

		} else if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		parts = key.split(".");
		parts[1] = parts[1] ? "." + parts[1] : "";

		if ( value === undefined ) {
			data = this.triggerHandler("getData" + parts[1] + "!", [parts[0]]);

			// Try to fetch any internally stored data first
			if ( data === undefined && this.length ) {
				data = jQuery.data( this[0], key );
				data = dataAttr( this[0], key, data );
			}

			return data === undefined && parts[1] ?
				this.data( parts[0] ) :
				data;

		} else {
			return this.each(function() {
				var self = jQuery( this ),
					args = [ parts[0], value ];

				self.triggerHandler( "setData" + parts[1] + "!", args );
				jQuery.data( this, key, value );
				self.triggerHandler( "changeData" + parts[1] + "!", args );
			});
		}
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
				data === "false" ? false :
				data === "null" ? null :
				jQuery.isNumeric( data ) ? parseFloat( data ) :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	for ( var name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}




function handleQueueMarkDefer( elem, type, src ) {
	var deferDataKey = type + "defer",
		queueDataKey = type + "queue",
		markDataKey = type + "mark",
		defer = jQuery._data( elem, deferDataKey );
	if ( defer &&
		( src === "queue" || !jQuery._data(elem, queueDataKey) ) &&
		( src === "mark" || !jQuery._data(elem, markDataKey) ) ) {
		// Give room for hard-coded callbacks to fire first
		// and eventually mark/queue something else on the element
		setTimeout( function() {
			if ( !jQuery._data( elem, queueDataKey ) &&
				!jQuery._data( elem, markDataKey ) ) {
				jQuery.removeData( elem, deferDataKey, true );
				defer.fire();
			}
		}, 0 );
	}
}

jQuery.extend({

	_mark: function( elem, type ) {
		if ( elem ) {
			type = ( type || "fx" ) + "mark";
			jQuery._data( elem, type, (jQuery._data( elem, type ) || 0) + 1 );
		}
	},

	_unmark: function( force, elem, type ) {
		if ( force !== true ) {
			type = elem;
			elem = force;
			force = false;
		}
		if ( elem ) {
			type = type || "fx";
			var key = type + "mark",
				count = force ? 0 : ( (jQuery._data( elem, key ) || 1) - 1 );
			if ( count ) {
				jQuery._data( elem, key, count );
			} else {
				jQuery.removeData( elem, key, true );
				handleQueueMarkDefer( elem, type, "mark" );
			}
		}
	},

	queue: function( elem, type, data ) {
		var q;
		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			q = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !q || jQuery.isArray(data) ) {
					q = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					q.push( data );
				}
			}
			return q || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			fn = queue.shift(),
			hooks = {};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
		}

		if ( fn ) {
			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			jQuery._data( elem, type + ".run", hooks );
			fn.call( elem, function() {
				jQuery.dequeue( elem, type );
			}, hooks );
		}

		if ( !queue.length ) {
			jQuery.removeData( elem, type + "queue " + type + ".run", true );
			handleQueueMarkDefer( elem, type, "queue" );
		}
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
		}

		if ( data === undefined ) {
			return jQuery.queue( this[0], type );
		}
		return this.each(function() {
			var queue = jQuery.queue( this, type, data );

			if ( type === "fx" && queue[0] !== "inprogress" ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, object ) {
		if ( typeof type !== "string" ) {
			object = type;
			type = undefined;
		}
		type = type || "fx";
		var defer = jQuery.Deferred(),
			elements = this,
			i = elements.length,
			count = 1,
			deferDataKey = type + "defer",
			queueDataKey = type + "queue",
			markDataKey = type + "mark",
			tmp;
		function resolve() {
			if ( !( --count ) ) {
				defer.resolveWith( elements, [ elements ] );
			}
		}
		while( i-- ) {
			if (( tmp = jQuery.data( elements[ i ], deferDataKey, undefined, true ) ||
					( jQuery.data( elements[ i ], queueDataKey, undefined, true ) ||
						jQuery.data( elements[ i ], markDataKey, undefined, true ) ) &&
					jQuery.data( elements[ i ], deferDataKey, jQuery.Callbacks( "once memory" ), true ) )) {
				count++;
				tmp.add( resolve );
			}
		}
		resolve();
		return defer.promise();
	}
});




var rclass = /[\n\t\r]/g,
	rspace = /\s+/,
	rreturn = /\r/g,
	rtype = /^(?:button|input)$/i,
	rfocusable = /^(?:button|input|object|select|textarea)$/i,
	rclickable = /^a(?:rea)?$/i,
	rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
	getSetAttribute = jQuery.support.getSetAttribute,
	nodeHook, boolHook, fixSpecified;

jQuery.fn.extend({
	attr: function( name, value ) {
		return jQuery.access( this, name, value, true, jQuery.attr );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	},

	prop: function( name, value ) {
		return jQuery.access( this, name, value, true, jQuery.prop );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	},

	addClass: function( value ) {
		var classNames, i, l, elem,
			setClass, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call(this, j, this.className) );
			});
		}

		if ( value && typeof value === "string" ) {
			classNames = value.split( rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 ) {
					if ( !elem.className && classNames.length === 1 ) {
						elem.className = value;

					} else {
						setClass = " " + elem.className + " ";

						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							if ( !~setClass.indexOf( " " + classNames[ c ] + " " ) ) {
								setClass += classNames[ c ] + " ";
							}
						}
						elem.className = jQuery.trim( setClass );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classNames, i, l, elem, className, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call(this, j, this.className) );
			});
		}

		if ( (value && typeof value === "string") || value === undefined ) {
			classNames = ( value || "" ).split( rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 && elem.className ) {
					if ( value ) {
						className = (" " + elem.className + " ").replace( rclass, " " );
						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							className = className.replace(" " + classNames[ c ] + " ", " ");
						}
						elem.className = jQuery.trim( className );

					} else {
						elem.className = "";
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isBool = typeof stateVal === "boolean";

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					state = stateVal,
					classNames = value.split( rspace );

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space seperated list
					state = isBool ? state : !self.hasClass( className );
					self[ state ? "addClass" : "removeClass" ]( className );
				}

			} else if ( type === "undefined" || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// toggle whole className
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.nodeName.toLowerCase() ] || jQuery.valHooks[ elem.type ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var self = jQuery(this), val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, self.val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map(val, function ( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.nodeName.toLowerCase() ] || jQuery.valHooks[ this.type ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				// attributes.value is undefined in Blackberry 4.7 but
				// uses .value. See #6932
				var val = elem.attributes.value;
				return !val || val.specified ? elem.value : elem.text;
			}
		},
		select: {
			get: function( elem ) {
				var value, i, max, option,
					index = elem.selectedIndex,
					values = [],
					options = elem.options,
					one = elem.type === "select-one";

				// Nothing was selected
				if ( index < 0 ) {
					return null;
				}

				// Loop through all the selected options
				i = one ? index : 0;
				max = one ? index + 1 : options.length;
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Don't return options that are disabled or in a disabled optgroup
					if ( option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) &&
							(!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" )) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				// Fixes Bug #2551 -- select.val() broken in IE after form.reset()
				if ( one && !values.length && options.length ) {
					return jQuery( options[ index ] ).val();
				}

				return values;
			},

			set: function( elem, value ) {
				var values = jQuery.makeArray( value );

				jQuery(elem).find("option").each(function() {
					this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;
				});

				if ( !values.length ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	},

	attrFn: {
		val: true,
		css: true,
		html: true,
		text: true,
		data: true,
		width: true,
		height: true,
		offset: true
	},

	attr: function( elem, name, value, pass ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( pass && name in jQuery.attrFn ) {
			return jQuery( elem )[ name ]( value );
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( notxml ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;

			} else if ( hooks && "set" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, "" + value );
				return value;
			}

		} else if ( hooks && "get" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {

			ret = elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return ret === null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var propName, attrNames, name, l,
			i = 0;

		if ( value && elem.nodeType === 1 ) {
			attrNames = value.toLowerCase().split( rspace );
			l = attrNames.length;

			for ( ; i < l; i++ ) {
				name = attrNames[ i ];

				if ( name ) {
					propName = jQuery.propFix[ name ] || name;

					// See #9699 for explanation of this approach (setting first, then removal)
					jQuery.attr( elem, name, "" );
					elem.removeAttribute( getSetAttribute ? name : propName );

					// Set corresponding property to false for boolean attributes
					if ( rboolean.test( name ) && propName in elem ) {
						elem[ propName ] = false;
					}
				}
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				// We can't allow the type property to be changed (since it causes problems in IE)
				if ( rtype.test( elem.nodeName ) && elem.parentNode ) {
					jQuery.error( "type property can't be changed" );
				} else if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to it's default in case type is set after value
					// This is for element creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		},
		// Use the value property for back compat
		// Use the nodeHook for button elements in IE6/7 (#1954)
		value: {
			get: function( elem, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.get( elem, name );
				}
				return name in elem ?
					elem.value :
					null;
			},
			set: function( elem, value, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.set( elem, value, name );
				}
				// Does not return so that setAttribute is also used
				elem.value = value;
			}
		}
	},

	propFix: {
		tabindex: "tabIndex",
		readonly: "readOnly",
		"for": "htmlFor",
		"class": "className",
		maxlength: "maxLength",
		cellspacing: "cellSpacing",
		cellpadding: "cellPadding",
		rowspan: "rowSpan",
		colspan: "colSpan",
		usemap: "useMap",
		frameborder: "frameBorder",
		contenteditable: "contentEditable"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				return ( elem[ name ] = value );
			}

		} else {
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;

			} else {
				return elem[ name ];
			}
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				var attributeNode = elem.getAttributeNode("tabindex");

				return attributeNode && attributeNode.specified ?
					parseInt( attributeNode.value, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						undefined;
			}
		}
	}
});

// Add the tabIndex propHook to attrHooks for back-compat (different case is intentional)
jQuery.attrHooks.tabindex = jQuery.propHooks.tabIndex;

// Hook for boolean attributes
boolHook = {
	get: function( elem, name ) {
		// Align boolean attributes with corresponding properties
		// Fall back to attribute presence where some booleans are not supported
		var attrNode,
			property = jQuery.prop( elem, name );
		return property === true || typeof property !== "boolean" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?
			name.toLowerCase() :
			undefined;
	},
	set: function( elem, value, name ) {
		var propName;
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			// value is true since we know at this point it's type boolean and not false
			// Set boolean attributes to the same name and set the DOM property
			propName = jQuery.propFix[ name ] || name;
			if ( propName in elem ) {
				// Only set the IDL specifically if it already exists on the element
				elem[ propName ] = true;
			}

			elem.setAttribute( name, name.toLowerCase() );
		}
		return name;
	}
};

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	fixSpecified = {
		name: true,
		id: true
	};

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret;
			ret = elem.getAttributeNode( name );
			return ret && ( fixSpecified[ name ] ? ret.nodeValue !== "" : ret.specified ) ?
				ret.nodeValue :
				undefined;
		},
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				ret = document.createAttribute( name );
				elem.setAttributeNode( ret );
			}
			return ( ret.nodeValue = value + "" );
		}
	};

	// Apply the nodeHook to tabindex
	jQuery.attrHooks.tabindex.set = nodeHook.set;

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		});
	});

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		get: nodeHook.get,
		set: function( elem, value, name ) {
			if ( value === "" ) {
				value = "false";
			}
			nodeHook.set( elem, value, name );
		}
	};
}


// Some attributes require a special call on IE
if ( !jQuery.support.hrefNormalized ) {
	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			get: function( elem ) {
				var ret = elem.getAttribute( name, 2 );
				return ret === null ? undefined : ret;
			}
		});
	});
}

if ( !jQuery.support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Normalize to lowercase since IE uppercases css property names
			return elem.style.cssText.toLowerCase() || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = "" + value );
		}
	};
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
	jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	});
}

// IE6/7 call enctype encoding
if ( !jQuery.support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}

// Radios and checkboxes getter/setter
if ( !jQuery.support.checkOn ) {
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			get: function( elem ) {
				// Handle the case where in Webkit "" is returned instead of "on" if a value isn't specified
				return elem.getAttribute("value") === null ? "on" : elem.value;
			}
		};
	});
}
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	});
});




var rformElems = /^(?:textarea|input|select)$/i,
	rtypenamespace = /^([^\.]*)?(?:\.(.+))?$/,
	rhoverHack = /\bhover(\.\S+)?\b/,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rquickIs = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,
	quickParse = function( selector ) {
		var quick = rquickIs.exec( selector );
		if ( quick ) {
			//   0  1    2   3
			// [ _, tag, id, class ]
			quick[1] = ( quick[1] || "" ).toLowerCase();
			quick[3] = quick[3] && new RegExp( "(?:^|\\s)" + quick[3] + "(?:\\s|$)" );
		}
		return quick;
	},
	quickIs = function( elem, m ) {
		var attrs = elem.attributes || {};
		return (
			(!m[1] || elem.nodeName.toLowerCase() === m[1]) &&
			(!m[2] || (attrs.id || {}).value === m[2]) &&
			(!m[3] || m[3].test( (attrs[ "class" ] || {}).value ))
		);
	},
	hoverHack = function( events ) {
		return jQuery.event.special.hover ? events : events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );
	};

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	add: function( elem, types, handler, data, selector ) {

		var elemData, eventHandle, events,
			t, tns, type, namespaces, handleObj,
			handleObjIn, quick, handlers, special;

		// Don't attach events to noData or text/comment nodes (allow plain objects tho)
		if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		events = elemData.events;
		if ( !events ) {
			elemData.events = events = {};
		}
		eventHandle = elemData.handle;
		if ( !eventHandle ) {
			elemData.handle = eventHandle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		types = jQuery.trim( hoverHack(types) ).split( " " );
		for ( t = 0; t < types.length; t++ ) {

			tns = rtypenamespace.exec( types[t] ) || [];
			type = tns[1];
			namespaces = ( tns[2] || "" ).split( "." ).sort();

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: tns[1],
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				quick: quickParse( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			handlers = events[ type ];
			if ( !handlers ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	global: {},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var elemData = jQuery.hasData( elem ) && jQuery._data( elem ),
			t, tns, type, origType, namespaces, origCount,
			j, events, special, handle, eventType, handleObj;

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = jQuery.trim( hoverHack( types || "" ) ).split(" ");
		for ( t = 0; t < types.length; t++ ) {
			tns = rtypenamespace.exec( types[t] ) || [];
			type = origType = tns[1];
			namespaces = tns[2];

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector? special.delegateType : special.bindType ) || type;
			eventType = events[ type ] || [];
			origCount = eventType.length;
			namespaces = namespaces ? new RegExp("(^|\\.)" + namespaces.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;

			// Remove matching events
			for ( j = 0; j < eventType.length; j++ ) {
				handleObj = eventType[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					 ( !handler || handler.guid === handleObj.guid ) &&
					 ( !namespaces || namespaces.test( handleObj.namespace ) ) &&
					 ( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					eventType.splice( j--, 1 );

					if ( handleObj.selector ) {
						eventType.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( eventType.length === 0 && origCount !== eventType.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			handle = elemData.handle;
			if ( handle ) {
				handle.elem = null;
			}

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery.removeData( elem, [ "events", "handle" ], true );
		}
	},

	// Events that are safe to short-circuit if no handlers are attached.
	// Native DOM events should not be added, they may have inline handlers.
	customEvent: {
		"getData": true,
		"setData": true,
		"changeData": true
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		// Don't do events on text and comment nodes
		if ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {
			return;
		}

		// Event object or event type
		var type = event.type || event,
			namespaces = [],
			cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType;

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "!" ) >= 0 ) {
			// Exclusive events trigger only for the exact event (no namespaces)
			type = type.slice(0, -1);
			exclusive = true;
		}

		if ( type.indexOf( "." ) >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}

		if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {
			// No jQuery handlers for this event type, and it can't have inline handlers
			return;
		}

		// Caller can pass in an Event, Object, or just an event type string
		event = typeof event === "object" ?
			// jQuery.Event object
			event[ jQuery.expando ] ? event :
			// Object literal
			new jQuery.Event( type, event ) :
			// Just the event type (string)
			new jQuery.Event( type );

		event.type = type;
		event.isTrigger = true;
		event.exclusive = exclusive;
		event.namespace = namespaces.join( "." );
		event.namespace_re = event.namespace? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
		ontype = type.indexOf( ":" ) < 0 ? "on" + type : "";

		// Handle a global trigger
		if ( !elem ) {

			// TODO: Stop taunting the data cache; remove global events and always attach to document
			cache = jQuery.cache;
			for ( i in cache ) {
				if ( cache[ i ].events && cache[ i ].events[ type ] ) {
					jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );
				}
			}
			return;
		}

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data != null ? jQuery.makeArray( data ) : [];
		data.unshift( event );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		eventPath = [[ elem, special.bindType || type ]];
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;
			old = null;
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push([ cur, bubbleType ]);
				old = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( old && old === elem.ownerDocument ) {
				eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);
			}
		}

		// Fire handlers on the event path
		for ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {

			cur = eventPath[i][0];
			event.type = eventPath[i][1];

			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}
			// Note that this is a bare JS function and not a jQuery handler
			handle = ontype && cur[ ontype ];
			if ( handle && jQuery.acceptData( cur ) && handle.apply( cur, data ) === false ) {
				event.preventDefault();
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&
				!(type === "click" && jQuery.nodeName( elem, "a" )) && jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				// IE<9 dies on focus/blur to hidden element (#1486)
				if ( ontype && elem[ type ] && ((type !== "focus" && type !== "blur") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					old = elem[ ontype ];

					if ( old ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( old ) {
						elem[ ontype ] = old;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event || window.event );

		var handlers = ( (jQuery._data( this, "events" ) || {} )[ event.type ] || []),
			delegateCount = handlers.delegateCount,
			args = [].slice.call( arguments, 0 ),
			run_all = !event.exclusive && !event.namespace,
			handlerQueue = [],
			i, j, cur, jqcur, ret, selMatch, matched, matches, handleObj, sel, related;

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Determine handlers that should run if there are delegated events
		// Avoid disabled elements in IE (#6911) and non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && !event.target.disabled && !(event.button && event.type === "click") ) {

			// Pregenerate a single jQuery object for reuse with .is()
			jqcur = jQuery(this);
			jqcur.context = this.ownerDocument || this;

			for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {
				selMatch = {};
				matches = [];
				jqcur[0] = cur;
				for ( i = 0; i < delegateCount; i++ ) {
					handleObj = handlers[ i ];
					sel = handleObj.selector;

					if ( selMatch[ sel ] === undefined ) {
						selMatch[ sel ] = (
							handleObj.quick ? quickIs( cur, handleObj.quick ) : jqcur.is( sel )
						);
					}
					if ( selMatch[ sel ] ) {
						matches.push( handleObj );
					}
				}
				if ( matches.length ) {
					handlerQueue.push({ elem: cur, matches: matches });
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( handlers.length > delegateCount ) {
			handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });
		}

		// Run delegates first; they may want to stop propagation beneath us
		for ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {
			matched = handlerQueue[ i ];
			event.currentTarget = matched.elem;

			for ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {
				handleObj = matched.matches[ j ];

				// Triggered event must either 1) be non-exclusive and have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {

					event.data = handleObj.data;
					event.handleObj = handleObj;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						event.result = ret;
						if ( ret === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		return event.result;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	// *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***
	props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop,
			originalEvent = event,
			fixHook = jQuery.event.fixHooks[ event.type ] || {},
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = jQuery.Event( originalEvent );

		for ( i = copy.length; i; ) {
			prop = copy[ --i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Target should not be a text node (#504, Safari)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// For mouse/key events; add metaKey if it's not there (#3368, IE6/7/8)
		if ( event.metaKey === undefined ) {
			event.metaKey = event.ctrlKey;
		}

		return fixHook.filter? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		ready: {
			// Make sure the ready event is setup
			setup: jQuery.bindReady
		},

		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},

		focus: {
			delegateType: "focusin"
		},
		blur: {
			delegateType: "focusout"
		},

		beforeunload: {
			setup: function( data, namespaces, eventHandle ) {
				// We only want to do this special case on windows
				if ( jQuery.isWindow( this ) ) {
					this.onbeforeunload = eventHandle;
				}
			},

			teardown: function( namespaces, eventHandle ) {
				if ( this.onbeforeunload === eventHandle ) {
					this.onbeforeunload = null;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{ type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

// Some plugins are using, but it's undocumented/deprecated and will be removed.
// The 1.7 special event interface should provide all the hooks needed now.
jQuery.event.handle = jQuery.event.dispatch;

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		if ( elem.detachEvent ) {
			elem.detachEvent( "on" + type, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

function returnFalse() {
	return false;
}
function returnTrue() {
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	preventDefault: function() {
		this.isDefaultPrevented = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}

		// if preventDefault exists run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// otherwise set the returnValue property of the original event to false (IE)
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		this.isPropagationStopped = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}
		// if stopPropagation exists run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}
		// otherwise set the cancelBubble property of the original event to true (IE)
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj,
				selector = handleObj.selector,
				ret;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !jQuery.support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !form._submit_attached ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						// If form was submitted by the user, bubble the event up the tree
						if ( this.parentNode && !event.isTrigger ) {
							jQuery.event.simulate( "submit", this.parentNode, event, true );
						}
					});
					form._submit_attached = true;
				}
			});
			// return undefined since we don't need an event listener
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !jQuery.support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
							jQuery.event.simulate( "change", this, event, true );
						}
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !elem._change_attached ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					elem._change_attached = true;
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler while someone wants focusin/focusout
		var attaches = 0,
			handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				if ( attaches++ === 0 ) {
					document.addEventListener( orig, handler, true );
				}
			},
			teardown: function() {
				if ( --attaches === 0 ) {
					document.removeEventListener( orig, handler, true );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on.call( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			var handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace? handleObj.type + "." + handleObj.namespace : handleObj.type,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( var type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	live: function( types, data, fn ) {
		jQuery( this.context ).on( types, this.selector, data, fn );
		return this;
	},
	die: function( types, fn ) {
		jQuery( this.context ).off( types, this.selector || "**", fn );
		return this;
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length == 1? this.off( selector, "**" ) : this.off( types, selector, fn );
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		if ( this[0] ) {
			return jQuery.event.trigger( type, data, this[0], true );
		}
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args = arguments,
			guid = fn.guid || jQuery.guid++,
			i = 0,
			toggler = function( event ) {
				// Figure out which function to execute
				var lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;
				jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

				// Make sure that clicks stop
				event.preventDefault();

				// and execute the function
				return args[ lastToggle ].apply( this, arguments ) || false;
			};

		// link all the functions, so any of them can unbind this click handler
		toggler.guid = guid;
		while ( i < args.length ) {
			args[ i++ ].guid = guid;
		}

		return this.click( toggler );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
});

jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		if ( fn == null ) {
			fn = data;
			data = null;
		}

		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};

	if ( jQuery.attrFn ) {
		jQuery.attrFn[ name ] = true;
	}

	if ( rkeyEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;
	}

	if ( rmouseEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;
	}
});



/*!
 * Sizzle CSS Selector Engine
 *  Copyright 2011, The Dojo Foundation
 *  Released under the MIT, BSD, and GPL Licenses.
 *  More information: http://sizzlejs.com/
 */
(function(){

var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
	expando = "sizcache" + (Math.random() + '').replace('.', ''),
	done = 0,
	toString = Object.prototype.toString,
	hasDuplicate = false,
	baseHasDuplicate = true,
	rBackslash = /\\/g,
	rReturn = /\r\n/g,
	rNonWord = /\W/;

// Here we check if the JavaScript engine is using some sort of
// optimization where it does not always call our comparision
// function. If that is the case, discard the hasDuplicate value.
//   Thus far that includes Google Chrome.
[0, 0].sort(function() {
	baseHasDuplicate = false;
	return 0;
});

var Sizzle = function( selector, context, results, seed ) {
	results = results || [];
	context = context || document;

	var origContext = context;

	if ( context.nodeType !== 1 && context.nodeType !== 9 ) {
		return [];
	}
	
	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	var m, set, checkSet, extra, ret, cur, pop, i,
		prune = true,
		contextXML = Sizzle.isXML( context ),
		parts = [],
		soFar = selector;
	
	// Reset the position of the chunker regexp (start from head)
	do {
		chunker.exec( "" );
		m = chunker.exec( soFar );

		if ( m ) {
			soFar = m[3];
		
			parts.push( m[1] );
		
			if ( m[2] ) {
				extra = m[3];
				break;
			}
		}
	} while ( m );

	if ( parts.length > 1 && origPOS.exec( selector ) ) {

		if ( parts.length === 2 && Expr.relative[ parts[0] ] ) {
			set = posProcess( parts[0] + parts[1], context, seed );

		} else {
			set = Expr.relative[ parts[0] ] ?
				[ context ] :
				Sizzle( parts.shift(), context );

			while ( parts.length ) {
				selector = parts.shift();

				if ( Expr.relative[ selector ] ) {
					selector += parts.shift();
				}
				
				set = posProcess( selector, set, seed );
			}
		}

	} else {
		// Take a shortcut and set the context if the root selector is an ID
		// (but not if it'll be faster if the inner selector is an ID)
		if ( !seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&
				Expr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1]) ) {

			ret = Sizzle.find( parts.shift(), context, contextXML );
			context = ret.expr ?
				Sizzle.filter( ret.expr, ret.set )[0] :
				ret.set[0];
		}

		if ( context ) {
			ret = seed ?
				{ expr: parts.pop(), set: makeArray(seed) } :
				Sizzle.find( parts.pop(), parts.length === 1 && (parts[0] === "~" || parts[0] === "+") && context.parentNode ? context.parentNode : context, contextXML );

			set = ret.expr ?
				Sizzle.filter( ret.expr, ret.set ) :
				ret.set;

			if ( parts.length > 0 ) {
				checkSet = makeArray( set );

			} else {
				prune = false;
			}

			while ( parts.length ) {
				cur = parts.pop();
				pop = cur;

				if ( !Expr.relative[ cur ] ) {
					cur = "";
				} else {
					pop = parts.pop();
				}

				if ( pop == null ) {
					pop = context;
				}

				Expr.relative[ cur ]( checkSet, pop, contextXML );
			}

		} else {
			checkSet = parts = [];
		}
	}

	if ( !checkSet ) {
		checkSet = set;
	}

	if ( !checkSet ) {
		Sizzle.error( cur || selector );
	}

	if ( toString.call(checkSet) === "[object Array]" ) {
		if ( !prune ) {
			results.push.apply( results, checkSet );

		} else if ( context && context.nodeType === 1 ) {
			for ( i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i])) ) {
					results.push( set[i] );
				}
			}

		} else {
			for ( i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && checkSet[i].nodeType === 1 ) {
					results.push( set[i] );
				}
			}
		}

	} else {
		makeArray( checkSet, results );
	}

	if ( extra ) {
		Sizzle( extra, origContext, results, seed );
		Sizzle.uniqueSort( results );
	}

	return results;
};

Sizzle.uniqueSort = function( results ) {
	if ( sortOrder ) {
		hasDuplicate = baseHasDuplicate;
		results.sort( sortOrder );

		if ( hasDuplicate ) {
			for ( var i = 1; i < results.length; i++ ) {
				if ( results[i] === results[ i - 1 ] ) {
					results.splice( i--, 1 );
				}
			}
		}
	}

	return results;
};

Sizzle.matches = function( expr, set ) {
	return Sizzle( expr, null, null, set );
};

Sizzle.matchesSelector = function( node, expr ) {
	return Sizzle( expr, null, null, [node] ).length > 0;
};

Sizzle.find = function( expr, context, isXML ) {
	var set, i, len, match, type, left;

	if ( !expr ) {
		return [];
	}

	for ( i = 0, len = Expr.order.length; i < len; i++ ) {
		type = Expr.order[i];
		
		if ( (match = Expr.leftMatch[ type ].exec( expr )) ) {
			left = match[1];
			match.splice( 1, 1 );

			if ( left.substr( left.length - 1 ) !== "\\" ) {
				match[1] = (match[1] || "").replace( rBackslash, "" );
				set = Expr.find[ type ]( match, context, isXML );

				if ( set != null ) {
					expr = expr.replace( Expr.match[ type ], "" );
					break;
				}
			}
		}
	}

	if ( !set ) {
		set = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( "*" ) :
			[];
	}

	return { set: set, expr: expr };
};

Sizzle.filter = function( expr, set, inplace, not ) {
	var match, anyFound,
		type, found, item, filter, left,
		i, pass,
		old = expr,
		result = [],
		curLoop = set,
		isXMLFilter = set && set[0] && Sizzle.isXML( set[0] );

	while ( expr && set.length ) {
		for ( type in Expr.filter ) {
			if ( (match = Expr.leftMatch[ type ].exec( expr )) != null && match[2] ) {
				filter = Expr.filter[ type ];
				left = match[1];

				anyFound = false;

				match.splice(1,1);

				if ( left.substr( left.length - 1 ) === "\\" ) {
					continue;
				}

				if ( curLoop === result ) {
					result = [];
				}

				if ( Expr.preFilter[ type ] ) {
					match = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter );

					if ( !match ) {
						anyFound = found = true;

					} else if ( match === true ) {
						continue;
					}
				}

				if ( match ) {
					for ( i = 0; (item = curLoop[i]) != null; i++ ) {
						if ( item ) {
							found = filter( item, match, i, curLoop );
							pass = not ^ found;

							if ( inplace && found != null ) {
								if ( pass ) {
									anyFound = true;

								} else {
									curLoop[i] = false;
								}

							} else if ( pass ) {
								result.push( item );
								anyFound = true;
							}
						}
					}
				}

				if ( found !== undefined ) {
					if ( !inplace ) {
						curLoop = result;
					}

					expr = expr.replace( Expr.match[ type ], "" );

					if ( !anyFound ) {
						return [];
					}

					break;
				}
			}
		}

		// Improper expression
		if ( expr === old ) {
			if ( anyFound == null ) {
				Sizzle.error( expr );

			} else {
				break;
			}
		}

		old = expr;
	}

	return curLoop;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Utility function for retreiving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
var getText = Sizzle.getText = function( elem ) {
    var i, node,
		nodeType = elem.nodeType,
		ret = "";

	if ( nodeType ) {
		if ( nodeType === 1 || nodeType === 9 ) {
			// Use textContent || innerText for elements
			if ( typeof elem.textContent === 'string' ) {
				return elem.textContent;
			} else if ( typeof elem.innerText === 'string' ) {
				// Replace IE's carriage returns
				return elem.innerText.replace( rReturn, '' );
			} else {
				// Traverse it's children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
	} else {

		// If no nodeType, this is expected to be an array
		for ( i = 0; (node = elem[i]); i++ ) {
			// Do not traverse comment nodes
			if ( node.nodeType !== 8 ) {
				ret += getText( node );
			}
		}
	}
	return ret;
};

var Expr = Sizzle.selectors = {
	order: [ "ID", "NAME", "TAG" ],

	match: {
		ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
		CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
		NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
		ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
		TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
		CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
		POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
		PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
	},

	leftMatch: {},

	attrMap: {
		"class": "className",
		"for": "htmlFor"
	},

	attrHandle: {
		href: function( elem ) {
			return elem.getAttribute( "href" );
		},
		type: function( elem ) {
			return elem.getAttribute( "type" );
		}
	},

	relative: {
		"+": function(checkSet, part){
			var isPartStr = typeof part === "string",
				isTag = isPartStr && !rNonWord.test( part ),
				isPartStrNotTag = isPartStr && !isTag;

			if ( isTag ) {
				part = part.toLowerCase();
			}

			for ( var i = 0, l = checkSet.length, elem; i < l; i++ ) {
				if ( (elem = checkSet[i]) ) {
					while ( (elem = elem.previousSibling) && elem.nodeType !== 1 ) {}

					checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ?
						elem || false :
						elem === part;
				}
			}

			if ( isPartStrNotTag ) {
				Sizzle.filter( part, checkSet, true );
			}
		},

		">": function( checkSet, part ) {
			var elem,
				isPartStr = typeof part === "string",
				i = 0,
				l = checkSet.length;

			if ( isPartStr && !rNonWord.test( part ) ) {
				part = part.toLowerCase();

				for ( ; i < l; i++ ) {
					elem = checkSet[i];

					if ( elem ) {
						var parent = elem.parentNode;
						checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;
					}
				}

			} else {
				for ( ; i < l; i++ ) {
					elem = checkSet[i];

					if ( elem ) {
						checkSet[i] = isPartStr ?
							elem.parentNode :
							elem.parentNode === part;
					}
				}

				if ( isPartStr ) {
					Sizzle.filter( part, checkSet, true );
				}
			}
		},

		"": function(checkSet, part, isXML){
			var nodeCheck,
				doneName = done++,
				checkFn = dirCheck;

			if ( typeof part === "string" && !rNonWord.test( part ) ) {
				part = part.toLowerCase();
				nodeCheck = part;
				checkFn = dirNodeCheck;
			}

			checkFn( "parentNode", part, doneName, checkSet, nodeCheck, isXML );
		},

		"~": function( checkSet, part, isXML ) {
			var nodeCheck,
				doneName = done++,
				checkFn = dirCheck;

			if ( typeof part === "string" && !rNonWord.test( part ) ) {
				part = part.toLowerCase();
				nodeCheck = part;
				checkFn = dirNodeCheck;
			}

			checkFn( "previousSibling", part, doneName, checkSet, nodeCheck, isXML );
		}
	},

	find: {
		ID: function( match, context, isXML ) {
			if ( typeof context.getElementById !== "undefined" && !isXML ) {
				var m = context.getElementById(match[1]);
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [m] : [];
			}
		},

		NAME: function( match, context ) {
			if ( typeof context.getElementsByName !== "undefined" ) {
				var ret = [],
					results = context.getElementsByName( match[1] );

				for ( var i = 0, l = results.length; i < l; i++ ) {
					if ( results[i].getAttribute("name") === match[1] ) {
						ret.push( results[i] );
					}
				}

				return ret.length === 0 ? null : ret;
			}
		},

		TAG: function( match, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( match[1] );
			}
		}
	},
	preFilter: {
		CLASS: function( match, curLoop, inplace, result, not, isXML ) {
			match = " " + match[1].replace( rBackslash, "" ) + " ";

			if ( isXML ) {
				return match;
			}

			for ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {
				if ( elem ) {
					if ( not ^ (elem.className && (" " + elem.className + " ").replace(/[\t\n\r]/g, " ").indexOf(match) >= 0) ) {
						if ( !inplace ) {
							result.push( elem );
						}

					} else if ( inplace ) {
						curLoop[i] = false;
					}
				}
			}

			return false;
		},

		ID: function( match ) {
			return match[1].replace( rBackslash, "" );
		},

		TAG: function( match, curLoop ) {
			return match[1].replace( rBackslash, "" ).toLowerCase();
		},

		CHILD: function( match ) {
			if ( match[1] === "nth" ) {
				if ( !match[2] ) {
					Sizzle.error( match[0] );
				}

				match[2] = match[2].replace(/^\+|\s*/g, '');

				// parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'
				var test = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(
					match[2] === "even" && "2n" || match[2] === "odd" && "2n+1" ||
					!/\D/.test( match[2] ) && "0n+" + match[2] || match[2]);

				// calculate the numbers (first)n+(last) including if they are negative
				match[2] = (test[1] + (test[2] || 1)) - 0;
				match[3] = test[3] - 0;
			}
			else if ( match[2] ) {
				Sizzle.error( match[0] );
			}

			// TODO: Move to normal caching system
			match[0] = done++;

			return match;
		},

		ATTR: function( match, curLoop, inplace, result, not, isXML ) {
			var name = match[1] = match[1].replace( rBackslash, "" );
			
			if ( !isXML && Expr.attrMap[name] ) {
				match[1] = Expr.attrMap[name];
			}

			// Handle if an un-quoted value was used
			match[4] = ( match[4] || match[5] || "" ).replace( rBackslash, "" );

			if ( match[2] === "~=" ) {
				match[4] = " " + match[4] + " ";
			}

			return match;
		},

		PSEUDO: function( match, curLoop, inplace, result, not ) {
			if ( match[1] === "not" ) {
				// If we're dealing with a complex expression, or a simple one
				if ( ( chunker.exec(match[3]) || "" ).length > 1 || /^\w/.test(match[3]) ) {
					match[3] = Sizzle(match[3], null, null, curLoop);

				} else {
					var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);

					if ( !inplace ) {
						result.push.apply( result, ret );
					}

					return false;
				}

			} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) {
				return true;
			}
			
			return match;
		},

		POS: function( match ) {
			match.unshift( true );

			return match;
		}
	},
	
	filters: {
		enabled: function( elem ) {
			return elem.disabled === false && elem.type !== "hidden";
		},

		disabled: function( elem ) {
			return elem.disabled === true;
		},

		checked: function( elem ) {
			return elem.checked === true;
		},
		
		selected: function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}
			
			return elem.selected === true;
		},

		parent: function( elem ) {
			return !!elem.firstChild;
		},

		empty: function( elem ) {
			return !elem.firstChild;
		},

		has: function( elem, i, match ) {
			return !!Sizzle( match[3], elem ).length;
		},

		header: function( elem ) {
			return (/h\d/i).test( elem.nodeName );
		},

		text: function( elem ) {
			var attr = elem.getAttribute( "type" ), type = elem.type;
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc) 
			// use getAttribute instead to test this case
			return elem.nodeName.toLowerCase() === "input" && "text" === type && ( attr === type || attr === null );
		},

		radio: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "radio" === elem.type;
		},

		checkbox: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "checkbox" === elem.type;
		},

		file: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "file" === elem.type;
		},

		password: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "password" === elem.type;
		},

		submit: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && "submit" === elem.type;
		},

		image: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "image" === elem.type;
		},

		reset: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && "reset" === elem.type;
		},

		button: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && "button" === elem.type || name === "button";
		},

		input: function( elem ) {
			return (/input|select|textarea|button/i).test( elem.nodeName );
		},

		focus: function( elem ) {
			return elem === elem.ownerDocument.activeElement;
		}
	},
	setFilters: {
		first: function( elem, i ) {
			return i === 0;
		},

		last: function( elem, i, match, array ) {
			return i === array.length - 1;
		},

		even: function( elem, i ) {
			return i % 2 === 0;
		},

		odd: function( elem, i ) {
			return i % 2 === 1;
		},

		lt: function( elem, i, match ) {
			return i < match[3] - 0;
		},

		gt: function( elem, i, match ) {
			return i > match[3] - 0;
		},

		nth: function( elem, i, match ) {
			return match[3] - 0 === i;
		},

		eq: function( elem, i, match ) {
			return match[3] - 0 === i;
		}
	},
	filter: {
		PSEUDO: function( elem, match, i, array ) {
			var name = match[1],
				filter = Expr.filters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );

			} else if ( name === "contains" ) {
				return (elem.textContent || elem.innerText || getText([ elem ]) || "").indexOf(match[3]) >= 0;

			} else if ( name === "not" ) {
				var not = match[3];

				for ( var j = 0, l = not.length; j < l; j++ ) {
					if ( not[j] === elem ) {
						return false;
					}
				}

				return true;

			} else {
				Sizzle.error( name );
			}
		},

		CHILD: function( elem, match ) {
			var first, last,
				doneName, parent, cache,
				count, diff,
				type = match[1],
				node = elem;

			switch ( type ) {
				case "only":
				case "first":
					while ( (node = node.previousSibling) )	 {
						if ( node.nodeType === 1 ) { 
							return false; 
						}
					}

					if ( type === "first" ) { 
						return true; 
					}

					node = elem;

				case "last":
					while ( (node = node.nextSibling) )	 {
						if ( node.nodeType === 1 ) { 
							return false; 
						}
					}

					return true;

				case "nth":
					first = match[2];
					last = match[3];

					if ( first === 1 && last === 0 ) {
						return true;
					}
					
					doneName = match[0];
					parent = elem.parentNode;
	
					if ( parent && (parent[ expando ] !== doneName || !elem.nodeIndex) ) {
						count = 0;
						
						for ( node = parent.firstChild; node; node = node.nextSibling ) {
							if ( node.nodeType === 1 ) {
								node.nodeIndex = ++count;
							}
						} 

						parent[ expando ] = doneName;
					}
					
					diff = elem.nodeIndex - last;

					if ( first === 0 ) {
						return diff === 0;

					} else {
						return ( diff % first === 0 && diff / first >= 0 );
					}
			}
		},

		ID: function( elem, match ) {
			return elem.nodeType === 1 && elem.getAttribute("id") === match;
		},

		TAG: function( elem, match ) {
			return (match === "*" && elem.nodeType === 1) || !!elem.nodeName && elem.nodeName.toLowerCase() === match;
		},
		
		CLASS: function( elem, match ) {
			return (" " + (elem.className || elem.getAttribute("class")) + " ")
				.indexOf( match ) > -1;
		},

		ATTR: function( elem, match ) {
			var name = match[1],
				result = Sizzle.attr ?
					Sizzle.attr( elem, name ) :
					Expr.attrHandle[ name ] ?
					Expr.attrHandle[ name ]( elem ) :
					elem[ name ] != null ?
						elem[ name ] :
						elem.getAttribute( name ),
				value = result + "",
				type = match[2],
				check = match[4];

			return result == null ?
				type === "!=" :
				!type && Sizzle.attr ?
				result != null :
				type === "=" ?
				value === check :
				type === "*=" ?
				value.indexOf(check) >= 0 :
				type === "~=" ?
				(" " + value + " ").indexOf(check) >= 0 :
				!check ?
				value && result !== false :
				type === "!=" ?
				value !== check :
				type === "^=" ?
				value.indexOf(check) === 0 :
				type === "$=" ?
				value.substr(value.length - check.length) === check :
				type === "|=" ?
				value === check || value.substr(0, check.length + 1) === check + "-" :
				false;
		},

		POS: function( elem, match, i, array ) {
			var name = match[2],
				filter = Expr.setFilters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			}
		}
	}
};

var origPOS = Expr.match.POS,
	fescape = function(all, num){
		return "\\" + (num - 0 + 1);
	};

for ( var type in Expr.match ) {
	Expr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\[]*\])(?![^\(]*\))/.source) );
	Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\r|\n)*?)/.source + Expr.match[ type ].source.replace(/\\(\d+)/g, fescape) );
}

var makeArray = function( array, results ) {
	array = Array.prototype.slice.call( array, 0 );

	if ( results ) {
		results.push.apply( results, array );
		return results;
	}
	
	return array;
};

// Perform a simple check to determine if the browser is capable of
// converting a NodeList to an array using builtin methods.
// Also verifies that the returned array holds DOM nodes
// (which is not the case in the Blackberry browser)
try {
	Array.prototype.slice.call( document.documentElement.childNodes, 0 )[0].nodeType;

// Provide a fallback method if it does not work
} catch( e ) {
	makeArray = function( array, results ) {
		var i = 0,
			ret = results || [];

		if ( toString.call(array) === "[object Array]" ) {
			Array.prototype.push.apply( ret, array );

		} else {
			if ( typeof array.length === "number" ) {
				for ( var l = array.length; i < l; i++ ) {
					ret.push( array[i] );
				}

			} else {
				for ( ; array[i]; i++ ) {
					ret.push( array[i] );
				}
			}
		}

		return ret;
	};
}

var sortOrder, siblingCheck;

if ( document.documentElement.compareDocumentPosition ) {
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {
			return a.compareDocumentPosition ? -1 : 1;
		}

		return a.compareDocumentPosition(b) & 4 ? -1 : 1;
	};

} else {
	sortOrder = function( a, b ) {
		// The nodes are identical, we can exit early
		if ( a === b ) {
			hasDuplicate = true;
			return 0;

		// Fallback to using sourceIndex (in IE) if it's available on both nodes
		} else if ( a.sourceIndex && b.sourceIndex ) {
			return a.sourceIndex - b.sourceIndex;
		}

		var al, bl,
			ap = [],
			bp = [],
			aup = a.parentNode,
			bup = b.parentNode,
			cur = aup;

		// If the nodes are siblings (or identical) we can do a quick check
		if ( aup === bup ) {
			return siblingCheck( a, b );

		// If no parents were found then the nodes are disconnected
		} else if ( !aup ) {
			return -1;

		} else if ( !bup ) {
			return 1;
		}

		// Otherwise they're somewhere else in the tree so we need
		// to build up a full list of the parentNodes for comparison
		while ( cur ) {
			ap.unshift( cur );
			cur = cur.parentNode;
		}

		cur = bup;

		while ( cur ) {
			bp.unshift( cur );
			cur = cur.parentNode;
		}

		al = ap.length;
		bl = bp.length;

		// Start walking down the tree looking for a discrepancy
		for ( var i = 0; i < al && i < bl; i++ ) {
			if ( ap[i] !== bp[i] ) {
				return siblingCheck( ap[i], bp[i] );
			}
		}

		// We ended someplace up the tree so do a sibling check
		return i === al ?
			siblingCheck( a, bp[i], -1 ) :
			siblingCheck( ap[i], b, 1 );
	};

	siblingCheck = function( a, b, ret ) {
		if ( a === b ) {
			return ret;
		}

		var cur = a.nextSibling;

		while ( cur ) {
			if ( cur === b ) {
				return -1;
			}

			cur = cur.nextSibling;
		}

		return 1;
	};
}

// Check to see if the browser returns elements by name when
// querying by getElementById (and provide a workaround)
(function(){
	// We're going to inject a fake input element with a specified name
	var form = document.createElement("div"),
		id = "script" + (new Date()).getTime(),
		root = document.documentElement;

	form.innerHTML = "<a name='" + id + "'/>";

	// Inject it into the root element, check its status, and remove it quickly
	root.insertBefore( form, root.firstChild );

	// The workaround has to do additional checks after a getElementById
	// Which slows things down for other browsers (hence the branching)
	if ( document.getElementById( id ) ) {
		Expr.find.ID = function( match, context, isXML ) {
			if ( typeof context.getElementById !== "undefined" && !isXML ) {
				var m = context.getElementById(match[1]);

				return m ?
					m.id === match[1] || typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id").nodeValue === match[1] ?
						[m] :
						undefined :
					[];
			}
		};

		Expr.filter.ID = function( elem, match ) {
			var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");

			return elem.nodeType === 1 && node && node.nodeValue === match;
		};
	}

	root.removeChild( form );

	// release memory in IE
	root = form = null;
})();

(function(){
	// Check to see if the browser returns only elements
	// when doing getElementsByTagName("*")

	// Create a fake element
	var div = document.createElement("div");
	div.appendChild( document.createComment("") );

	// Make sure no comments are found
	if ( div.getElementsByTagName("*").length > 0 ) {
		Expr.find.TAG = function( match, context ) {
			var results = context.getElementsByTagName( match[1] );

			// Filter out possible comments
			if ( match[1] === "*" ) {
				var tmp = [];

				for ( var i = 0; results[i]; i++ ) {
					if ( results[i].nodeType === 1 ) {
						tmp.push( results[i] );
					}
				}

				results = tmp;
			}

			return results;
		};
	}

	// Check to see if an attribute returns normalized href attributes
	div.innerHTML = "<a href='#'></a>";

	if ( div.firstChild && typeof div.firstChild.getAttribute !== "undefined" &&
			div.firstChild.getAttribute("href") !== "#" ) {

		Expr.attrHandle.href = function( elem ) {
			return elem.getAttribute( "href", 2 );
		};
	}

	// release memory in IE
	div = null;
})();

if ( document.querySelectorAll ) {
	(function(){
		var oldSizzle = Sizzle,
			div = document.createElement("div"),
			id = "__sizzle__";

		div.innerHTML = "<p class='TEST'></p>";

		// Safari can't handle uppercase or unicode characters when
		// in quirks mode.
		if ( div.querySelectorAll && div.querySelectorAll(".TEST").length === 0 ) {
			return;
		}
	
		Sizzle = function( query, context, extra, seed ) {
			context = context || document;

			// Only use querySelectorAll on non-XML documents
			// (ID selectors don't work in non-HTML documents)
			if ( !seed && !Sizzle.isXML(context) ) {
				// See if we find a selector to speed up
				var match = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec( query );
				
				if ( match && (context.nodeType === 1 || context.nodeType === 9) ) {
					// Speed-up: Sizzle("TAG")
					if ( match[1] ) {
						return makeArray( context.getElementsByTagName( query ), extra );
					
					// Speed-up: Sizzle(".CLASS")
					} else if ( match[2] && Expr.find.CLASS && context.getElementsByClassName ) {
						return makeArray( context.getElementsByClassName( match[2] ), extra );
					}
				}
				
				if ( context.nodeType === 9 ) {
					// Speed-up: Sizzle("body")
					// The body element only exists once, optimize finding it
					if ( query === "body" && context.body ) {
						return makeArray( [ context.body ], extra );
						
					// Speed-up: Sizzle("#ID")
					} else if ( match && match[3] ) {
						var elem = context.getElementById( match[3] );

						// Check parentNode to catch when Blackberry 4.6 returns
						// nodes that are no longer in the document #6963
						if ( elem && elem.parentNode ) {
							// Handle the case where IE and Opera return items
							// by name instead of ID
							if ( elem.id === match[3] ) {
								return makeArray( [ elem ], extra );
							}
							
						} else {
							return makeArray( [], extra );
						}
					}
					
					try {
						return makeArray( context.querySelectorAll(query), extra );
					} catch(qsaError) {}

				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				} else if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					var oldContext = context,
						old = context.getAttribute( "id" ),
						nid = old || id,
						hasParent = context.parentNode,
						relativeHierarchySelector = /^\s*[+~]/.test( query );

					if ( !old ) {
						context.setAttribute( "id", nid );
					} else {
						nid = nid.replace( /'/g, "\\$&" );
					}
					if ( relativeHierarchySelector && hasParent ) {
						context = context.parentNode;
					}

					try {
						if ( !relativeHierarchySelector || hasParent ) {
							return makeArray( context.querySelectorAll( "[id='" + nid + "'] " + query ), extra );
						}

					} catch(pseudoError) {
					} finally {
						if ( !old ) {
							oldContext.removeAttribute( "id" );
						}
					}
				}
			}
		
			return oldSizzle(query, context, extra, seed);
		};

		for ( var prop in oldSizzle ) {
			Sizzle[ prop ] = oldSizzle[ prop ];
		}

		// release memory in IE
		div = null;
	})();
}

(function(){
	var html = document.documentElement,
		matches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector;

	if ( matches ) {
		// Check to see if it's possible to do matchesSelector
		// on a disconnected node (IE 9 fails this)
		var disconnectedMatch = !matches.call( document.createElement( "div" ), "div" ),
			pseudoWorks = false;

		try {
			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( document.documentElement, "[test!='']:sizzle" );
	
		} catch( pseudoError ) {
			pseudoWorks = true;
		}

		Sizzle.matchesSelector = function( node, expr ) {
			// Make sure that attribute selectors are quoted
			expr = expr.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");

			if ( !Sizzle.isXML( node ) ) {
				try { 
					if ( pseudoWorks || !Expr.match.PSEUDO.test( expr ) && !/!=/.test( expr ) ) {
						var ret = matches.call( node, expr );

						// IE 9's matchesSelector returns false on disconnected nodes
						if ( ret || !disconnectedMatch ||
								// As well, disconnected nodes are said to be in a document
								// fragment in IE 9, so check for that
								node.document && node.document.nodeType !== 11 ) {
							return ret;
						}
					}
				} catch(e) {}
			}

			return Sizzle(expr, null, null, [node]).length > 0;
		};
	}
})();

(function(){
	var div = document.createElement("div");

	div.innerHTML = "<div class='test e'></div><div class='test'></div>";

	// Opera can't find a second classname (in 9.6)
	// Also, make sure that getElementsByClassName actually exists
	if ( !div.getElementsByClassName || div.getElementsByClassName("e").length === 0 ) {
		return;
	}

	// Safari caches class attributes, doesn't catch changes (in 3.2)
	div.lastChild.className = "e";

	if ( div.getElementsByClassName("e").length === 1 ) {
		return;
	}
	
	Expr.order.splice(1, 0, "CLASS");
	Expr.find.CLASS = function( match, context, isXML ) {
		if ( typeof context.getElementsByClassName !== "undefined" && !isXML ) {
			return context.getElementsByClassName(match[1]);
		}
	};

	// release memory in IE
	div = null;
})();

function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];

		if ( elem ) {
			var match = false;

			elem = elem[dir];

			while ( elem ) {
				if ( elem[ expando ] === doneName ) {
					match = checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType === 1 && !isXML ){
					elem[ expando ] = doneName;
					elem.sizset = i;
				}

				if ( elem.nodeName.toLowerCase() === cur ) {
					match = elem;
					break;
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];

		if ( elem ) {
			var match = false;
			
			elem = elem[dir];

			while ( elem ) {
				if ( elem[ expando ] === doneName ) {
					match = checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType === 1 ) {
					if ( !isXML ) {
						elem[ expando ] = doneName;
						elem.sizset = i;
					}

					if ( typeof cur !== "string" ) {
						if ( elem === cur ) {
							match = true;
							break;
						}

					} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {
						match = elem;
						break;
					}
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

if ( document.documentElement.contains ) {
	Sizzle.contains = function( a, b ) {
		return a !== b && (a.contains ? a.contains(b) : true);
	};

} else if ( document.documentElement.compareDocumentPosition ) {
	Sizzle.contains = function( a, b ) {
		return !!(a.compareDocumentPosition(b) & 16);
	};

} else {
	Sizzle.contains = function() {
		return false;
	};
}

Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833) 
	var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;

	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

var posProcess = function( selector, context, seed ) {
	var match,
		tmpSet = [],
		later = "",
		root = context.nodeType ? [context] : context;

	// Position selectors must be done after the filter
	// And so must :not(positional) so we move all PSEUDOs to the end
	while ( (match = Expr.match.PSEUDO.exec( selector )) ) {
		later += match[0];
		selector = selector.replace( Expr.match.PSEUDO, "" );
	}

	selector = Expr.relative[selector] ? selector + "*" : selector;

	for ( var i = 0, l = root.length; i < l; i++ ) {
		Sizzle( selector, root[i], tmpSet, seed );
	}

	return Sizzle.filter( later, tmpSet );
};

// EXPOSE
// Override sizzle attribute retrieval
Sizzle.attr = jQuery.attr;
Sizzle.selectors.attrMap = {};
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.filters;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})();


var runtil = /Until$/,
	rparentsprev = /^(?:parents|prevUntil|prevAll)/,
	// Note: This RegExp should be improved, or likely pulled from Sizzle
	rmultiselector = /,/,
	isSimple = /^.[^:#\[\.,]*$/,
	slice = Array.prototype.slice,
	POS = jQuery.expr.match.POS,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend({
	find: function( selector ) {
		var self = this,
			i, l;

		if ( typeof selector !== "string" ) {
			return jQuery( selector ).filter(function() {
				for ( i = 0, l = self.length; i < l; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			});
		}

		var ret = this.pushStack( "", "find", selector ),
			length, n, r;

		for ( i = 0, l = this.length; i < l; i++ ) {
			length = ret.length;
			jQuery.find( selector, this[i], ret );

			if ( i > 0 ) {
				// Make sure that the results are unique
				for ( n = length; n < ret.length; n++ ) {
					for ( r = 0; r < length; r++ ) {
						if ( ret[r] === ret[n] ) {
							ret.splice(n--, 1);
							break;
						}
					}
				}
			}
		}

		return ret;
	},

	has: function( target ) {
		var targets = jQuery( target );
		return this.filter(function() {
			for ( var i = 0, l = targets.length; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector, false), "not", selector);
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector, true), "filter", selector );
	},

	is: function( selector ) {
		return !!selector && ( 
			typeof selector === "string" ?
				// If this is a positional selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				POS.test( selector ) ? 
					jQuery( selector, this.context ).index( this[0] ) >= 0 :
					jQuery.filter( selector, this ).length > 0 :
				this.filter( selector ).length > 0 );
	},

	closest: function( selectors, context ) {
		var ret = [], i, l, cur = this[0];
		
		// Array (deprecated as of jQuery 1.7)
		if ( jQuery.isArray( selectors ) ) {
			var level = 1;

			while ( cur && cur.ownerDocument && cur !== context ) {
				for ( i = 0; i < selectors.length; i++ ) {

					if ( jQuery( cur ).is( selectors[ i ] ) ) {
						ret.push({ selector: selectors[ i ], elem: cur, level: level });
					}
				}

				cur = cur.parentNode;
				level++;
			}

			return ret;
		}

		// String
		var pos = POS.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( i = 0, l = this.length; i < l; i++ ) {
			cur = this[i];

			while ( cur ) {
				if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {
					ret.push( cur );
					break;

				} else {
					cur = cur.parentNode;
					if ( !cur || !cur.ownerDocument || cur === context || cur.nodeType === 11 ) {
						break;
					}
				}
			}
		}

		ret = ret.length > 1 ? jQuery.unique( ret ) : ret;

		return this.pushStack( ret, "closest", selectors );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set = typeof selector === "string" ?
				jQuery( selector, context ) :
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
			all = jQuery.merge( this.get(), set );

		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?
			all :
			jQuery.unique( all ) );
	},

	andSelf: function() {
		return this.add( this.prevObject );
	}
});

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
	return !node || !node.parentNode || node.parentNode.nodeType === 11;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return jQuery.nth( elem, 2, "nextSibling" );
	},
	prev: function( elem ) {
		return jQuery.nth( elem, 2, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( elem.parentNode.firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.makeArray( elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( !runtil.test( name ) ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;

		if ( (this.length > 1 || rmultiselector.test( selector )) && rparentsprev.test( name ) ) {
			ret = ret.reverse();
		}

		return this.pushStack( ret, name, slice.call( arguments ).join(",") );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 ?
			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :
			jQuery.find.matches(expr, elems);
	},

	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	nth: function( cur, result, dir, elem ) {
		result = result || 1;
		var num = 0;

		for ( ; cur; cur = cur[dir] ) {
			if ( cur.nodeType === 1 && ++num === result ) {
				break;
			}
		}

		return cur;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, keep ) {

	// Can't pass null or undefined to indexOf in Firefox 4
	// Set to 0 to skip string check
	qualifier = qualifier || 0;

	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep(elements, function( elem, i ) {
			var retVal = !!qualifier.call( elem, i, elem );
			return retVal === keep;
		});

	} else if ( qualifier.nodeType ) {
		return jQuery.grep(elements, function( elem, i ) {
			return ( elem === qualifier ) === keep;
		});

	} else if ( typeof qualifier === "string" ) {
		var filtered = jQuery.grep(elements, function( elem ) {
			return elem.nodeType === 1;
		});

		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter(qualifier, filtered, !keep);
		} else {
			qualifier = jQuery.filter( qualifier, filtered );
		}
	}

	return jQuery.grep(elements, function( elem, i ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;
	});
}




function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
	safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:\d+|null)"/g,
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style)/i,
	rnocache = /<(?:script|object|embed|option|style)/i,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")", "i"),
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /\/(java|ecma)script/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)/,
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		area: [ 1, "<map>", "</map>" ],
		_default: [ 0, "", "" ]
	},
	safeFragment = createSafeFragment( document );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// IE can't serialize <link> and <script> tags normally
if ( !jQuery.support.htmlSerialize ) {
	wrapMap._default = [ 1, "div<div>", "</div>" ];
}

jQuery.fn.extend({
	text: function( text ) {
		if ( jQuery.isFunction(text) ) {
			return this.each(function(i) {
				var self = jQuery( this );

				self.text( text.call(this, i, self.text()) );
			});
		}

		if ( typeof text !== "object" && text !== undefined ) {
			return this.empty().append( (this[0] && this[0].ownerDocument || document).createTextNode( text ) );
		}

		return jQuery.text( this );
	},

	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	},

	append: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 ) {
				this.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 ) {
				this.insertBefore( elem, this.firstChild );
			}
		});
	},

	before: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this );
			});
		} else if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			set.push.apply( set, this.toArray() );
			return this.pushStack( set, "before", arguments );
		}
	},

	after: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			});
		} else if ( arguments.length ) {
			var set = this.pushStack( this, "after", arguments );
			set.push.apply( set, jQuery.clean(arguments) );
			return set;
		}
	},

	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( elem.getElementsByTagName("*") );
					jQuery.cleanData( [ elem ] );
				}

				if ( elem.parentNode ) {
					elem.parentNode.removeChild( elem );
				}
			}
		}

		return this;
	},

	empty: function() {
		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( elem.getElementsByTagName("*") );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function () {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		if ( value === undefined ) {
			return this[0] && this[0].nodeType === 1 ?
				this[0].innerHTML.replace(rinlinejQuery, "") :
				null;

		// See if we can take a shortcut and just use innerHTML
		} else if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
			(jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value )) &&
			!wrapMap[ (rtagName.exec( value ) || ["", ""])[1].toLowerCase() ] ) {

			value = value.replace(rxhtmlTag, "<$1></$2>");

			try {
				for ( var i = 0, l = this.length; i < l; i++ ) {
					// Remove element nodes and prevent memory leaks
					if ( this[i].nodeType === 1 ) {
						jQuery.cleanData( this[i].getElementsByTagName("*") );
						this[i].innerHTML = value;
					}
				}

			// If using innerHTML throws an exception, use the fallback method
			} catch(e) {
				this.empty().append( value );
			}

		} else if ( jQuery.isFunction( value ) ) {
			this.each(function(i){
				var self = jQuery( this );

				self.html( value.call(this, i, self.html()) );
			});

		} else {
			this.empty().append( value );
		}

		return this;
	},

	replaceWith: function( value ) {
		if ( this[0] && this[0].parentNode ) {
			// Make sure that the elements are removed from the DOM before they are inserted
			// this can help fix replacing a parent with child elements
			if ( jQuery.isFunction( value ) ) {
				return this.each(function(i) {
					var self = jQuery(this), old = self.html();
					self.replaceWith( value.call( this, i, old ) );
				});
			}

			if ( typeof value !== "string" ) {
				value = jQuery( value ).detach();
			}

			return this.each(function() {
				var next = this.nextSibling,
					parent = this.parentNode;

				jQuery( this ).remove();

				if ( next ) {
					jQuery(next).before( value );
				} else {
					jQuery(parent).append( value );
				}
			});
		} else {
			return this.length ?
				this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value ) :
				this;
		}
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, table, callback ) {
		var results, first, fragment, parent,
			value = args[0],
			scripts = [];

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( !jQuery.support.checkClone && arguments.length === 3 && typeof value === "string" && rchecked.test( value ) ) {
			return this.each(function() {
				jQuery(this).domManip( args, table, callback, true );
			});
		}

		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self = jQuery(this);
				args[0] = value.call(this, i, table ? self.html() : undefined);
				self.domManip( args, table, callback );
			});
		}

		if ( this[0] ) {
			parent = value && value.parentNode;

			// If we're in a fragment, just use that instead of building a new one
			if ( jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length ) {
				results = { fragment: parent };

			} else {
				results = jQuery.buildFragment( args, this, scripts );
			}

			fragment = results.fragment;

			if ( fragment.childNodes.length === 1 ) {
				first = fragment = fragment.firstChild;
			} else {
				first = fragment.firstChild;
			}

			if ( first ) {
				table = table && jQuery.nodeName( first, "tr" );

				for ( var i = 0, l = this.length, lastIndex = l - 1; i < l; i++ ) {
					callback.call(
						table ?
							root(this[i], first) :
							this[i],
						// Make sure that we do not leak memory by inadvertently discarding
						// the original fragment (which might have attached data) instead of
						// using it; in addition, use the original fragment object for the last
						// item instead of first because it can end up being emptied incorrectly
						// in certain situations (Bug #8070).
						// Fragments from the fragment cache must always be cloned and never used
						// in place.
						results.cacheable || ( l > 1 && i < lastIndex ) ?
							jQuery.clone( fragment, true, true ) :
							fragment
					);
				}
			}

			if ( scripts.length ) {
				jQuery.each( scripts, evalScript );
			}
		}

		return this;
	}
});

function root( elem, cur ) {
	return jQuery.nodeName(elem, "table") ?
		(elem.getElementsByTagName("tbody")[0] ||
		elem.appendChild(elem.ownerDocument.createElement("tbody"))) :
		elem;
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type + ( events[ type ][ i ].namespace ? "." : "" ) + events[ type ][ i ].namespace, events[ type ][ i ], events[ type ][ i ].data );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function cloneFixAttributes( src, dest ) {
	var nodeName;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	// clearAttributes removes the attributes, which we don't want,
	// but also removes the attachEvent events, which we *do* want
	if ( dest.clearAttributes ) {
		dest.clearAttributes();
	}

	// mergeAttributes, in contrast, only merges back on the
	// original attributes, not the events
	if ( dest.mergeAttributes ) {
		dest.mergeAttributes( src );
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 fail to clone children inside object elements that use
	// the proprietary classid attribute value (rather than the type
	// attribute) to identify the type of content to display
	if ( nodeName === "object" ) {
		dest.outerHTML = src.outerHTML;

	} else if ( nodeName === "input" && (src.type === "checkbox" || src.type === "radio") ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set
		if ( src.checked ) {
			dest.defaultChecked = dest.checked = src.checked;
		}

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}

	// Event data gets referenced instead of copied if the expando
	// gets copied too
	dest.removeAttribute( jQuery.expando );
}

jQuery.buildFragment = function( args, nodes, scripts ) {
	var fragment, cacheable, cacheresults, doc,
	first = args[ 0 ];

	// nodes may contain either an explicit document object,
	// a jQuery collection or context object.
	// If nodes[0] contains a valid object to assign to doc
	if ( nodes && nodes[0] ) {
		doc = nodes[0].ownerDocument || nodes[0];
	}

	// Ensure that an attr object doesn't incorrectly stand in as a document object
	// Chrome and Firefox seem to allow this to occur and will throw exception
	// Fixes #8950
	if ( !doc.createDocumentFragment ) {
		doc = document;
	}

	// Only cache "small" (1/2 KB) HTML strings that are associated with the main document
	// Cloning options loses the selected state, so don't cache them
	// IE 6 doesn't like it when you put <object> or <embed> elements in a fragment
	// Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache
	// Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501
	if ( args.length === 1 && typeof first === "string" && first.length < 512 && doc === document &&
		first.charAt(0) === "<" && !rnocache.test( first ) &&
		(jQuery.support.checkClone || !rchecked.test( first )) &&
		(jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {

		cacheable = true;

		cacheresults = jQuery.fragments[ first ];
		if ( cacheresults && cacheresults !== 1 ) {
			fragment = cacheresults;
		}
	}

	if ( !fragment ) {
		fragment = doc.createDocumentFragment();
		jQuery.clean( args, doc, fragment, scripts );
	}

	if ( cacheable ) {
		jQuery.fragments[ first ] = cacheresults ? fragment : 1;
	}

	return { fragment: fragment, cacheable: cacheable };
};

jQuery.fragments = {};

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var ret = [],
			insert = jQuery( selector ),
			parent = this.length === 1 && this[0].parentNode;

		if ( parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1 ) {
			insert[ original ]( this[0] );
			return this;

		} else {
			for ( var i = 0, l = insert.length; i < l; i++ ) {
				var elems = ( i > 0 ? this.clone(true) : this ).get();
				jQuery( insert[i] )[ original ]( elems );
				ret = ret.concat( elems );
			}

			return this.pushStack( ret, name, insert.selector );
		}
	};
});

function getAll( elem ) {
	if ( typeof elem.getElementsByTagName !== "undefined" ) {
		return elem.getElementsByTagName( "*" );

	} else if ( typeof elem.querySelectorAll !== "undefined" ) {
		return elem.querySelectorAll( "*" );

	} else {
		return [];
	}
}

// Used in clean, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( elem.type === "checkbox" || elem.type === "radio" ) {
		elem.defaultChecked = elem.checked;
	}
}
// Finds all inputs and passes them to fixDefaultChecked
function findInputs( elem ) {
	var nodeName = ( elem.nodeName || "" ).toLowerCase();
	if ( nodeName === "input" ) {
		fixDefaultChecked( elem );
	// Skip scripts, get other children
	} else if ( nodeName !== "script" && typeof elem.getElementsByTagName !== "undefined" ) {
		jQuery.grep( elem.getElementsByTagName("input"), fixDefaultChecked );
	}
}

// Derived From: http://www.iecss.com/shimprove/javascript/shimprove.1-0-1.js
function shimCloneNode( elem ) {
	var div = document.createElement( "div" );
	safeFragment.appendChild( div );

	div.innerHTML = elem.outerHTML;
	return div.firstChild;
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var srcElements,
			destElements,
			i,
			// IE<=8 does not properly clone detached, unknown element nodes
			clone = jQuery.support.html5Clone || !rnoshimcache.test( "<" + elem.nodeName ) ?
				elem.cloneNode( true ) :
				shimCloneNode( elem );

		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {
			// IE copies events bound via attachEvent when using cloneNode.
			// Calling detachEvent on the clone will also remove the events
			// from the original. In order to get around this, we use some
			// proprietary methods to clear the events. Thanks to MooTools
			// guys for this hotness.

			cloneFixAttributes( elem, clone );

			// Using Sizzle here is crazy slow, so we use getElementsByTagName instead
			srcElements = getAll( elem );
			destElements = getAll( clone );

			// Weird iteration because IE will replace the length property
			// with an element if you are cloning the body and one of the
			// elements on the page has a name or id of "length"
			for ( i = 0; srcElements[i]; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					cloneFixAttributes( srcElements[i], destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			cloneCopyEvent( elem, clone );

			if ( deepDataAndEvents ) {
				srcElements = getAll( elem );
				destElements = getAll( clone );

				for ( i = 0; srcElements[i]; ++i ) {
					cloneCopyEvent( srcElements[i], destElements[i] );
				}
			}
		}

		srcElements = destElements = null;

		// Return the cloned set
		return clone;
	},

	clean: function( elems, context, fragment, scripts ) {
		var checkScriptType;

		context = context || document;

		// !context.createElement fails in IE with an error but returns typeof 'object'
		if ( typeof context.createElement === "undefined" ) {
			context = context.ownerDocument || context[0] && context[0].ownerDocument || document;
		}

		var ret = [], j;

		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
			if ( typeof elem === "number" ) {
				elem += "";
			}

			if ( !elem ) {
				continue;
			}

			// Convert html string into DOM nodes
			if ( typeof elem === "string" ) {
				if ( !rhtml.test( elem ) ) {
					elem = context.createTextNode( elem );
				} else {
					// Fix "XHTML"-style tags in all browsers
					elem = elem.replace(rxhtmlTag, "<$1></$2>");

					// Trim whitespace, otherwise indexOf won't work as expected
					var tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase(),
						wrap = wrapMap[ tag ] || wrapMap._default,
						depth = wrap[0],
						div = context.createElement("div");

					// Append wrapper element to unknown element safe doc fragment
					if ( context === document ) {
						// Use the fragment we've already created for this document
						safeFragment.appendChild( div );
					} else {
						// Use a fragment created with the owner document
						createSafeFragment( context ).appendChild( div );
					}

					// Go to html and back, then peel off extra wrappers
					div.innerHTML = wrap[1] + elem + wrap[2];

					// Move to the right depth
					while ( depth-- ) {
						div = div.lastChild;
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !jQuery.support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						var hasBody = rtbody.test(elem),
							tbody = tag === "table" && !hasBody ?
								div.firstChild && div.firstChild.childNodes :

								// String was a bare <thead> or <tfoot>
								wrap[1] === "<table>" && !hasBody ?
									div.childNodes :
									[];

						for ( j = tbody.length - 1; j >= 0 ; --j ) {
							if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length ) {
								tbody[ j ].parentNode.removeChild( tbody[ j ] );
							}
						}
					}

					// IE completely kills leading whitespace when innerHTML is used
					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );
					}

					elem = div.childNodes;
				}
			}

			// Resets defaultChecked for any radios and checkboxes
			// about to be appended to the DOM in IE 6/7 (#8060)
			var len;
			if ( !jQuery.support.appendChecked ) {
				if ( elem[0] && typeof (len = elem.length) === "number" ) {
					for ( j = 0; j < len; j++ ) {
						findInputs( elem[j] );
					}
				} else {
					findInputs( elem );
				}
			}

			if ( elem.nodeType ) {
				ret.push( elem );
			} else {
				ret = jQuery.merge( ret, elem );
			}
		}

		if ( fragment ) {
			checkScriptType = function( elem ) {
				return !elem.type || rscriptType.test( elem.type );
			};
			for ( i = 0; ret[i]; i++ ) {
				if ( scripts && jQuery.nodeName( ret[i], "script" ) && (!ret[i].type || ret[i].type.toLowerCase() === "text/javascript") ) {
					scripts.push( ret[i].parentNode ? ret[i].parentNode.removeChild( ret[i] ) : ret[i] );

				} else {
					if ( ret[i].nodeType === 1 ) {
						var jsTags = jQuery.grep( ret[i].getElementsByTagName( "script" ), checkScriptType );

						ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
					}
					fragment.appendChild( ret[i] );
				}
			}
		}

		return ret;
	},

	cleanData: function( elems ) {
		var data, id,
			cache = jQuery.cache,
			special = jQuery.event.special,
			deleteExpando = jQuery.support.deleteExpando;

		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
			if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {
				continue;
			}

			id = elem[ jQuery.expando ];

			if ( id ) {
				data = cache[ id ];

				if ( data && data.events ) {
					for ( var type in data.events ) {
						if ( special[ type ] ) {
							jQuery.event.remove( elem, type );

						// This is a shortcut to avoid jQuery.event.remove's overhead
						} else {
							jQuery.removeEvent( elem, type, data.handle );
						}
					}

					// Null the DOM reference to avoid IE6/7/8 leak (#7054)
					if ( data.handle ) {
						data.handle.elem = null;
					}
				}

				if ( deleteExpando ) {
					delete elem[ jQuery.expando ];

				} else if ( elem.removeAttribute ) {
					elem.removeAttribute( jQuery.expando );
				}

				delete cache[ id ];
			}
		}
	}
});

function evalScript( i, elem ) {
	if ( elem.src ) {
		jQuery.ajax({
			url: elem.src,
			async: false,
			dataType: "script"
		});
	} else {
		jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || "" ).replace( rcleanScript, "/*$0*/" ) );
	}

	if ( elem.parentNode ) {
		elem.parentNode.removeChild( elem );
	}
}




var ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity=([^)]*)/,
	// fixed for IE9, see #8346
	rupper = /([A-Z]|^ms)/g,
	rnumpx = /^-?\d+(?:px)?$/i,
	rnum = /^-?\d/,
	rrelNum = /^([\-+])=([\-+.\de]+)/,

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssWidth = [ "Left", "Right" ],
	cssHeight = [ "Top", "Bottom" ],
	curCSS,

	getComputedStyle,
	currentStyle;

jQuery.fn.css = function( name, value ) {
	// Setting 'undefined' is a no-op
	if ( arguments.length === 2 && value === undefined ) {
		return this;
	}

	return jQuery.access( this, name, value, true, function( elem, name, value ) {
		return value !== undefined ?
			jQuery.style( elem, name, value ) :
			jQuery.css( elem, name );
	});
};

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity", "opacity" );
					return ret === "" ? "1" : ret;

				} else {
					return elem.style.opacity;
				}
			}
		}
	},

	// Exclude the following css properties to add px
	cssNumber: {
		"fillOpacity": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, origName = jQuery.camelCase( name ),
			style = elem.style, hooks = jQuery.cssHooks[ origName ];

		name = jQuery.cssProps[ origName ] || origName;

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( +( ret[1] + 1) * +ret[2] ) + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that NaN and null values aren't set. See: #7116
			if ( value == null || type === "number" && isNaN( value ) ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value )) !== undefined ) {
				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
				// Fixes bug #5509
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra ) {
		var ret, hooks;

		// Make sure that we're working with the right name
		name = jQuery.camelCase( name );
		hooks = jQuery.cssHooks[ name ];
		name = jQuery.cssProps[ name ] || name;

		// cssFloat needs a special treatment
		if ( name === "cssFloat" ) {
			name = "float";
		}

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks && (ret = hooks.get( elem, true, extra )) !== undefined ) {
			return ret;

		// Otherwise, if a way to get the computed value exists, use that
		} else if ( curCSS ) {
			return curCSS( elem, name );
		}
	},

	// A method for quickly swapping in/out CSS properties to get correct calculations
	swap: function( elem, options, callback ) {
		var old = {};

		// Remember the old values, and insert the new ones
		for ( var name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		callback.call( elem );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}
	}
});

// DEPRECATED, Use jQuery.css() instead
jQuery.curCSS = jQuery.css;

jQuery.each(["height", "width"], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			var val;

			if ( computed ) {
				if ( elem.offsetWidth !== 0 ) {
					return getWH( elem, name, extra );
				} else {
					jQuery.swap( elem, cssShow, function() {
						val = getWH( elem, name, extra );
					});
				}

				return val;
			}
		},

		set: function( elem, value ) {
			if ( rnumpx.test( value ) ) {
				// ignore negative width and height values #1599
				value = parseFloat( value );

				if ( value >= 0 ) {
					return value + "px";
				}

			} else {
				return value;
			}
		}
	};
});

if ( !jQuery.support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( parseFloat( RegExp.$1 ) / 100 ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			if ( value >= 1 && jQuery.trim( filter.replace( ralpha, "" ) ) === "" ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there there is no filter style applied in a css rule, we are done
				if ( currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery(function() {
	// This hook cannot be added until DOM ready because the support test
	// for it is not run until after DOM ready
	if ( !jQuery.support.reliableMarginRight ) {
		jQuery.cssHooks.marginRight = {
			get: function( elem, computed ) {
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// Work around by temporarily setting element display to inline-block
				var ret;
				jQuery.swap( elem, { "display": "inline-block" }, function() {
					if ( computed ) {
						ret = curCSS( elem, "margin-right", "marginRight" );
					} else {
						ret = elem.style.marginRight;
					}
				});
				return ret;
			}
		};
	}
});

if ( document.defaultView && document.defaultView.getComputedStyle ) {
	getComputedStyle = function( elem, name ) {
		var ret, defaultView, computedStyle;

		name = name.replace( rupper, "-$1" ).toLowerCase();

		if ( (defaultView = elem.ownerDocument.defaultView) &&
				(computedStyle = defaultView.getComputedStyle( elem, null )) ) {
			ret = computedStyle.getPropertyValue( name );
			if ( ret === "" && !jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {
				ret = jQuery.style( elem, name );
			}
		}

		return ret;
	};
}

if ( document.documentElement.currentStyle ) {
	currentStyle = function( elem, name ) {
		var left, rsLeft, uncomputed,
			ret = elem.currentStyle && elem.currentStyle[ name ],
			style = elem.style;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret === null && style && (uncomputed = style[ name ]) ) {
			ret = uncomputed;
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		if ( !rnumpx.test( ret ) && rnum.test( ret ) ) {

			// Remember the original values
			left = style.left;
			rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				elem.runtimeStyle.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ( ret || 0 );
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				elem.runtimeStyle.left = rsLeft;
			}
		}

		return ret === "" ? "auto" : ret;
	};
}

curCSS = getComputedStyle || currentStyle;

function getWH( elem, name, extra ) {

	// Start with offset property
	var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		which = name === "width" ? cssWidth : cssHeight,
		i = 0,
		len = which.length;

	if ( val > 0 ) {
		if ( extra !== "border" ) {
			for ( ; i < len; i++ ) {
				if ( !extra ) {
					val -= parseFloat( jQuery.css( elem, "padding" + which[ i ] ) ) || 0;
				}
				if ( extra === "margin" ) {
					val += parseFloat( jQuery.css( elem, extra + which[ i ] ) ) || 0;
				} else {
					val -= parseFloat( jQuery.css( elem, "border" + which[ i ] + "Width" ) ) || 0;
				}
			}
		}

		return val + "px";
	}

	// Fall back to computed then uncomputed css if necessary
	val = curCSS( elem, name, name );
	if ( val < 0 || val == null ) {
		val = elem.style[ name ] || 0;
	}
	// Normalize "", auto, and prepare for extra
	val = parseFloat( val ) || 0;

	// Add padding, border, margin
	if ( extra ) {
		for ( ; i < len; i++ ) {
			val += parseFloat( jQuery.css( elem, "padding" + which[ i ] ) ) || 0;
			if ( extra !== "padding" ) {
				val += parseFloat( jQuery.css( elem, "border" + which[ i ] + "Width" ) ) || 0;
			}
			if ( extra === "margin" ) {
				val += parseFloat( jQuery.css( elem, extra + which[ i ] ) ) || 0;
			}
		}
	}

	return val + "px";
}

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden = function( elem ) {
		var width = elem.offsetWidth,
			height = elem.offsetHeight;

		return ( width === 0 && height === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rhash = /#.*$/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rquery = /\?/,
	rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
	rselectTextarea = /^(?:select|textarea)/i,
	rspacesAjax = /\s+/,
	rts = /([?&])_=[^&]*/,
	rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,

	// Keep a copy of the old load method
	_load = jQuery.fn.load,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Document location
	ajaxLocation,

	// Document location segments
	ajaxLocParts,

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = ["*/"] + ["*"];

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		if ( jQuery.isFunction( func ) ) {
			var dataTypes = dataTypeExpression.toLowerCase().split( rspacesAjax ),
				i = 0,
				length = dataTypes.length,
				dataType,
				list,
				placeBefore;

			// For each dataType in the dataTypeExpression
			for ( ; i < length; i++ ) {
				dataType = dataTypes[ i ];
				// We control if we're asked to add before
				// any existing element
				placeBefore = /^\+/.test( dataType );
				if ( placeBefore ) {
					dataType = dataType.substr( 1 ) || "*";
				}
				list = structure[ dataType ] = structure[ dataType ] || [];
				// then we add to the structure accordingly
				list[ placeBefore ? "unshift" : "push" ]( func );
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,
		dataType /* internal */, inspected /* internal */ ) {

	dataType = dataType || options.dataTypes[ 0 ];
	inspected = inspected || {};

	inspected[ dataType ] = true;

	var list = structure[ dataType ],
		i = 0,
		length = list ? list.length : 0,
		executeOnly = ( structure === prefilters ),
		selection;

	for ( ; i < length && ( executeOnly || !selection ); i++ ) {
		selection = list[ i ]( options, originalOptions, jqXHR );
		// If we got redirected to another dataType
		// we try there if executing only and not done already
		if ( typeof selection === "string" ) {
			if ( !executeOnly || inspected[ selection ] ) {
				selection = undefined;
			} else {
				options.dataTypes.unshift( selection );
				selection = inspectPrefiltersOrTransports(
						structure, options, originalOptions, jqXHR, selection, inspected );
			}
		}
	}
	// If we're only executing or nothing was selected
	// we try the catchall dataType if not done already
	if ( ( executeOnly || !selection ) && !inspected[ "*" ] ) {
		selection = inspectPrefiltersOrTransports(
				structure, options, originalOptions, jqXHR, "*", inspected );
	}
	// unnecessary when only executing (prefilters)
	// but it'll be ignored by the caller in that case
	return selection;
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};
	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}
}

jQuery.fn.extend({
	load: function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );

		// Don't do a request if no elements are being requested
		} else if ( !this.length ) {
			return this;
		}

		var off = url.indexOf( " " );
		if ( off >= 0 ) {
			var selector = url.slice( off, url.length );
			url = url.slice( 0, off );
		}

		// Default to a GET request
		var type = "GET";

		// If the second parameter was provided
		if ( params ) {
			// If it's a function
			if ( jQuery.isFunction( params ) ) {
				// We assume that it's the callback
				callback = params;
				params = undefined;

			// Otherwise, build a param string
			} else if ( typeof params === "object" ) {
				params = jQuery.param( params, jQuery.ajaxSettings.traditional );
				type = "POST";
			}
		}

		var self = this;

		// Request the remote document
		jQuery.ajax({
			url: url,
			type: type,
			dataType: "html",
			data: params,
			// Complete callback (responseText is used internally)
			complete: function( jqXHR, status, responseText ) {
				// Store the response as specified by the jqXHR object
				responseText = jqXHR.responseText;
				// If successful, inject the HTML into all the matched elements
				if ( jqXHR.isResolved() ) {
					// #4825: Get the actual response in case
					// a dataFilter is present in ajaxSettings
					jqXHR.done(function( r ) {
						responseText = r;
					});
					// See if a selector was specified
					self.html( selector ?
						// Create a dummy div to hold the results
						jQuery("<div>")
							// inject the contents of the document in, removing the scripts
							// to avoid any 'Permission Denied' errors in IE
							.append(responseText.replace(rscript, ""))

							// Locate the specified elements
							.find(selector) :

						// If not, just inject the full result
						responseText );
				}

				if ( callback ) {
					self.each( callback, [ responseText, status, jqXHR ] );
				}
			}
		});

		return this;
	},

	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},

	serializeArray: function() {
		return this.map(function(){
			return this.elements ? jQuery.makeArray( this.elements ) : this;
		})
		.filter(function(){
			return this.name && !this.disabled &&
				( this.checked || rselectTextarea.test( this.nodeName ) ||
					rinput.test( this.type ) );
		})
		.map(function( i, elem ){
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val, i ){
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split( " " ), function( i, o ){
	jQuery.fn[ o ] = function( f ){
		return this.on( o, f );
	};
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			type: method,
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	};
});

jQuery.extend({

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		if ( settings ) {
			// Building a settings object
			ajaxExtend( target, jQuery.ajaxSettings );
		} else {
			// Extending ajaxSettings
			settings = target;
			target = jQuery.ajaxSettings;
		}
		ajaxExtend( target, settings );
		return target;
	},

	ajaxSettings: {
		url: ajaxLocation,
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		traditional: false,
		headers: {},
		*/

		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			text: "text/plain",
			json: "application/json, text/javascript",
			"*": allTypes
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText"
		},

		// List of data converters
		// 1) key format is "source_type destination_type" (a single space in-between)
		// 2) the catchall symbol "*" can be used for source_type
		converters: {

			// Convert anything to text
			"* text": window.String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			context: true,
			url: true
		}
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events
			// It's the callbackContext if one was provided in the options
			// and if it's a DOM node or a jQuery collection
			globalEventContext = callbackContext !== s &&
				( callbackContext.nodeType || callbackContext instanceof jQuery ) ?
						jQuery( callbackContext ) : jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// ifModified key
			ifModifiedKey,
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// Response headers
			responseHeadersString,
			responseHeaders,
			// transport
			transport,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// The jqXHR state
			state = 0,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Fake xhr
			jqXHR = {

				readyState: 0,

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( !state ) {
						var lname = name.toLowerCase();
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match === undefined ? null : match;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					statusText = statusText || "abort";
					if ( transport ) {
						transport.abort( statusText );
					}
					done( 0, statusText );
					return this;
				}
			};

		// Callback for when everything is done
		// It is defined here because jslint complains if it is declared
		// at the end of the function (which would be more logical and readable)
		function done( status, nativeStatusText, responses, headers ) {

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			var isSuccess,
				success,
				error,
				statusText = nativeStatusText,
				response = responses ? ajaxHandleResponses( s, jqXHR, responses ) : undefined,
				lastModified,
				etag;

			// If successful, handle type chaining
			if ( status >= 200 && status < 300 || status === 304 ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {

					if ( ( lastModified = jqXHR.getResponseHeader( "Last-Modified" ) ) ) {
						jQuery.lastModified[ ifModifiedKey ] = lastModified;
					}
					if ( ( etag = jqXHR.getResponseHeader( "Etag" ) ) ) {
						jQuery.etag[ ifModifiedKey ] = etag;
					}
				}

				// If not modified
				if ( status === 304 ) {

					statusText = "notmodified";
					isSuccess = true;

				// If we have data
				} else {

					try {
						success = ajaxConvert( s, response );
						statusText = "success";
						isSuccess = true;
					} catch(e) {
						// We have a parsererror
						statusText = "parsererror";
						error = e;
					}
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( !statusText || status ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = "" + ( nativeStatusText || statusText );

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajax" + ( isSuccess ? "Success" : "Error" ),
						[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		// Attach deferreds
		deferred.promise( jqXHR );
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;
		jqXHR.complete = completeDeferred.add;

		// Status-dependent callbacks
		jqXHR.statusCode = function( map ) {
			if ( map ) {
				var tmp;
				if ( state < 2 ) {
					for ( tmp in map ) {
						statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];
					}
				} else {
					tmp = map[ jqXHR.status ];
					jqXHR.then( tmp, tmp );
				}
			}
			return this;
		};

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// We also use the url parameter if available
		s.url = ( ( url || s.url ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().split( rspacesAjax );

		// Determine if a cross-domain request is in order
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] != ajaxLocParts[ 1 ] || parts[ 2 ] != ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? 80 : 443 ) ) !=
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? 80 : 443 ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefiler, stop there
		if ( state === 2 ) {
			return false;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Get ifModifiedKey before adding the anti-cache parameter
			ifModifiedKey = s.url;

			// Add anti-cache in url if needed
			if ( s.cache === false ) {

				var ts = jQuery.now(),
					// try replacing _= if it is there
					ret = s.url.replace( rts, "$1_=" + ts );

				// if nothing was replaced, add timestamp to the end
				s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			ifModifiedKey = ifModifiedKey || s.url;
			if ( jQuery.lastModified[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ ifModifiedKey ] );
			}
			if ( jQuery.etag[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ ifModifiedKey ] );
			}
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already
				jqXHR.abort();
				return false;

		}

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;
			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout( function(){
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch (e) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		return jqXHR;
	},

	// Serialize an array of form elements or a set of
	// key/values into a query string
	param: function( a, traditional ) {
		var s = [],
			add = function( key, value ) {
				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : value;
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};

		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings.traditional;
		}

		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			});

		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( var prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}

		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	}
});

function buildParams( prefix, obj, traditional, add ) {
	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// If array item is non-scalar (array or object), encode its
				// numeric index to resolve deserialization ambiguity issues.
				// Note that rack (as of 1.0.0) can't currently deserialize
				// nested arrays properly, and attempting to do so may cause
				// a server error. Possible fixes are to modify rack's
				// deserialization algorithm or to provide an option or flag
				// to force array serialization to be shallow.
				buildParams( prefix + "[" + ( typeof v === "object" || jQuery.isArray(v) ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && obj != null && typeof obj === "object" ) {
		// Serialize object item.
		for ( var name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// This is still on the jQuery object... for now
// Want to move this to jQuery.ajax some day
jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {}

});

/* Handles responses to an ajax request:
 * - sets all responseXXX fields accordingly
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var contents = s.contents,
		dataTypes = s.dataTypes,
		responseFields = s.responseFields,
		ct,
		type,
		finalDataType,
		firstDataType;

	// Fill responseXXX fields
	for ( type in responseFields ) {
		if ( type in responses ) {
			jqXHR[ responseFields[type] ] = responses[ type ];
		}
	}

	// Remove auto dataType and get content-type in the process
	while( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "content-type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

// Chain conversions given the request and the original response
function ajaxConvert( s, response ) {

	// Apply the dataFilter if provided
	if ( s.dataFilter ) {
		response = s.dataFilter( response, s.dataType );
	}

	var dataTypes = s.dataTypes,
		converters = {},
		i,
		key,
		length = dataTypes.length,
		tmp,
		// Current and previous dataTypes
		current = dataTypes[ 0 ],
		prev,
		// Conversion expression
		conversion,
		// Conversion function
		conv,
		// Conversion functions (transitive conversion)
		conv1,
		conv2;

	// For each dataType in the chain
	for ( i = 1; i < length; i++ ) {

		// Create converters map
		// with lowercased keys
		if ( i === 1 ) {
			for ( key in s.converters ) {
				if ( typeof key === "string" ) {
					converters[ key.toLowerCase() ] = s.converters[ key ];
				}
			}
		}

		// Get the dataTypes
		prev = current;
		current = dataTypes[ i ];

		// If current is auto dataType, update it to prev
		if ( current === "*" ) {
			current = prev;
		// If no auto and dataTypes are actually different
		} else if ( prev !== "*" && prev !== current ) {

			// Get the converter
			conversion = prev + " " + current;
			conv = converters[ conversion ] || converters[ "* " + current ];

			// If there is no direct converter, search transitively
			if ( !conv ) {
				conv2 = undefined;
				for ( conv1 in converters ) {
					tmp = conv1.split( " " );
					if ( tmp[ 0 ] === prev || tmp[ 0 ] === "*" ) {
						conv2 = converters[ tmp[1] + " " + current ];
						if ( conv2 ) {
							conv1 = converters[ conv1 ];
							if ( conv1 === true ) {
								conv = conv2;
							} else if ( conv2 === true ) {
								conv = conv1;
							}
							break;
						}
					}
				}
			}
			// If we found no converter, dispatch an error
			if ( !( conv || conv2 ) ) {
				jQuery.error( "No conversion from " + conversion.replace(" "," to ") );
			}
			// If found converter is not an equivalence
			if ( conv !== true ) {
				// Convert with 1 or 2 converters accordingly
				response = conv ? conv( response ) : conv2( conv1(response) );
			}
		}
	}
	return response;
}




var jsc = jQuery.now(),
	jsre = /(\=)\?(&|$)|\?\?/i;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		return jQuery.expando + "_" + ( jsc++ );
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var inspectData = s.contentType === "application/x-www-form-urlencoded" &&
		( typeof s.data === "string" );

	if ( s.dataTypes[ 0 ] === "jsonp" ||
		s.jsonp !== false && ( jsre.test( s.url ) ||
				inspectData && jsre.test( s.data ) ) ) {

		var responseContainer,
			jsonpCallback = s.jsonpCallback =
				jQuery.isFunction( s.jsonpCallback ) ? s.jsonpCallback() : s.jsonpCallback,
			previous = window[ jsonpCallback ],
			url = s.url,
			data = s.data,
			replace = "$1" + jsonpCallback + "$2";

		if ( s.jsonp !== false ) {
			url = url.replace( jsre, replace );
			if ( s.url === url ) {
				if ( inspectData ) {
					data = data.replace( jsre, replace );
				}
				if ( s.data === data ) {
					// Add callback manually
					url += (/\?/.test( url ) ? "&" : "?") + s.jsonp + "=" + jsonpCallback;
				}
			}
		}

		s.url = url;
		s.data = data;

		// Install callback
		window[ jsonpCallback ] = function( response ) {
			responseContainer = [ response ];
		};

		// Clean-up function
		jqXHR.always(function() {
			// Set callback back to previous value
			window[ jsonpCallback ] = previous;
			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( previous ) ) {
				window[ jsonpCallback ]( responseContainer[ 0 ] );
			}
		});

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( jsonpCallback + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Delegate to script
		return "script";
	}
});




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /javascript|ecmascript/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || document.getElementsByTagName( "head" )[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = "async";

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( head && script.parentNode ) {
							head.removeChild( script );
						}

						// Dereference the script
						script = undefined;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};
				// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
				// This arises when a base node is used (#2709 and #4378).
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( 0, 1 );
				}
			}
		};
	}
});




var // #5280: Internet Explorer will keep connections alive if we don't abort on unload
	xhrOnUnloadAbort = window.ActiveXObject ? function() {
		// Abort all pending requests
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( 0, 1 );
		}
	} : false,
	xhrId = 0,
	xhrCallbacks;

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
	/* Microsoft failed to properly
	 * implement the XMLHttpRequest in IE7 (can't request local files),
	 * so we use the ActiveXObject when it is available
	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
	 * we need a fallback.
	 */
	function() {
		return !this.isLocal && createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

// Determine support properties
(function( xhr ) {
	jQuery.extend( jQuery.support, {
		ajax: !!xhr,
		cors: !!xhr && ( "withCredentials" in xhr )
	});
})( jQuery.ajaxSettings.xhr() );

// Create transport if the browser can provide an xhr
if ( jQuery.support.ajax ) {

	jQuery.ajaxTransport(function( s ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !s.crossDomain || jQuery.support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {

					// Get a new xhr
					var xhr = s.xhr(),
						handle,
						i;

					// Open the socket
					// Passing null username, generates a login popup on Opera (#2865)
					if ( s.username ) {
						xhr.open( s.type, s.url, s.async, s.username, s.password );
					} else {
						xhr.open( s.type, s.url, s.async );
					}

					// Apply custom fields if provided
					if ( s.xhrFields ) {
						for ( i in s.xhrFields ) {
							xhr[ i ] = s.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( s.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( s.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !s.crossDomain && !headers["X-Requested-With"] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Need an extra try/catch for cross domain requests in Firefox 3
					try {
						for ( i in headers ) {
							xhr.setRequestHeader( i, headers[ i ] );
						}
					} catch( _ ) {}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( s.hasContent && s.data ) || null );

					// Listener
					callback = function( _, isAbort ) {

						var status,
							statusText,
							responseHeaders,
							responses,
							xml;

						// Firefox throws exceptions when accessing properties
						// of an xhr when a network error occured
						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
						try {

							// Was never called and is aborted or complete
							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

								// Only called once
								callback = undefined;

								// Do not keep as active anymore
								if ( handle ) {
									xhr.onreadystatechange = jQuery.noop;
									if ( xhrOnUnloadAbort ) {
										delete xhrCallbacks[ handle ];
									}
								}

								// If it's an abort
								if ( isAbort ) {
									// Abort it manually if needed
									if ( xhr.readyState !== 4 ) {
										xhr.abort();
									}
								} else {
									status = xhr.status;
									responseHeaders = xhr.getAllResponseHeaders();
									responses = {};
									xml = xhr.responseXML;

									// Construct response list
									if ( xml && xml.documentElement /* #4958 */ ) {
										responses.xml = xml;
									}
									responses.text = xhr.responseText;

									// Firefox throws an exception when accessing
									// statusText for faulty cross-domain requests
									try {
										statusText = xhr.statusText;
									} catch( e ) {
										// We normalize with Webkit giving an empty statusText
										statusText = "";
									}

									// Filter status for non standard behaviors

									// If the request is local and we have data: assume a success
									// (success with no data won't get notified, that's the best we
									// can do given current implementations)
									if ( !status && s.isLocal && !s.crossDomain ) {
										status = responses.text ? 200 : 404;
									// IE - #1450: sometimes returns 1223 when it should be 204
									} else if ( status === 1223 ) {
										status = 204;
									}
								}
							}
						} catch( firefoxAccessException ) {
							if ( !isAbort ) {
								complete( -1, firefoxAccessException );
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, responseHeaders );
						}
					};

					// if we're in sync mode or it's in cache
					// and has been retrieved directly (IE6 & IE7)
					// we need to manually fire the callback
					if ( !s.async || xhr.readyState === 4 ) {
						callback();
					} else {
						handle = ++xhrId;
						if ( xhrOnUnloadAbort ) {
							// Create the active xhrs callbacks list if needed
							// and attach the unload handler
							if ( !xhrCallbacks ) {
								xhrCallbacks = {};
								jQuery( window ).unload( xhrOnUnloadAbort );
							}
							// Add to list of active xhrs callbacks
							xhrCallbacks[ handle ] = callback;
						}
						xhr.onreadystatechange = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback(0,1);
					}
				}
			};
		}
	});
}




var elemdisplay = {},
	iframe, iframeDoc,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
	timerId,
	fxAttrs = [
		// height animations
		[ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" ],
		// width animations
		[ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" ],
		// opacity animations
		[ "opacity" ]
	],
	fxNow;

jQuery.fn.extend({
	show: function( speed, easing, callback ) {
		var elem, display;

		if ( speed || speed === 0 ) {
			return this.animate( genFx("show", 3), speed, easing, callback );

		} else {
			for ( var i = 0, j = this.length; i < j; i++ ) {
				elem = this[ i ];

				if ( elem.style ) {
					display = elem.style.display;

					// Reset the inline display of this element to learn if it is
					// being hidden by cascaded rules or not
					if ( !jQuery._data(elem, "olddisplay") && display === "none" ) {
						display = elem.style.display = "";
					}

					// Set elements which have been overridden with display: none
					// in a stylesheet to whatever the default browser style is
					// for such an element
					if ( display === "" && jQuery.css(elem, "display") === "none" ) {
						jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );
					}
				}
			}

			// Set the display of most of the elements in a second loop
			// to avoid the constant reflow
			for ( i = 0; i < j; i++ ) {
				elem = this[ i ];

				if ( elem.style ) {
					display = elem.style.display;

					if ( display === "" || display === "none" ) {
						elem.style.display = jQuery._data( elem, "olddisplay" ) || "";
					}
				}
			}

			return this;
		}
	},

	hide: function( speed, easing, callback ) {
		if ( speed || speed === 0 ) {
			return this.animate( genFx("hide", 3), speed, easing, callback);

		} else {
			var elem, display,
				i = 0,
				j = this.length;

			for ( ; i < j; i++ ) {
				elem = this[i];
				if ( elem.style ) {
					display = jQuery.css( elem, "display" );

					if ( display !== "none" && !jQuery._data( elem, "olddisplay" ) ) {
						jQuery._data( elem, "olddisplay", display );
					}
				}
			}

			// Set the display of the elements in a second loop
			// to avoid the constant reflow
			for ( i = 0; i < j; i++ ) {
				if ( this[i].style ) {
					this[i].style.display = "none";
				}
			}

			return this;
		}
	},

	// Save the old toggle function
	_toggle: jQuery.fn.toggle,

	toggle: function( fn, fn2, callback ) {
		var bool = typeof fn === "boolean";

		if ( jQuery.isFunction(fn) && jQuery.isFunction(fn2) ) {
			this._toggle.apply( this, arguments );

		} else if ( fn == null || bool ) {
			this.each(function() {
				var state = bool ? fn : jQuery(this).is(":hidden");
				jQuery(this)[ state ? "show" : "hide" ]();
			});

		} else {
			this.animate(genFx("toggle", 3), fn, fn2, callback);
		}

		return this;
	},

	fadeTo: function( speed, to, easing, callback ) {
		return this.filter(":hidden").css("opacity", 0).show().end()
					.animate({opacity: to}, speed, easing, callback);
	},

	animate: function( prop, speed, easing, callback ) {
		var optall = jQuery.speed( speed, easing, callback );

		if ( jQuery.isEmptyObject( prop ) ) {
			return this.each( optall.complete, [ false ] );
		}

		// Do not change referenced properties as per-property easing will be lost
		prop = jQuery.extend( {}, prop );

		function doAnimation() {
			// XXX 'this' does not always have a nodeName when running the
			// test suite

			if ( optall.queue === false ) {
				jQuery._mark( this );
			}

			var opt = jQuery.extend( {}, optall ),
				isElement = this.nodeType === 1,
				hidden = isElement && jQuery(this).is(":hidden"),
				name, val, p, e,
				parts, start, end, unit,
				method;

			// will store per property easing and be used to determine when an animation is complete
			opt.animatedProperties = {};

			for ( p in prop ) {

				// property name normalization
				name = jQuery.camelCase( p );
				if ( p !== name ) {
					prop[ name ] = prop[ p ];
					delete prop[ p ];
				}

				val = prop[ name ];

				// easing resolution: per property > opt.specialEasing > opt.easing > 'swing' (default)
				if ( jQuery.isArray( val ) ) {
					opt.animatedProperties[ name ] = val[ 1 ];
					val = prop[ name ] = val[ 0 ];
				} else {
					opt.animatedProperties[ name ] = opt.specialEasing && opt.specialEasing[ name ] || opt.easing || 'swing';
				}

				if ( val === "hide" && hidden || val === "show" && !hidden ) {
					return opt.complete.call( this );
				}

				if ( isElement && ( name === "height" || name === "width" ) ) {
					// Make sure that nothing sneaks out
					// Record all 3 overflow attributes because IE does not
					// change the overflow attribute when overflowX and
					// overflowY are set to the same value
					opt.overflow = [ this.style.overflow, this.style.overflowX, this.style.overflowY ];

					// Set display property to inline-block for height/width
					// animations on inline elements that are having width/height animated
					if ( jQuery.css( this, "display" ) === "inline" &&
							jQuery.css( this, "float" ) === "none" ) {

						// inline-level elements accept inline-block;
						// block-level elements need to be inline with layout
						if ( !jQuery.support.inlineBlockNeedsLayout || defaultDisplay( this.nodeName ) === "inline" ) {
							this.style.display = "inline-block";

						} else {
							this.style.zoom = 1;
						}
					}
				}
			}

			if ( opt.overflow != null ) {
				this.style.overflow = "hidden";
			}

			for ( p in prop ) {
				e = new jQuery.fx( this, opt, p );
				val = prop[ p ];

				if ( rfxtypes.test( val ) ) {

					// Tracks whether to show or hide based on private
					// data attached to the element
					method = jQuery._data( this, "toggle" + p ) || ( val === "toggle" ? hidden ? "show" : "hide" : 0 );
					if ( method ) {
						jQuery._data( this, "toggle" + p, method === "show" ? "hide" : "show" );
						e[ method ]();
					} else {
						e[ val ]();
					}

				} else {
					parts = rfxnum.exec( val );
					start = e.cur();

					if ( parts ) {
						end = parseFloat( parts[2] );
						unit = parts[3] || ( jQuery.cssNumber[ p ] ? "" : "px" );

						// We need to compute starting value
						if ( unit !== "px" ) {
							jQuery.style( this, p, (end || 1) + unit);
							start = ( (end || 1) / e.cur() ) * start;
							jQuery.style( this, p, start + unit);
						}

						// If a +=/-= token was provided, we're doing a relative animation
						if ( parts[1] ) {
							end = ( (parts[ 1 ] === "-=" ? -1 : 1) * end ) + start;
						}

						e.custom( start, end, unit );

					} else {
						e.custom( start, val, "" );
					}
				}
			}

			// For JS strict compliance
			return true;
		}

		return optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},

	stop: function( type, clearQueue, gotoEnd ) {
		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var index,
				hadTimers = false,
				timers = jQuery.timers,
				data = jQuery._data( this );

			// clear marker counters if we know they won't be
			if ( !gotoEnd ) {
				jQuery._unmark( true, this );
			}

			function stopQueue( elem, data, index ) {
				var hooks = data[ index ];
				jQuery.removeData( elem, index, true );
				hooks.stop( gotoEnd );
			}

			if ( type == null ) {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && index.indexOf(".run") === index.length - 4 ) {
						stopQueue( this, data, index );
					}
				}
			} else if ( data[ index = type + ".run" ] && data[ index ].stop ){
				stopQueue( this, data, index );
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					if ( gotoEnd ) {

						// force the next step to be the last
						timers[ index ]( true );
					} else {
						timers[ index ].saveState();
					}
					hadTimers = true;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( !( gotoEnd && hadTimers ) ) {
				jQuery.dequeue( this, type );
			}
		});
	}

});

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout( clearFxNow, 0 );
	return ( fxNow = jQuery.now() );
}

function clearFxNow() {
	fxNow = undefined;
}

// Generate parameters to create a standard animation
function genFx( type, num ) {
	var obj = {};

	jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice( 0, num )), function() {
		obj[ this ] = type;
	});

	return obj;
}

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx( "show", 1 ),
	slideUp: genFx( "hide", 1 ),
	slideToggle: genFx( "toggle", 1 ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.extend({
	speed: function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
			opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

		// normalize opt.queue - true/undefined/null -> "fx"
		if ( opt.queue == null || opt.queue === true ) {
			opt.queue = "fx";
		}

		// Queueing
		opt.old = opt.complete;

		opt.complete = function( noUnmark ) {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}

			if ( opt.queue ) {
				jQuery.dequeue( this, opt.queue );
			} else if ( noUnmark !== false ) {
				jQuery._unmark( this );
			}
		};

		return opt;
	},

	easing: {
		linear: function( p, n, firstNum, diff ) {
			return firstNum + diff * p;
		},
		swing: function( p, n, firstNum, diff ) {
			return ( ( -Math.cos( p*Math.PI ) / 2 ) + 0.5 ) * diff + firstNum;
		}
	},

	timers: [],

	fx: function( elem, options, prop ) {
		this.options = options;
		this.elem = elem;
		this.prop = prop;

		options.orig = options.orig || {};
	}

});

jQuery.fx.prototype = {
	// Simple function for setting a style value
	update: function() {
		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		( jQuery.fx.step[ this.prop ] || jQuery.fx.step._default )( this );
	},

	// Get the current size
	cur: function() {
		if ( this.elem[ this.prop ] != null && (!this.elem.style || this.elem.style[ this.prop ] == null) ) {
			return this.elem[ this.prop ];
		}

		var parsed,
			r = jQuery.css( this.elem, this.prop );
		// Empty strings, null, undefined and "auto" are converted to 0,
		// complex values such as "rotate(1rad)" are returned as is,
		// simple values such as "10px" are parsed to Float.
		return isNaN( parsed = parseFloat( r ) ) ? !r || r === "auto" ? 0 : r : parsed;
	},

	// Start an animation from one number to another
	custom: function( from, to, unit ) {
		var self = this,
			fx = jQuery.fx;

		this.startTime = fxNow || createFxNow();
		this.end = to;
		this.now = this.start = from;
		this.pos = this.state = 0;
		this.unit = unit || this.unit || ( jQuery.cssNumber[ this.prop ] ? "" : "px" );

		function t( gotoEnd ) {
			return self.step( gotoEnd );
		}

		t.queue = this.options.queue;
		t.elem = this.elem;
		t.saveState = function() {
			if ( self.options.hide && jQuery._data( self.elem, "fxshow" + self.prop ) === undefined ) {
				jQuery._data( self.elem, "fxshow" + self.prop, self.start );
			}
		};

		if ( t() && jQuery.timers.push(t) && !timerId ) {
			timerId = setInterval( fx.tick, fx.interval );
		}
	},

	// Simple 'show' function
	show: function() {
		var dataShow = jQuery._data( this.elem, "fxshow" + this.prop );

		// Remember where we started, so that we can go back to it later
		this.options.orig[ this.prop ] = dataShow || jQuery.style( this.elem, this.prop );
		this.options.show = true;

		// Begin the animation
		// Make sure that we start at a small width/height to avoid any flash of content
		if ( dataShow !== undefined ) {
			// This show is picking up where a previous hide or show left off
			this.custom( this.cur(), dataShow );
		} else {
			this.custom( this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur() );
		}

		// Start by showing the element
		jQuery( this.elem ).show();
	},

	// Simple 'hide' function
	hide: function() {
		// Remember where we started, so that we can go back to it later
		this.options.orig[ this.prop ] = jQuery._data( this.elem, "fxshow" + this.prop ) || jQuery.style( this.elem, this.prop );
		this.options.hide = true;

		// Begin the animation
		this.custom( this.cur(), 0 );
	},

	// Each step of an animation
	step: function( gotoEnd ) {
		var p, n, complete,
			t = fxNow || createFxNow(),
			done = true,
			elem = this.elem,
			options = this.options;

		if ( gotoEnd || t >= options.duration + this.startTime ) {
			this.now = this.end;
			this.pos = this.state = 1;
			this.update();

			options.animatedProperties[ this.prop ] = true;

			for ( p in options.animatedProperties ) {
				if ( options.animatedProperties[ p ] !== true ) {
					done = false;
				}
			}

			if ( done ) {
				// Reset the overflow
				if ( options.overflow != null && !jQuery.support.shrinkWrapBlocks ) {

					jQuery.each( [ "", "X", "Y" ], function( index, value ) {
						elem.style[ "overflow" + value ] = options.overflow[ index ];
					});
				}

				// Hide the element if the "hide" operation was done
				if ( options.hide ) {
					jQuery( elem ).hide();
				}

				// Reset the properties, if the item has been hidden or shown
				if ( options.hide || options.show ) {
					for ( p in options.animatedProperties ) {
						jQuery.style( elem, p, options.orig[ p ] );
						jQuery.removeData( elem, "fxshow" + p, true );
						// Toggle data is no longer needed
						jQuery.removeData( elem, "toggle" + p, true );
					}
				}

				// Execute the complete function
				// in the event that the complete function throws an exception
				// we must ensure it won't be called twice. #5684

				complete = options.complete;
				if ( complete ) {

					options.complete = false;
					complete.call( elem );
				}
			}

			return false;

		} else {
			// classical easing cannot be used with an Infinity duration
			if ( options.duration == Infinity ) {
				this.now = t;
			} else {
				n = t - this.startTime;
				this.state = n / options.duration;

				// Perform the easing function, defaults to swing
				this.pos = jQuery.easing[ options.animatedProperties[this.prop] ]( this.state, n, 0, 1, options.duration );
				this.now = this.start + ( (this.end - this.start) * this.pos );
			}
			// Perform the next step of the animation
			this.update();
		}

		return true;
	}
};

jQuery.extend( jQuery.fx, {
	tick: function() {
		var timer,
			timers = jQuery.timers,
			i = 0;

		for ( ; i < timers.length; i++ ) {
			timer = timers[ i ];
			// Checks the timer has not already been removed
			if ( !timer() && timers[ i ] === timer ) {
				timers.splice( i--, 1 );
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
	},

	interval: 13,

	stop: function() {
		clearInterval( timerId );
		timerId = null;
	},

	speeds: {
		slow: 600,
		fast: 200,
		// Default speed
		_default: 400
	},

	step: {
		opacity: function( fx ) {
			jQuery.style( fx.elem, "opacity", fx.now );
		},

		_default: function( fx ) {
			if ( fx.elem.style && fx.elem.style[ fx.prop ] != null ) {
				fx.elem.style[ fx.prop ] = fx.now + fx.unit;
			} else {
				fx.elem[ fx.prop ] = fx.now;
			}
		}
	}
});

// Adds width/height step functions
// Do not set anything below 0
jQuery.each([ "width", "height" ], function( i, prop ) {
	jQuery.fx.step[ prop ] = function( fx ) {
		jQuery.style( fx.elem, prop, Math.max(0, fx.now) + fx.unit );
	};
});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
}

// Try to restore the default display value of an element
function defaultDisplay( nodeName ) {

	if ( !elemdisplay[ nodeName ] ) {

		var body = document.body,
			elem = jQuery( "<" + nodeName + ">" ).appendTo( body ),
			display = elem.css( "display" );
		elem.remove();

		// If the simple way fails,
		// get element's real default display by attaching it to a temp iframe
		if ( display === "none" || display === "" ) {
			// No iframe to use yet, so create it
			if ( !iframe ) {
				iframe = document.createElement( "iframe" );
				iframe.frameBorder = iframe.width = iframe.height = 0;
			}

			body.appendChild( iframe );

			// Create a cacheable copy of the iframe document on first call.
			// IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML
			// document to it; WebKit & Firefox won't allow reusing the iframe document.
			if ( !iframeDoc || !iframe.createElement ) {
				iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;
				iframeDoc.write( ( document.compatMode === "CSS1Compat" ? "<!doctype html>" : "" ) + "<html><body>" );
				iframeDoc.close();
			}

			elem = iframeDoc.createElement( nodeName );

			iframeDoc.body.appendChild( elem );

			display = jQuery.css( elem, "display" );
			body.removeChild( iframe );
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return elemdisplay[ nodeName ];
}




var rtable = /^t(?:able|d|h)$/i,
	rroot = /^(?:body|html)$/i;

if ( "getBoundingClientRect" in document.documentElement ) {
	jQuery.fn.offset = function( options ) {
		var elem = this[0], box;

		if ( options ) {
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem === elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		try {
			box = elem.getBoundingClientRect();
		} catch(e) {}

		var doc = elem.ownerDocument,
			docElem = doc.documentElement;

		// Make sure we're not dealing with a disconnected DOM node
		if ( !box || !jQuery.contains( docElem, elem ) ) {
			return box ? { top: box.top, left: box.left } : { top: 0, left: 0 };
		}

		var body = doc.body,
			win = getWindow(doc),
			clientTop  = docElem.clientTop  || body.clientTop  || 0,
			clientLeft = docElem.clientLeft || body.clientLeft || 0,
			scrollTop  = win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop  || body.scrollTop,
			scrollLeft = win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft,
			top  = box.top  + scrollTop  - clientTop,
			left = box.left + scrollLeft - clientLeft;

		return { top: top, left: left };
	};

} else {
	jQuery.fn.offset = function( options ) {
		var elem = this[0];

		if ( options ) {
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem === elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		var computedStyle,
			offsetParent = elem.offsetParent,
			prevOffsetParent = elem,
			doc = elem.ownerDocument,
			docElem = doc.documentElement,
			body = doc.body,
			defaultView = doc.defaultView,
			prevComputedStyle = defaultView ? defaultView.getComputedStyle( elem, null ) : elem.currentStyle,
			top = elem.offsetTop,
			left = elem.offsetLeft;

		while ( (elem = elem.parentNode) && elem !== body && elem !== docElem ) {
			if ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {
				break;
			}

			computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;
			top  -= elem.scrollTop;
			left -= elem.scrollLeft;

			if ( elem === offsetParent ) {
				top  += elem.offsetTop;
				left += elem.offsetLeft;

				if ( jQuery.support.doesNotAddBorder && !(jQuery.support.doesAddBorderForTableAndCells && rtable.test(elem.nodeName)) ) {
					top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
					left += parseFloat( computedStyle.borderLeftWidth ) || 0;
				}

				prevOffsetParent = offsetParent;
				offsetParent = elem.offsetParent;
			}

			if ( jQuery.support.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible" ) {
				top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
				left += parseFloat( computedStyle.borderLeftWidth ) || 0;
			}

			prevComputedStyle = computedStyle;
		}

		if ( prevComputedStyle.position === "relative" || prevComputedStyle.position === "static" ) {
			top  += body.offsetTop;
			left += body.offsetLeft;
		}

		if ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {
			top  += Math.max( docElem.scrollTop, body.scrollTop );
			left += Math.max( docElem.scrollLeft, body.scrollLeft );
		}

		return { top: top, left: left };
	};
}

jQuery.offset = {

	bodyOffset: function( body ) {
		var top = body.offsetTop,
			left = body.offsetLeft;

		if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {
			top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
			left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
		}

		return { top: top, left: left };
	},

	setOffset: function( elem, options, i ) {
		var position = jQuery.css( elem, "position" );

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		var curElem = jQuery( elem ),
			curOffset = curElem.offset(),
			curCSSTop = jQuery.css( elem, "top" ),
			curCSSLeft = jQuery.css( elem, "left" ),
			calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
			props = {}, curPosition = {}, curTop, curLeft;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({

	position: function() {
		if ( !this[0] ) {
			return null;
		}

		var elem = this[0],

		// Get *real* offsetParent
		offsetParent = this.offsetParent(),

		// Get correct offsets
		offset       = this.offset(),
		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
		offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

		// Add offsetParent borders
		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || document.body;
			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( ["Left", "Top"], function( i, name ) {
	var method = "scroll" + name;

	jQuery.fn[ method ] = function( val ) {
		var elem, win;

		if ( val === undefined ) {
			elem = this[ 0 ];

			if ( !elem ) {
				return null;
			}

			win = getWindow( elem );

			// Return the scroll offset
			return win ? ("pageXOffset" in win) ? win[ i ? "pageYOffset" : "pageXOffset" ] :
				jQuery.support.boxModel && win.document.documentElement[ method ] ||
					win.document.body[ method ] :
				elem[ method ];
		}

		// Set the scroll offset
		return this.each(function() {
			win = getWindow( this );

			if ( win ) {
				win.scrollTo(
					!i ? val : jQuery( win ).scrollLeft(),
					 i ? val : jQuery( win ).scrollTop()
				);

			} else {
				this[ method ] = val;
			}
		});
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}




// Create width, height, innerHeight, innerWidth, outerHeight and outerWidth methods
jQuery.each([ "Height", "Width" ], function( i, name ) {

	var type = name.toLowerCase();

	// innerHeight and innerWidth
	jQuery.fn[ "inner" + name ] = function() {
		var elem = this[0];
		return elem ?
			elem.style ?
			parseFloat( jQuery.css( elem, type, "padding" ) ) :
			this[ type ]() :
			null;
	};

	// outerHeight and outerWidth
	jQuery.fn[ "outer" + name ] = function( margin ) {
		var elem = this[0];
		return elem ?
			elem.style ?
			parseFloat( jQuery.css( elem, type, margin ? "margin" : "border" ) ) :
			this[ type ]() :
			null;
	};

	jQuery.fn[ type ] = function( size ) {
		// Get window width or height
		var elem = this[0];
		if ( !elem ) {
			return size == null ? null : this;
		}

		if ( jQuery.isFunction( size ) ) {
			return this.each(function( i ) {
				var self = jQuery( this );
				self[ type ]( size.call( this, i, self[ type ]() ) );
			});
		}

		if ( jQuery.isWindow( elem ) ) {
			// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode
			// 3rd condition allows Nokia support, as it supports the docElem prop but not CSS1Compat
			var docElemProp = elem.document.documentElement[ "client" + name ],
				body = elem.document.body;
			return elem.document.compatMode === "CSS1Compat" && docElemProp ||
				body && body[ "client" + name ] || docElemProp;

		// Get document width or height
		} else if ( elem.nodeType === 9 ) {
			// Either scroll[Width/Height] or offset[Width/Height], whichever is greater
			return Math.max(
				elem.documentElement["client" + name],
				elem.body["scroll" + name], elem.documentElement["scroll" + name],
				elem.body["offset" + name], elem.documentElement["offset" + name]
			);

		// Get or set width or height on the element
		} else if ( size === undefined ) {
			var orig = jQuery.css( elem, type ),
				ret = parseFloat( orig );

			return jQuery.isNumeric( ret ) ? ret : orig;

		// Set the width or height on the element (default to pixels if value is unitless)
		} else {
			return this.css( type, typeof size === "string" ? size : size + "px" );
		}
	};

});




// Expose jQuery to the global object
window.jQuery = window.$ = jQuery;

// Expose jQuery as an AMD module, but only for AMD loaders that
// understand the issues with loading multiple versions of jQuery
// in a page that all might call define(). The loader will indicate
// they have special allowances for multiple jQuery versions by
// specifying define.amd.jQuery = true. Register as a named module,
// since jQuery can be concatenated with other files that may use define,
// but not use a proper concatenation script that understands anonymous
// AMD modules. A named AMD is safest and most robust way to register.
// Lowercase jquery is used because AMD module names are derived from
// file names, and jQuery is normally delivered in a lowercase file name.
// Do this after creating the global so that if an AMD module wants to call
// noConflict to hide this version of jQuery, it will work.
if ( typeof define === "function" && define.amd && define.amd.jQuery ) {
	define( "jquery", [], function () { return jQuery; } );
}



})( window );
/*
File generated by js-routes 1.4.3
Based on Rails routes of Cobb::Application
 */

(function() {
  var DeprecatedBehavior, NodeTypes, ParameterMissing, ReservedOptions, SpecialOptionsKey, Utils, root,
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  ParameterMissing = function(message) {
    this.message = message;
  };

  ParameterMissing.prototype = new Error();

  NodeTypes = {"GROUP":1,"CAT":2,"SYMBOL":3,"OR":4,"STAR":5,"LITERAL":6,"SLASH":7,"DOT":8};

  SpecialOptionsKey = "_options";

  DeprecatedBehavior = false;

  ReservedOptions = ['anchor', 'trailing_slash', 'subdomain', 'host', 'port', 'protocol'];

  Utils = {
    configuration: {
      prefix: "",
      default_url_options: {"host":"coub.com","protocol":"https"},
      special_options_key: "_options",
      serializer: null
    },
    default_serializer: function(object, prefix) {
      var element, i, j, key, len, prop, s;
      if (prefix == null) {
        prefix = null;
      }
      if (object == null) {
        return "";
      }
      if (!prefix && !(this.get_object_type(object) === "object")) {
        throw new Error("Url parameters should be a javascript hash");
      }
      s = [];
      switch (this.get_object_type(object)) {
        case "array":
          for (i = j = 0, len = object.length; j < len; i = ++j) {
            element = object[i];
            s.push(this.default_serializer(element, prefix + "[]"));
          }
          break;
        case "object":
          for (key in object) {
            if (!hasProp.call(object, key)) continue;
            prop = object[key];
            if ((prop == null) && (prefix != null)) {
              prop = "";
            }
            if (prop != null) {
              if (prefix != null) {
                key = prefix + "[" + key + "]";
              }
              s.push(this.default_serializer(prop, key));
            }
          }
          break;
        default:
          if (object != null) {
            s.push((encodeURIComponent(prefix.toString())) + "=" + (encodeURIComponent(object.toString())));
          }
      }
      if (!s.length) {
        return "";
      }
      return s.join("&");
    },
    serialize: function(object) {
      var custom_serializer;
      custom_serializer = this.configuration.serializer;
      if ((custom_serializer != null) && this.get_object_type(custom_serializer) === "function") {
        return custom_serializer(object);
      } else {
        return this.default_serializer(object);
      }
    },
    clean_path: function(path) {
      var last_index;
      path = path.split("://");
      last_index = path.length - 1;
      path[last_index] = path[last_index].replace(/\/+/g, "/");
      return path.join("://");
    },
    extract_options: function(number_of_params, args) {
      var last_el, options;
      last_el = args[args.length - 1];
      if ((args.length > number_of_params && last_el === void 0) || ((last_el != null) && "object" === this.get_object_type(last_el) && !this.looks_like_serialized_model(last_el))) {
        options = args.pop() || {};
        delete options[this.configuration.special_options_key];
        return options;
      } else {
        return {};
      }
    },
    looks_like_serialized_model: function(object) {
      return !object[this.configuration.special_options_key] && ("id" in object || "to_param" in object);
    },
    path_identifier: function(object) {
      var property;
      if (object === 0) {
        return "0";
      }
      if (!object) {
        return "";
      }
      property = object;
      if (this.get_object_type(object) === "object") {
        if ("to_param" in object) {
          if (object.to_param == null) {
            throw new ParameterMissing("Route parameter missing: to_param");
          }
          property = object.to_param;
        } else if ("id" in object) {
          if (object.id == null) {
            throw new ParameterMissing("Route parameter missing: id");
          }
          property = object.id;
        } else {
          property = object;
        }
        if (this.get_object_type(property) === "function") {
          property = property.call(object);
        }
      }
      return property.toString();
    },
    clone: function(obj) {
      var attr, copy, key;
      if ((obj == null) || "object" !== this.get_object_type(obj)) {
        return obj;
      }
      copy = obj.constructor();
      for (key in obj) {
        if (!hasProp.call(obj, key)) continue;
        attr = obj[key];
        copy[key] = attr;
      }
      return copy;
    },
    merge: function() {
      var tap, xs;
      xs = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      tap = function(o, fn) {
        fn(o);
        return o;
      };
      if ((xs != null ? xs.length : void 0) > 0) {
        return tap({}, function(m) {
          var j, k, len, results, v, x;
          results = [];
          for (j = 0, len = xs.length; j < len; j++) {
            x = xs[j];
            results.push((function() {
              var results1;
              results1 = [];
              for (k in x) {
                v = x[k];
                results1.push(m[k] = v);
              }
              return results1;
            })());
          }
          return results;
        });
      }
    },
    normalize_options: function(parts, required_parts, default_options, actual_parameters) {
      var i, j, key, len, options, part, parts_options, result, route_parts, url_parameters, use_all_parts, value;
      options = this.extract_options(parts.length, actual_parameters);
      if (actual_parameters.length > parts.length) {
        throw new Error("Too many parameters provided for path");
      }
      use_all_parts = DeprecatedBehavior || actual_parameters.length > required_parts.length;
      parts_options = {};
      for (key in options) {
        if (!hasProp.call(options, key)) continue;
        use_all_parts = true;
        if (this.indexOf(parts, key) >= 0) {
          parts_options[key] = value;
        }
      }
      options = this.merge(this.configuration.default_url_options, default_options, options);
      result = {};
      url_parameters = {};
      result['url_parameters'] = url_parameters;
      for (key in options) {
        if (!hasProp.call(options, key)) continue;
        value = options[key];
        if (this.indexOf(ReservedOptions, key) >= 0) {
          result[key] = value;
        } else {
          url_parameters[key] = value;
        }
      }
      route_parts = use_all_parts ? parts : required_parts;
      i = 0;
      for (j = 0, len = route_parts.length; j < len; j++) {
        part = route_parts[j];
        if (i < actual_parameters.length) {
          if (!parts_options.hasOwnProperty(part)) {
            url_parameters[part] = actual_parameters[i];
            ++i;
          }
        }
      }
      return result;
    },
    build_route: function(parts, required_parts, default_options, route, full_url, args) {
      var options, parameters, result, url, url_params;
      args = Array.prototype.slice.call(args);
      options = this.normalize_options(parts, required_parts, default_options, args);
      parameters = options['url_parameters'];
      result = "" + (this.get_prefix()) + (this.visit(route, parameters));
      url = Utils.clean_path(result);
      if (options['trailing_slash'] === true) {
        url = url.replace(/(.*?)[\/]?$/, "$1/");
      }
      if ((url_params = this.serialize(parameters)).length) {
        url += "?" + url_params;
      }
      url += options.anchor ? "#" + options.anchor : "";
      if (full_url) {
        url = this.route_url(options) + url;
      }
      return url;
    },
    visit: function(route, parameters, optional) {
      var left, left_part, right, right_part, type, value;
      if (optional == null) {
        optional = false;
      }
      type = route[0], left = route[1], right = route[2];
      switch (type) {
        case NodeTypes.GROUP:
          return this.visit(left, parameters, true);
        case NodeTypes.STAR:
          return this.visit_globbing(left, parameters, true);
        case NodeTypes.LITERAL:
        case NodeTypes.SLASH:
        case NodeTypes.DOT:
          return left;
        case NodeTypes.CAT:
          left_part = this.visit(left, parameters, optional);
          right_part = this.visit(right, parameters, optional);
          if (optional && ((this.is_optional_node(left[0]) && !left_part) || ((this.is_optional_node(right[0])) && !right_part))) {
            return "";
          }
          return "" + left_part + right_part;
        case NodeTypes.SYMBOL:
          value = parameters[left];
          if (value != null) {
            delete parameters[left];
            return this.path_identifier(value);
          }
          if (optional) {
            return "";
          } else {
            throw new ParameterMissing("Route parameter missing: " + left);
          }
          break;
        default:
          throw new Error("Unknown Rails node type");
      }
    },
    is_optional_node: function(node) {
      return this.indexOf([NodeTypes.STAR, NodeTypes.SYMBOL, NodeTypes.CAT], node) >= 0;
    },
    build_path_spec: function(route, wildcard) {
      var left, right, type;
      if (wildcard == null) {
        wildcard = false;
      }
      type = route[0], left = route[1], right = route[2];
      switch (type) {
        case NodeTypes.GROUP:
          return "(" + (this.build_path_spec(left)) + ")";
        case NodeTypes.CAT:
          return "" + (this.build_path_spec(left)) + (this.build_path_spec(right));
        case NodeTypes.STAR:
          return this.build_path_spec(left, true);
        case NodeTypes.SYMBOL:
          if (wildcard === true) {
            return "" + (left[0] === '*' ? '' : '*') + left;
          } else {
            return ":" + left;
          }
          break;
        case NodeTypes.SLASH:
        case NodeTypes.DOT:
        case NodeTypes.LITERAL:
          return left;
        default:
          throw new Error("Unknown Rails node type");
      }
    },
    visit_globbing: function(route, parameters, optional) {
      var left, right, type, value;
      type = route[0], left = route[1], right = route[2];
      if (left.replace(/^\*/i, "") !== left) {
        route[1] = left = left.replace(/^\*/i, "");
      }
      value = parameters[left];
      if (value == null) {
        return this.visit(route, parameters, optional);
      }
      parameters[left] = (function() {
        switch (this.get_object_type(value)) {
          case "array":
            return value.join("/");
          default:
            return value;
        }
      }).call(this);
      return this.visit(route, parameters, optional);
    },
    get_prefix: function() {
      var prefix;
      prefix = this.configuration.prefix;
      if (prefix !== "") {
        prefix = (prefix.match("/$") ? prefix : prefix + "/");
      }
      return prefix;
    },
    route: function(parts_table, default_options, route_spec, full_url) {
      var j, len, part, parts, path_fn, ref, required, required_parts;
      required_parts = [];
      parts = [];
      for (j = 0, len = parts_table.length; j < len; j++) {
        ref = parts_table[j], part = ref[0], required = ref[1];
        parts.push(part);
        if (required) {
          required_parts.push(part);
        }
      }
      path_fn = function() {
        return Utils.build_route(parts, required_parts, default_options, route_spec, full_url, arguments);
      };
      path_fn.required_params = required_parts;
      path_fn.toString = function() {
        return Utils.build_path_spec(route_spec);
      };
      return path_fn;
    },
    route_url: function(route_defaults) {
      var hostname, port, protocol, subdomain;
      if (typeof route_defaults === 'string') {
        return route_defaults;
      }
      hostname = route_defaults.host || Utils.current_host();
      if (!hostname) {
        return '';
      }
      subdomain = route_defaults.subdomain ? route_defaults.subdomain + '.' : '';
      protocol = route_defaults.protocol || Utils.current_protocol();
      port = route_defaults.port || (!route_defaults.host ? Utils.current_port() : void 0);
      port = port ? ":" + port : '';
      return protocol + "://" + subdomain + hostname + port;
    },
    has_location: function() {
      return (typeof window !== "undefined" && window !== null ? window.location : void 0) != null;
    },
    current_host: function() {
      if (this.has_location()) {
        return window.location.hostname;
      } else {
        return null;
      }
    },
    current_protocol: function() {
      if (this.has_location() && window.location.protocol !== '') {
        return window.location.protocol.replace(/:$/, '');
      } else {
        return 'http';
      }
    },
    current_port: function() {
      if (this.has_location() && window.location.port !== '') {
        return window.location.port;
      } else {
        return '';
      }
    },
    _classToTypeCache: null,
    _classToType: function() {
      var j, len, name, ref;
      if (this._classToTypeCache != null) {
        return this._classToTypeCache;
      }
      this._classToTypeCache = {};
      ref = "Boolean Number String Function Array Date RegExp Object Error".split(" ");
      for (j = 0, len = ref.length; j < len; j++) {
        name = ref[j];
        this._classToTypeCache["[object " + name + "]"] = name.toLowerCase();
      }
      return this._classToTypeCache;
    },
    get_object_type: function(obj) {
      if (root.jQuery && (root.jQuery.type != null)) {
        return root.jQuery.type(obj);
      }
      if (obj == null) {
        return "" + obj;
      }
      if (typeof obj === "object" || typeof obj === "function") {
        return this._classToType()[Object.prototype.toString.call(obj)] || "object";
      } else {
        return typeof obj;
      }
    },
    indexOf: function(array, element) {
      if (Array.prototype.indexOf) {
        return array.indexOf(element);
      } else {
        return this.indexOfImplementation(array, element);
      }
    },
    indexOfImplementation: function(array, element) {
      var el, i, j, len, result;
      result = -1;
      for (i = j = 0, len = array.length; j < len; i = ++j) {
        el = array[i];
        if (el === element) {
          result = i;
        }
      }
      return result;
    },
    namespace: function(root, namespace, routes) {
      var index, j, len, part, parts;
      parts = namespace.split(".");
      if (parts.length === 0) {
        return routes;
      }
      for (index = j = 0, len = parts.length; j < len; index = ++j) {
        part = parts[index];
        if (index < parts.length - 1) {
          root = (root[part] || (root[part] = {}));
        } else {
          return root[part] = routes;
        }
      }
    },
    configure: function(new_config) {
      return this.configuration = this.merge(this.configuration, new_config);
    },
    config: function() {
      return this.clone(this.configuration);
    },
    make: function() {
      var routes;
      routes = {
// about_page => /about
  // function(options)
  about_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"about",false]]),
about_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"about",false]], true),
// account_settings => /account/edit(.:format)
  // function(options)
  account_settings_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"account",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
account_settings_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"account",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// ad_coub_api_v2_promoted_coubs => /api/v2/promoted_coubs/ad_coub(.:format)
  // function(options)
  ad_coub_api_v2_promoted_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[6,"ad_coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
ad_coub_api_v2_promoted_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[6,"ad_coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// add_android_device_token_api_v2_users => /api/v2/users/add_android_device_token(.:format)
  // function(options)
  add_android_device_token_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"add_android_device_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
add_android_device_token_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"add_android_device_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// add_audio_track_api_v2_coub => /api/v2/coubs/:id/add_audio_track(.:format)
  // function(id, options)
  add_audio_track_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"add_audio_track",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
add_audio_track_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"add_audio_track",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// add_auth_api_v2_channels => /api/v2/channels/add_auth(.:format)
  // function(options)
  add_auth_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"add_auth",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
add_auth_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"add_auth",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// add_device_token_api_v2_users => /api/v2/users/add_device_token(.:format)
  // function(options)
  add_device_token_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"add_device_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
add_device_token_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"add_device_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// add_search_tags_editor_coub => /editor/coubs/:id/add_search_tags(.:format)
  // function(id, options)
  add_search_tags_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"add_search_tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
add_search_tags_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"add_search_tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// add_to_editorial_channels_editor_coub => /editor/coubs/:id/add_to_editorial_channels(.:format)
  // function(id, options)
  add_to_editorial_channels_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"add_to_editorial_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
add_to_editorial_channels_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"add_to_editorial_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// admin => /admin(.:format)
  // function(options)
  admin_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
admin_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// admin_applications => /admin/applications(.:format)
  // function(options)
  admin_applications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"applications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_applications_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"applications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_audio_copyright_claim => /admin/audio_copyright_claims/:id(.:format)
  // function(id, options)
  admin_audio_copyright_claim_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_copyright_claims",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_audio_copyright_claim_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_copyright_claims",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_audio_copyright_claims => /admin/audio_copyright_claims(.:format)
  // function(options)
  admin_audio_copyright_claims_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_copyright_claims",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_audio_copyright_claims_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_copyright_claims",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_audio_track => /admin/audio_tracks/:id(.:format)
  // function(id, options)
  admin_audio_track_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_audio_track_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_audio_tracks => /admin/audio_tracks(.:format)
  // function(options)
  admin_audio_tracks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_audio_tracks_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_best => /admin/bests/:id(.:format)
  // function(id, options)
  admin_best_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"bests",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_best_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"bests",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_best_tab => /admin/best_tabs/:id(.:format)
  // function(id, options)
  admin_best_tab_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_best_tab_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_best_tabs => /admin/best_tabs(.:format)
  // function(options)
  admin_best_tabs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_best_tabs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_bests => /admin/bests(.:format)
  // function(options)
  admin_bests_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"bests",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_bests_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"bests",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_categories => /admin/categories(.:format)
  // function(options)
  admin_categories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_categories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_category => /admin/categories/:id(.:format)
  // function(id, options)
  admin_category_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_category_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_channel => /admin/channels/:id(.:format)
  // function(id, options)
  admin_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_channel_categories => /admin/channel_categories(.:format)
  // function(options)
  admin_channel_categories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channel_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_channel_categories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channel_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_channel_category => /admin/channel_categories/:id(.:format)
  // function(id, options)
  admin_channel_category_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channel_categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_channel_category_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channel_categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_channels => /admin/channels(.:format)
  // function(options)
  admin_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_editors_logs => /admin/editors_logs(.:format)
  // function(options)
  admin_editors_logs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"editors_logs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_editors_logs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"editors_logs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_emoji => /admin/emojis/:id(.:format)
  // function(id, options)
  admin_emoji_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_emoji_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_emojis => /admin/emojis(.:format)
  // function(options)
  admin_emojis_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_emojis_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_faq => /admin/faqs/:id(.:format)
  // function(id, options)
  admin_faq_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_faq_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_faq_categories => /admin/faq_categories(.:format)
  // function(options)
  admin_faq_categories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faq_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_faq_categories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faq_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_faq_category => /admin/faq_categories/:id(.:format)
  // function(id, options)
  admin_faq_category_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faq_categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_faq_category_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faq_categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_faqs => /admin/faqs(.:format)
  // function(options)
  admin_faqs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_faqs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_image_block => /admin/image_blocks/:id(.:format)
  // function(id, options)
  admin_image_block_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"image_blocks",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_image_block_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"image_blocks",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_image_blocks => /admin/image_blocks(.:format)
  // function(options)
  admin_image_blocks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"image_blocks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_image_blocks_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"image_blocks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_media_block => /admin/media_blocks/:id(.:format)
  // function(id, options)
  admin_media_block_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"media_blocks",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_media_block_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"media_blocks",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_media_blocks => /admin/media_blocks(.:format)
  // function(options)
  admin_media_blocks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"media_blocks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_media_blocks_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"media_blocks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_mobile_banner => /admin/mobile_banners/:id(.:format)
  // function(id, options)
  admin_mobile_banner_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"mobile_banners",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_mobile_banner_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"mobile_banners",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_mobile_banners => /admin/mobile_banners(.:format)
  // function(options)
  admin_mobile_banners_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"mobile_banners",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_mobile_banners_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"mobile_banners",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_promo_best2015_collections => /admin/promo/best2015/collections(.:format)
  // function(options)
  admin_promo_best2015_collections_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2015",false],[2,[7,"/",false],[2,[6,"collections",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
admin_promo_best2015_collections_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2015",false],[2,[7,"/",false],[2,[6,"collections",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// admin_promo_coubs_carousel => /admin/promo/coubs_carousels/:id(.:format)
  // function(id, options)
  admin_promo_coubs_carousel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"coubs_carousels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
admin_promo_coubs_carousel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"coubs_carousels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// admin_promo_coubs_carousels => /admin/promo/coubs_carousels(.:format)
  // function(options)
  admin_promo_coubs_carousels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"coubs_carousels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_promo_coubs_carousels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"coubs_carousels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_promo_pro_group => /admin/promo/pro_groups/:id(.:format)
  // function(id, options)
  admin_promo_pro_group_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_groups",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
admin_promo_pro_group_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_groups",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// admin_promo_pro_group_coub => /admin/promo/pro_group_coubs/:id(.:format)
  // function(id, options)
  admin_promo_pro_group_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_group_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
admin_promo_pro_group_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_group_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// admin_promo_pro_group_coubs => /admin/promo/pro_group_coubs(.:format)
  // function(options)
  admin_promo_pro_group_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_group_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_promo_pro_group_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_group_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_promo_pro_groups => /admin/promo/pro_groups(.:format)
  // function(options)
  admin_promo_pro_groups_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_groups",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_promo_pro_groups_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_groups",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_tags => /admin/tags(.:format)
  // function(options)
  admin_tags_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_tags_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// admin_trending_like_weight => /admin/trending/like_weights/:id(.:format)
  // function(id, options)
  admin_trending_like_weight_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"like_weights",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
admin_trending_like_weight_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"like_weights",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// admin_trending_like_weights => /admin/trending/like_weights(.:format)
  // function(options)
  admin_trending_like_weights_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"like_weights",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_trending_like_weights_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"like_weights",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_trending_trend_region => /admin/trending/trend_regions/:id(.:format)
  // function(id, options)
  admin_trending_trend_region_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_regions",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
admin_trending_trend_region_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_regions",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// admin_trending_trend_regions => /admin/trending/trend_regions(.:format)
  // function(options)
  admin_trending_trend_regions_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_regions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_trending_trend_regions_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_regions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_trending_trend_schedule => /admin/trending/trend_schedules/:id(.:format)
  // function(id, options)
  admin_trending_trend_schedule_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_schedules",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
admin_trending_trend_schedule_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_schedules",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// admin_trending_trend_schedules => /admin/trending/trend_schedules(.:format)
  // function(options)
  admin_trending_trend_schedules_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_schedules",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_trending_trend_schedules_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_schedules",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_user => /admin/users/:id(.:format)
  // function(id, options)
  admin_user_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
admin_user_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// admin_users => /admin/users(.:format)
  // function(options)
  admin_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
admin_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// adreport => /:id/adreport(.:format)
  // function(id, options)
  adreport_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"adreport",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
adreport_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"adreport",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// ads_ad_overlay => /ads/ad_overlays/:id(.:format)
  // function(id, options)
  ads_ad_overlay_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"ad_overlays",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
ads_ad_overlay_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"ad_overlays",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// ads_ad_overlays => /ads/ad_overlays(.:format)
  // function(options)
  ads_ad_overlays_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"ad_overlays",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
ads_ad_overlays_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"ad_overlays",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// ads_editor_background => /ads/editor_backgrounds/:id(.:format)
  // function(id, options)
  ads_editor_background_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"editor_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
ads_editor_background_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"editor_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// ads_editor_backgrounds => /ads/editor_backgrounds(.:format)
  // function(options)
  ads_editor_backgrounds_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"editor_backgrounds",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
ads_editor_backgrounds_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"editor_backgrounds",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// ads_overlay => /ads/overlays/:id(.:format)
  // function(id, options)
  ads_overlay_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"overlays",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
ads_overlay_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"overlays",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// ads_overlays => /ads/overlays(.:format)
  // function(options)
  ads_overlays_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"overlays",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
ads_overlays_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"overlays",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// ads_promo_audio_track => /ads/promo_audio_tracks/:id(.:format)
  // function(id, options)
  ads_promo_audio_track_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_audio_tracks",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
ads_promo_audio_track_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_audio_tracks",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// ads_promo_audio_tracks => /ads/promo_audio_tracks(.:format)
  // function(options)
  ads_promo_audio_tracks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_audio_tracks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
ads_promo_audio_tracks_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_audio_tracks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// ads_promo_background => /ads/promo_backgrounds/:id(.:format)
  // function(id, options)
  ads_promo_background_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
ads_promo_background_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// ads_promo_backgrounds => /ads/promo_backgrounds(.:format)
  // function(options)
  ads_promo_backgrounds_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_backgrounds",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
ads_promo_backgrounds_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_backgrounds",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// ads_promo_rule => /ads/promo_rules/:id(.:format)
  // function(id, options)
  ads_promo_rule_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_rules",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
ads_promo_rule_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_rules",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// ads_promo_rules => /ads/promo_rules(.:format)
  // function(options)
  ads_promo_rules_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_rules",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
ads_promo_rules_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_rules",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// ads_tag_promo_background => /ads/tag_promo_backgrounds/:id(.:format)
  // function(id, options)
  ads_tag_promo_background_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"tag_promo_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
ads_tag_promo_background_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"tag_promo_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// ads_tag_promo_backgrounds => /ads/tag_promo_backgrounds(.:format)
  // function(options)
  ads_tag_promo_backgrounds_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"tag_promo_backgrounds",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
ads_tag_promo_backgrounds_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"tag_promo_backgrounds",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// advertise_page => /adv
  // function(options)
  advertise_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"adv",false]]),
advertise_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"adv",false]], true),
// age_restricted_stats => /stats/age_restricted(.:format)
  // function(options)
  age_restricted_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"age_restricted",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
age_restricted_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"age_restricted",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// all_editor_stories => /editor/stories/all(.:format)
  // function(options)
  all_editor_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"all",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
all_editor_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"all",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// android => /android(.:format)
  // function(options)
  android_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"android",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
android_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"android",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// android_app_redirect => /android_app_redirect(.:format)
  // function(options)
  android_app_redirect_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"android_app_redirect",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
android_app_redirect_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"android_app_redirect",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// android_promo_mail_test_page_index => /test_page/android_promo_mail
  // function(options)
  android_promo_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"android_promo_mail",false]]]]),
android_promo_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"android_promo_mail",false]]]], true),
// android_redirect_api_v2_passwords => /api/v2/passwords/android_redirect(.:format)
  // function(options)
  android_redirect_api_v2_passwords_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[6,"android_redirect",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
android_redirect_api_v2_passwords_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[6,"android_redirect",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_analytics => /api/analytics(.:format)
  // function(options)
  api_analytics_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"analytics",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
api_analytics_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"analytics",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// api_editor_channel => /api/editor/channels/:id(.:format)
  // function(id, options)
  api_editor_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_editor_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_editor_content => /api/editor/contents/:id(.:format)
  // function(id, options)
  api_editor_content_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"contents",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_editor_content_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"contents",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_editor_delayed_repost => /api/editor/delayed_reposts/:id(.:format)
  // function(id, options)
  api_editor_delayed_repost_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"delayed_reposts",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_editor_delayed_repost_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"delayed_reposts",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_editor_delayed_reposts => /api/editor/delayed_reposts(.:format)
  // function(options)
  api_editor_delayed_reposts_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"delayed_reposts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_editor_delayed_reposts_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"delayed_reposts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_editor_post => /api/editor/posts/:id(.:format)
  // function(id, options)
  api_editor_post_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"posts",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_editor_post_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"posts",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_editor_posts => /api/editor/posts(.:format)
  // function(options)
  api_editor_posts_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"posts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_editor_posts_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"posts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_editor_stories => /api/editor/stories(.:format)
  // function(options)
  api_editor_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_editor_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_editor_story => /api/editor/stories/:id(.:format)
  // function(id, options)
  api_editor_story_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_editor_story_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_oembed_api => /api/oembed.:format
  // function(format, options)
  api_oembed_api_path: Utils.route([["format",true]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"oembed",false],[2,[8,".",false],[3,"format",false]]]]]]),
api_oembed_api_url: Utils.route([["format",true]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"oembed",false],[2,[8,".",false],[3,"format",false]]]]]], true),
// api_v2 => /api/v2/bg/:channel_id(.:format)
  // function(channel_id, options)
  api_v2_path: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"bg",false],[2,[7,"/",false],[2,[3,"channel_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_url: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"bg",false],[2,[7,"/",false],[2,[3,"channel_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_ab_mobile_tests => /api/v2/ab_mobile_tests(.:format)
  // function(options)
  api_v2_ab_mobile_tests_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"ab_mobile_tests",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_ab_mobile_tests_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"ab_mobile_tests",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_abuse => /api/v2/abuses/:id(.:format)
  // function(id, options)
  api_v2_abuse_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"abuses",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_abuse_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"abuses",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_abuses => /api/v2/abuses(.:format)
  // function(options)
  api_v2_abuses_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"abuses",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_abuses_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"abuses",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_avatar_moderations => /api/v2/avatar_moderations(.:format)
  // function(options)
  api_v2_avatar_moderations_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"avatar_moderations",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_avatar_moderations_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"avatar_moderations",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_best_index => /api/v2/best(.:format)
  // function(options)
  api_v2_best_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_best_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_categories => /api/v2/categories(.:format)
  // function(options)
  api_v2_categories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_categories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_category => /api/v2/categories/:id(.:format)
  // function(id, options)
  api_v2_category_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_category_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_channel => /api/v2/channels/:id(.:format)
  // function(id, options)
  api_v2_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_channel_backgrounds => /api/v2/channels/:channel_id/backgrounds(.:format)
  // function(channel_id, options)
  api_v2_channel_backgrounds_path: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"channel_id",false],[2,[7,"/",false],[2,[6,"backgrounds",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
api_v2_channel_backgrounds_url: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"channel_id",false],[2,[7,"/",false],[2,[6,"backgrounds",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// api_v2_channel_notifications_subscriptions => /api/v2/channel_notifications_subscriptions(.:format)
  // function(options)
  api_v2_channel_notifications_subscriptions_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channel_notifications_subscriptions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_channel_notifications_subscriptions_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channel_notifications_subscriptions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_channel_promo_audio_tracks => /api/v2/channels/:channel_id/promo_audio_tracks(.:format)
  // function(channel_id, options)
  api_v2_channel_promo_audio_tracks_path: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"channel_id",false],[2,[7,"/",false],[2,[6,"promo_audio_tracks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
api_v2_channel_promo_audio_tracks_url: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"channel_id",false],[2,[7,"/",false],[2,[6,"promo_audio_tracks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// api_v2_channel_recommendations => /api/v2/channels/:channel_id/recommendations(.:format)
  // function(channel_id, options)
  api_v2_channel_recommendations_path: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"channel_id",false],[2,[7,"/",false],[2,[6,"recommendations",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
api_v2_channel_recommendations_url: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"channel_id",false],[2,[7,"/",false],[2,[6,"recommendations",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// api_v2_channels => /api/v2/channels(.:format)
  // function(options)
  api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_chat_channel => /api/v2/chat/channel(.:format)
  // function(options)
  api_v2_chat_channel_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"chat",false],[2,[7,"/",false],[2,[6,"channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_chat_channel_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"chat",false],[2,[7,"/",false],[2,[6,"channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_chat_check_following => /api/v2/chat/check_following(.:format)
  // function(options)
  api_v2_chat_check_following_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"chat",false],[2,[7,"/",false],[2,[6,"check_following",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_chat_check_following_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"chat",false],[2,[7,"/",false],[2,[6,"check_following",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_chat_initial_chat_suggestions => /api/v2/chat/initial_chat_suggestions(.:format)
  // function(options)
  api_v2_chat_initial_chat_suggestions_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"chat",false],[2,[7,"/",false],[2,[6,"initial_chat_suggestions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_chat_initial_chat_suggestions_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"chat",false],[2,[7,"/",false],[2,[6,"initial_chat_suggestions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_chat_token => /api/v2/chat/token(.:format)
  // function(options)
  api_v2_chat_token_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"chat",false],[2,[7,"/",false],[2,[6,"token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_chat_token_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"chat",false],[2,[7,"/",false],[2,[6,"token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_chat_user => /api/v2/chat/user(.:format)
  // function(options)
  api_v2_chat_user_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"chat",false],[2,[7,"/",false],[2,[6,"user",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_chat_user_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"chat",false],[2,[7,"/",false],[2,[6,"user",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_communities => /api/v2/communities(.:format)
  // function(options)
  api_v2_communities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"communities",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_communities_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"communities",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_community => /api/v2/communities/:id(.:format)
  // function(id, options)
  api_v2_community_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"communities",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_community_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"communities",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_community_notifications_subscriptions => /api/v2/community_notifications_subscriptions(.:format)
  // function(options)
  api_v2_community_notifications_subscriptions_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"community_notifications_subscriptions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_community_notifications_subscriptions_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"community_notifications_subscriptions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_coub => /api/v2/coubs/:id(.:format)
  // function(id, options)
  api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_coubs => /api/v2/coubs(.:format)
  // function(options)
  api_v2_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_dislikes => /api/v2/dislikes(.:format)
  // function(options)
  api_v2_dislikes_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"dislikes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_dislikes_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"dislikes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_editor_channel_list => /api/v2/editor/channel_lists/:id(.:format)
  // function(id, options)
  api_v2_editor_channel_list_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channel_lists",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
api_v2_editor_channel_list_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channel_lists",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// api_v2_editor_channel_lists => /api/v2/editor/channel_lists(.:format)
  // function(options)
  api_v2_editor_channel_lists_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channel_lists",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_editor_channel_lists_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channel_lists",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_editor_explore => /api/v2/editor/explore/:id(.:format)
  // function(id, options)
  api_v2_editor_explore_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
api_v2_editor_explore_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// api_v2_editor_explore_index => /api/v2/editor/explore(.:format)
  // function(options)
  api_v2_editor_explore_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"explore",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_editor_explore_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"explore",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_editor_weekly_digest => /api/v2/editor/weekly_digests/:id(.:format)
  // function(id, options)
  api_v2_editor_weekly_digest_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
api_v2_editor_weekly_digest_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// api_v2_editor_weekly_digest_item => /api/v2/editor/weekly_digest_items/:id(.:format)
  // function(id, options)
  api_v2_editor_weekly_digest_item_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digest_items",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
api_v2_editor_weekly_digest_item_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digest_items",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// api_v2_editor_weekly_digest_items => /api/v2/editor/weekly_digest_items(.:format)
  // function(options)
  api_v2_editor_weekly_digest_items_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digest_items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_editor_weekly_digest_items_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digest_items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_external_downloads => /api/v2/external_downloads(.:format)
  // function(options)
  api_v2_external_downloads_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"external_downloads",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_external_downloads_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"external_downloads",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_favourites => /api/v2/favourites(.:format)
  // function(options)
  api_v2_favourites_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"favourites",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_favourites_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"favourites",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_follows => /api/v2/follows(.:format)
  // function(options)
  api_v2_follows_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"follows",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_follows_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"follows",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_friends => /api/v2/friends(.:format)
  // function(options)
  api_v2_friends_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_friends_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_invite => /api/v2/invites/:id(.:format)
  // function(id, options)
  api_v2_invite_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_invite_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_invites => /api/v2/invites(.:format)
  // function(options)
  api_v2_invites_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_invites_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_likes => /api/v2/likes(.:format)
  // function(options)
  api_v2_likes_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"likes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_likes_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"likes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_mobile_banners => /api/v2/mobile_banners(.:format)
  // function(options)
  api_v2_mobile_banners_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"mobile_banners",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_mobile_banners_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"mobile_banners",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_notifications => /api/v2/notifications(.:format)
  // function(options)
  api_v2_notifications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"notifications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_notifications_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"notifications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_password => /api/v2/passwords/:id(.:format)
  // function(id, options)
  api_v2_password_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_password_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_passwords => /api/v2/passwords(.:format)
  // function(options)
  api_v2_passwords_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_passwords_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_promo_best2015_collection => /api/v2/promo/best2015/collections/:id(.:format)
  // function(id, options)
  api_v2_promo_best2015_collection_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2015",false],[2,[7,"/",false],[2,[6,"collections",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
api_v2_promo_best2015_collection_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2015",false],[2,[7,"/",false],[2,[6,"collections",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// api_v2_promo_best2015_collections => /api/v2/promo/best2015/collections(.:format)
  // function(options)
  api_v2_promo_best2015_collections_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2015",false],[2,[7,"/",false],[2,[6,"collections",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
api_v2_promo_best2015_collections_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2015",false],[2,[7,"/",false],[2,[6,"collections",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// api_v2_promo_best2016_categories => /api/v2/promo/best2016/categories(.:format)
  // function(options)
  api_v2_promo_best2016_categories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2016",false],[2,[7,"/",false],[2,[6,"categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
api_v2_promo_best2016_categories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2016",false],[2,[7,"/",false],[2,[6,"categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// api_v2_promo_best2016_category => /api/v2/promo/best2016/categories/:id(.:format)
  // function(id, options)
  api_v2_promo_best2016_category_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2016",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
api_v2_promo_best2016_category_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2016",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// api_v2_promoted_coub => /api/v2/promoted_coubs/:id(.:format)
  // function(id, options)
  api_v2_promoted_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_promoted_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_promoted_coubs => /api/v2/promoted_coubs(.:format)
  // function(options)
  api_v2_promoted_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_promoted_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_raw_video => /api/v2/raw_videos/:id(.:format)
  // function(id, options)
  api_v2_raw_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_raw_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_raw_video_announcement => /api/v2/raw_video_announcements/:id(.:format)
  // function(id, options)
  api_v2_raw_video_announcement_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_video_announcements",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_raw_video_announcement_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_video_announcements",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_raw_video_announcements => /api/v2/raw_video_announcements(.:format)
  // function(options)
  api_v2_raw_video_announcements_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_video_announcements",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_raw_video_announcements_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_video_announcements",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_raw_videos => /api/v2/raw_videos(.:format)
  // function(options)
  api_v2_raw_videos_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_raw_videos_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_recoubs => /api/v2/recoubs(.:format)
  // function(options)
  api_v2_recoubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"recoubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_recoubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"recoubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_reposts => /api/v2/reposts(.:format)
  // function(options)
  api_v2_reposts_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"reposts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_reposts_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"reposts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_rtmp_uploads => /api/v2/rtmp_uploads(.:format)
  // function(options)
  api_v2_rtmp_uploads_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"rtmp_uploads",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_rtmp_uploads_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"rtmp_uploads",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_search_index => /api/v2/search(.:format)
  // function(options)
  api_v2_search_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_search_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_search_log => /api/v2/search_logs/:id(.:format)
  // function(id, options)
  api_v2_search_log_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search_logs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_search_log_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search_logs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_search_logs => /api/v2/search_logs(.:format)
  // function(options)
  api_v2_search_logs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search_logs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_search_logs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search_logs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_session => /api/v2/sessions/:id(.:format)
  // function(id, options)
  api_v2_session_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_session_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_sessions => /api/v2/sessions(.:format)
  // function(options)
  api_v2_sessions_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_sessions_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_stories => /api/v2/stories(.:format)
  // function(options)
  api_v2_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_story => /api/v2/stories/:id(.:format)
  // function(id, options)
  api_v2_story_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_story_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_temp_uploads => /api/v2/temp_uploads(.:format)
  // function(options)
  api_v2_temp_uploads_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"temp_uploads",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_temp_uploads_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"temp_uploads",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_timeline_index => /api/v2/timeline(.:format)
  // function(options)
  api_v2_timeline_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_timeline_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_unified_admin_coubs => /api/v2/unified_admin/coubs(.:format)
  // function(options)
  api_v2_unified_admin_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"unified_admin",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_unified_admin_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"unified_admin",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_upload_audio_index => /api/v2/upload/audio(.:format)
  // function(options)
  api_v2_upload_audio_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"upload",false],[2,[7,"/",false],[2,[6,"audio",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_upload_audio_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"upload",false],[2,[7,"/",false],[2,[6,"audio",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_upload_finish => /api/v2/upload/finish(.:format)
  // function(options)
  api_v2_upload_finish_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"upload",false],[2,[7,"/",false],[2,[6,"finish",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_upload_finish_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"upload",false],[2,[7,"/",false],[2,[6,"finish",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_upload_video_index => /api/v2/upload/video(.:format)
  // function(options)
  api_v2_upload_video_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"upload",false],[2,[7,"/",false],[2,[6,"video",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
api_v2_upload_video_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"upload",false],[2,[7,"/",false],[2,[6,"video",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// api_v2_vine_imports => /api/v2/vine_imports(.:format)
  // function(options)
  api_v2_vine_imports_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"vine_imports",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_vine_imports_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"vine_imports",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// api_v2_weekly_digests => /api/v2/weekly_digests(.:format)
  // function(options)
  api_v2_weekly_digests_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
api_v2_weekly_digests_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// app_promo => /apps
  // function(options)
  app_promo_path: Utils.route([], {}, [2,[7,"/",false],[6,"apps",false]]),
app_promo_url: Utils.route([], {}, [2,[7,"/",false],[6,"apps",false]], true),
// app_release_press_mail_test_page_index => /test_page/app_release_press_mail
  // function(options)
  app_release_press_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"app_release_press_mail",false]]]]),
app_release_press_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"app_release_press_mail",false]]]], true),
// app_release_users_mail_test_page_index => /test_page/app_release_users_mail
  // function(options)
  app_release_users_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"app_release_users_mail",false]]]]),
app_release_users_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"app_release_users_mail",false]]]], true),
// apply_category_to_coubs_editor_channel => /editor/channels/:id/apply_category_to_coubs(.:format)
  // function(id, options)
  apply_category_to_coubs_editor_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"apply_category_to_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
apply_category_to_coubs_editor_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"apply_category_to_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// apply_global_safe_to_coubs_editor_channel => /editor/channels/:id/apply_global_safe_to_coubs(.:format)
  // function(id, options)
  apply_global_safe_to_coubs_editor_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"apply_global_safe_to_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
apply_global_safe_to_coubs_editor_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"apply_global_safe_to_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// apply_moderation_editor_backgrounds => /editor/backgrounds/apply_moderation(.:format)
  // function(options)
  apply_moderation_editor_backgrounds_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"backgrounds",false],[2,[7,"/",false],[2,[6,"apply_moderation",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
apply_moderation_editor_backgrounds_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"backgrounds",false],[2,[7,"/",false],[2,[6,"apply_moderation",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// approve_editor_promoted_coub => /editor/promoted_coubs/:id/approve(.:format)
  // function(id, options)
  approve_editor_promoted_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"approve",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
approve_editor_promoted_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"approve",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// audio_track_api_v2_coub => /api/v2/coubs/:id/audio_track(.:format)
  // function(id, options)
  audio_track_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"audio_track",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
audio_track_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"audio_track",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// audio_tracks => /audio_tracks(.:format)
  // function(options)
  audio_tracks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"audio_tracks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
audio_tracks_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"audio_tracks",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// auth_failure => /auth/failure(.:format)
  // function(options)
  auth_failure_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"auth",false],[2,[7,"/",false],[2,[6,"failure",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
auth_failure_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"auth",false],[2,[7,"/",false],[2,[6,"failure",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// auth_firebase => /auth/firebase(.:format)
  // function(options)
  auth_firebase_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"auth",false],[2,[7,"/",false],[2,[6,"firebase",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
auth_firebase_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"auth",false],[2,[7,"/",false],[2,[6,"firebase",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// autocomplete_api_v2_search_index => /api/v2/search/autocomplete(.:format)
  // function(options)
  autocomplete_api_v2_search_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search",false],[2,[7,"/",false],[2,[6,"autocomplete",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
autocomplete_api_v2_search_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search",false],[2,[7,"/",false],[2,[6,"autocomplete",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// autocomplete_editor_tags => /editor/tags/autocomplete(.:format)
  // function(options)
  autocomplete_editor_tags_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[6,"autocomplete",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
autocomplete_editor_tags_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[6,"autocomplete",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// avatar_moderation_editor_channels => /editor/channels/avatar_moderation(.:format)
  // function(options)
  avatar_moderation_editor_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"avatar_moderation",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
avatar_moderation_editor_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"avatar_moderation",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// away_page => /away
  // function(options)
  away_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"away",false]]),
away_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"away",false]], true),
// ban_admin_application => /admin/applications/:id/ban(.:format)
  // function(id, options)
  ban_admin_application_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"ban",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
ban_admin_application_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"ban",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// ban_coubs_editor_channel => /editor/channels/:id/ban_coubs(.:format)
  // function(id, options)
  ban_coubs_editor_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"ban_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
ban_coubs_editor_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"ban_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// ban_from_trend_editor_coub => /editor/coubs/:id/ban_from_trend(.:format)
  // function(id, options)
  ban_from_trend_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"ban_from_trend",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
ban_from_trend_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"ban_from_trend",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// ban_stories_editor_channel => /editor/channels/:id/ban_stories(.:format)
  // function(id, options)
  ban_stories_editor_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"ban_stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
ban_stories_editor_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"ban_stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// ban_tag_admin_trending_like_weights => /admin/trending/like_weights/ban_tag(.:format)
  // function(options)
  ban_tag_admin_trending_like_weights_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"like_weights",false],[2,[7,"/",false],[2,[6,"ban_tag",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
ban_tag_admin_trending_like_weights_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"like_weights",false],[2,[7,"/",false],[2,[6,"ban_tag",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// banned_mail_test_page_index => /test_page/banned_mail
  // function(options)
  banned_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"banned_mail",false]]]]),
banned_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"banned_mail",false]]]], true),
// banned_stats => /stats/banned(.:format)
  // function(options)
  banned_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"banned",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
banned_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"banned",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// batch_update_api_v2_editor_explore_index => /api/v2/editor/explore/batch_update(.:format)
  // function(options)
  batch_update_api_v2_editor_explore_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[6,"batch_update",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
batch_update_api_v2_editor_explore_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[6,"batch_update",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// best => /best
  // function(options)
  best_path: Utils.route([], {}, [2,[7,"/",false],[6,"best",false]]),
best_url: Utils.route([], {}, [2,[7,"/",false],[6,"best",false]], true),
// best2016_categories_editor_coub => /editor/coubs/:id/best2016_categories(.:format)
  // function(id, options)
  best2016_categories_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"best2016_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
best2016_categories_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"best2016_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// best2016_moderation_editor_coub => /editor/coubs/:id/best2016_moderation(.:format)
  // function(id, options)
  best2016_moderation_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"best2016_moderation",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
best2016_moderation_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"best2016_moderation",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// best_2014_groups_api_v2_best_index => /api/v2/best/best_2014_groups(.:format)
  // function(options)
  best_2014_groups_api_v2_best_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_2014_groups",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
best_2014_groups_api_v2_best_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_2014_groups",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// best_2014_promo_coubs_api_v2_best_index => /api/v2/best/best_2014_promo_coubs(.:format)
  // function(options)
  best_2014_promo_coubs_api_v2_best_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_2014_promo_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
best_2014_promo_coubs_api_v2_best_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_2014_promo_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// best_2014_statscode => /best/2014/statscode(.:format)
  // function(options)
  best_2014_statscode_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2014",false],[2,[7,"/",false],[2,[6,"statscode",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
best_2014_statscode_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2014",false],[2,[7,"/",false],[2,[6,"statscode",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// best_2014_tags_api_v2_best_index => /api/v2/best/best_2014_tags(.:format)
  // function(options)
  best_2014_tags_api_v2_best_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_2014_tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
best_2014_tags_api_v2_best_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_2014_tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// best_2015_channel_mybest => /best/2015/mybest/:permalink(.:format)
  // function(permalink, options)
  best_2015_channel_mybest_path: Utils.route([["permalink",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2015",false],[2,[7,"/",false],[2,[6,"mybest",false],[2,[7,"/",false],[2,[3,"permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
best_2015_channel_mybest_url: Utils.route([["permalink",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2015",false],[2,[7,"/",false],[2,[6,"mybest",false],[2,[7,"/",false],[2,[3,"permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// best_2015_groups_api_v2_best_index => /api/v2/best/best_2015_groups(.:format)
  // function(options)
  best_2015_groups_api_v2_best_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_2015_groups",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
best_2015_groups_api_v2_best_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_2015_groups",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// best_2015_memes_api_v2_best_index => /api/v2/best/best_2015_memes(.:format)
  // function(options)
  best_2015_memes_api_v2_best_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_2015_memes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
best_2015_memes_api_v2_best_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_2015_memes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// best_2016_mail_test_page_index => /test_page/best_2016_mail
  // function(options)
  best_2016_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"best_2016_mail",false]]]]),
best_2016_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"best_2016_mail",false]]]], true),
// best_coubs2012 => /best/2012(.:format)
  // function(options)
  best_coubs2012_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2012",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
best_coubs2012_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2012",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// best_coubs2013 => /best/2013(.:format)
  // function(options)
  best_coubs2013_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2013",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
best_coubs2013_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2013",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// best_coubs2013_data_api_v2_best_index => /api/v2/best/best_coubs2013_data(.:format)
  // function(options)
  best_coubs2013_data_api_v2_best_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_coubs2013_data",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
best_coubs2013_data_api_v2_best_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"best_coubs2013_data",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// best_coubs2014 => /best/2014(/:section)(.:format)
  // function(options)
  best_coubs2014_path: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2014",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]),
best_coubs2014_url: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2014",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]], true),
// best_coubs2015 => /best/2015(/:section)(.:format)
  // function(options)
  best_coubs2015_path: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2015",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]),
best_coubs2015_url: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2015",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]], true),
// best_coubs2016 => /best/2016(/:section)(.:format)
  // function(options)
  best_coubs2016_path: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2016",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]),
best_coubs2016_url: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2016",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]], true),
// best_coubs2017 => /best/2017(/:section)(.:format)
  // function(options)
  best_coubs2017_path: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2017",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]),
best_coubs2017_url: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2017",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]], true),
// best_coubs2018 => /best/2018(/:section)(.:format)
  // function(options)
  best_coubs2018_path: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2018",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]),
best_coubs2018_url: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2018",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]], true),
// best_coubs2019 => /best/2019(/:section)(.:format)
  // function(options)
  best_coubs2019_path: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2019",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]),
best_coubs2019_url: Utils.route([["section",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[6,"2019",false],[2,[1,[2,[7,"/",false],[3,"section",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]], true),
// best_coubs_2014_mail_test_page_index => /test_page/best_coubs_2014_mail
  // function(options)
  best_coubs_2014_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"best_coubs_2014_mail",false]]]]),
best_coubs_2014_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"best_coubs_2014_mail",false]]]], true),
// best_coubs_mail_test_page_index => /test_page/best_coubs_mail
  // function(options)
  best_coubs_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"best_coubs_mail",false]]]]),
best_coubs_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"best_coubs_mail",false]]]], true),
// block_account_api_v2_channel => /api/v2/channels/:id/block_account(.:format)
  // function(id, options)
  block_account_api_v2_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"block_account",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
block_account_api_v2_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"block_account",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// blog_en => /blog_en(.:format)
  // function(options)
  blog_en_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"blog_en",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
blog_en_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"blog_en",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// blog_ru => /blog_ru(.:format)
  // function(options)
  blog_ru_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"blog_ru",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
blog_ru_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"blog_ru",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// bookmark_editor_coub => /editor/coubs/:id/bookmark(.:format)
  // function(id, options)
  bookmark_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"bookmark",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
bookmark_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"bookmark",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// bookmarked_api_editor_stories => /api/editor/stories/bookmarked(.:format)
  // function(options)
  bookmarked_api_editor_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"bookmarked",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
bookmarked_api_editor_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"bookmarked",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// bookmarked_editor_stories => /editor/stories/bookmarked(.:format)
  // function(options)
  bookmarked_editor_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"bookmarked",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
bookmarked_editor_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"bookmarked",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// brand_assets_page => /brand-assets
  // function(options)
  brand_assets_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"brand-assets",false]]),
brand_assets_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"brand-assets",false]], true),
// buttons_test_page_index => /test_page/buttons
  // function(options)
  buttons_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"buttons",false]]]]),
buttons_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"buttons",false]]]], true),
// by_channel_api_v2_likes => /api/v2/likes/by_channel(.:format)
  // function(options)
  by_channel_api_v2_likes_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"likes",false],[2,[7,"/",false],[2,[6,"by_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
by_channel_api_v2_likes_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"likes",false],[2,[7,"/",false],[2,[6,"by_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// by_channel_api_v2_recoubs => /api/v2/recoubs/by_channel(.:format)
  // function(options)
  by_channel_api_v2_recoubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"recoubs",false],[2,[7,"/",false],[2,[6,"by_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
by_channel_api_v2_recoubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"recoubs",false],[2,[7,"/",false],[2,[6,"by_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// by_coub_api_v2_likes => /api/v2/likes/by_coub(.:format)
  // function(options)
  by_coub_api_v2_likes_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"likes",false],[2,[7,"/",false],[2,[6,"by_coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
by_coub_api_v2_likes_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"likes",false],[2,[7,"/",false],[2,[6,"by_coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// by_coub_api_v2_recoubs => /api/v2/recoubs/by_coub(.:format)
  // function(options)
  by_coub_api_v2_recoubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"recoubs",false],[2,[7,"/",false],[2,[6,"by_coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
by_coub_api_v2_recoubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"recoubs",false],[2,[7,"/",false],[2,[6,"by_coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// by_permalink_api_v2_channel => /api/v2/channels/:id/by_permalink(.:format)
  // function(id, options)
  by_permalink_api_v2_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"by_permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
by_permalink_api_v2_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"by_permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// category_fresh_api_v2_timeline_index => /api/v2/timeline/fresh(/:category_id)(.:format)
  // function(options)
  category_fresh_api_v2_timeline_index_path: Utils.route([["category_id",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"fresh",false],[2,[1,[2,[7,"/",false],[3,"category_id",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]),
category_fresh_api_v2_timeline_index_url: Utils.route([["category_id",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"fresh",false],[2,[1,[2,[7,"/",false],[3,"category_id",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]], true),
// category_hot => /community/:category_id(/:hot_kind)(.:format)
  // function(category_id, options)
  category_hot_path: Utils.route([["category_id",true],["hot_kind",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"community",false],[2,[7,"/",false],[2,[3,"category_id",false],[2,[1,[2,[7,"/",false],[3,"hot_kind",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]),
category_hot_url: Utils.route([["category_id",true],["hot_kind",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"community",false],[2,[7,"/",false],[2,[3,"category_id",false],[2,[1,[2,[7,"/",false],[3,"hot_kind",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]], true),
// category_hot_api_v2_timeline_index => /api/v2/timeline/hot/:category_id(/:hot_kind)(.:format)
  // function(category_id, options)
  category_hot_api_v2_timeline_index_path: Utils.route([["category_id",true],["hot_kind",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"hot",false],[2,[7,"/",false],[2,[3,"category_id",false],[2,[1,[2,[7,"/",false],[3,"hot_kind",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]),
category_hot_api_v2_timeline_index_url: Utils.route([["category_id",true],["hot_kind",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"hot",false],[2,[7,"/",false],[2,[3,"category_id",false],[2,[1,[2,[7,"/",false],[3,"hot_kind",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]], true),
// category_random_api_v2_timeline_index => /api/v2/timeline/random/:category_id(.:format)
  // function(category_id, options)
  category_random_api_v2_timeline_index_path: Utils.route([["category_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"random",false],[2,[7,"/",false],[2,[3,"category_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
category_random_api_v2_timeline_index_url: Utils.route([["category_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"random",false],[2,[7,"/",false],[2,[3,"category_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// category_rising_api_v2_timeline_index => /api/v2/timeline/rising/:category_id(.:format)
  // function(category_id, options)
  category_rising_api_v2_timeline_index_path: Utils.route([["category_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"rising",false],[2,[7,"/",false],[2,[3,"category_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
category_rising_api_v2_timeline_index_url: Utils.route([["category_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"rising",false],[2,[7,"/",false],[2,[3,"category_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// category_suggestions_api_v2_coub => /api/v2/coubs/:id/category_suggestions(.:format)
  // function(id, options)
  category_suggestions_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"category_suggestions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
category_suggestions_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"category_suggestions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// change_channel_api_v2_users => /api/v2/users/change_channel(.:format)
  // function(options)
  change_channel_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"change_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
change_channel_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"change_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// changer_api_v2_timeline_index => /api/v2/timeline/changer/:id(.:format)
  // function(id, options)
  changer_api_v2_timeline_index_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"changer",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
changer_api_v2_timeline_index_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"changer",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// channel => /:id(/:sort_type)(.:format)
  // function(id, options)
  channel_path: Utils.route([["id",true],["sort_type",false],["format",false]], {}, [2,[7,"/",false],[2,[3,"id",false],[2,[1,[2,[7,"/",false],[3,"sort_type",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]),
channel_url: Utils.route([["id",true],["sort_type",false],["format",false]], {}, [2,[7,"/",false],[2,[3,"id",false],[2,[1,[2,[7,"/",false],[3,"sort_type",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]], true),
// channel_accept_mail_test_page_index => /test_page/channel_accept_mail
  // function(options)
  channel_accept_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"channel_accept_mail",false]]]]),
channel_accept_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"channel_accept_mail",false]]]], true),
// channel_api_v2_timeline_index => /api/v2/timeline/channel/:id(.:format)
  // function(id, options)
  channel_api_v2_timeline_index_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"channel",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
channel_api_v2_timeline_index_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"channel",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// channel_feed_rss_index => /rss/channel/:id(.:format)
  // function(id, options)
  channel_feed_rss_index_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rss",false],[2,[7,"/",false],[2,[6,"channel",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
channel_feed_rss_index_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rss",false],[2,[7,"/",false],[2,[6,"channel",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// channel_invite_mail_test_page_index => /test_page/channel_invite_mail
  // function(options)
  channel_invite_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"channel_invite_mail",false]]]]),
channel_invite_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"channel_invite_mail",false]]]], true),
// channel_lists_editor_channels => /editor/channels/channel_lists(.:format)
  // function(options)
  channel_lists_editor_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"channel_lists",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
channel_lists_editor_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"channel_lists",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// channel_request_mail_test_page_index => /test_page/channel_request_mail
  // function(options)
  channel_request_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"channel_request_mail",false]]]]),
channel_request_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"channel_request_mail",false]]]], true),
// channel_stats_code => /profile/stats_code/:id(.:format)
  // function(id, options)
  channel_stats_code_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"profile",false],[2,[7,"/",false],[2,[6,"stats_code",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
channel_stats_code_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"profile",false],[2,[7,"/",false],[2,[6,"stats_code",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// channels => /channels(.:format)
  // function(options)
  channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// channels_api_v2_likes => /api/v2/likes/channels(.:format)
  // function(options)
  channels_api_v2_likes_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"likes",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
channels_api_v2_likes_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"likes",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// channels_api_v2_reposts => /api/v2/reposts/channels(.:format)
  // function(options)
  channels_api_v2_reposts_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"reposts",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
channels_api_v2_reposts_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"reposts",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// channels_api_v2_search_index => /api/v2/search/channels(.:format)
  // function(options)
  channels_api_v2_search_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
channels_api_v2_search_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// channels_api_v2_weekly_digest => /api/v2/weekly_digests/:id/channels(.:format)
  // function(id, options)
  channels_api_v2_weekly_digest_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
channels_api_v2_weekly_digest_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// channels_promo_page => /howtochannels
  // function(options)
  channels_promo_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"howtochannels",false]]),
channels_promo_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"howtochannels",false]], true),
// channels_search => /search/channels(.:format)
  // function(options)
  channels_search_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"search",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
channels_search_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"search",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// channels_stats => /stats/channels(.:format)
  // function(options)
  channels_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
channels_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// channels_stats_editor_channels => /editor/channels/channels_stats(.:format)
  // function(options)
  channels_stats_editor_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"channels_stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
channels_stats_editor_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"channels_stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// chat => /chat(/*path)(.:format)
  // function(options)
  chat_path: Utils.route([["path",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"chat",false],[2,[1,[2,[7,"/",false],[5,[3,"*path",false],false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]),
chat_url: Utils.route([["path",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"chat",false],[2,[1,[2,[7,"/",false],[5,[3,"*path",false],false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]], true),
// check_coub_api_v2_stories => /api/v2/stories/check_coub(.:format)
  // function(options)
  check_coub_api_v2_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"check_coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
check_coub_api_v2_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"check_coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// check_email => /check_email(.:format)
  // function(options)
  check_email_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"check_email",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
check_email_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"check_email",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// check_uniqueness_and_validate_api_v2_users => /api/v2/users/check_uniqueness_and_validate(.:format)
  // function(options)
  check_uniqueness_and_validate_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"check_uniqueness_and_validate",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
check_uniqueness_and_validate_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"check_uniqueness_and_validate",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// check_uniqueness_and_validate_users => /users/check_uniqueness_and_validate(.:format)
  // function(options)
  check_uniqueness_and_validate_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"check_uniqueness_and_validate",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
check_uniqueness_and_validate_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"check_uniqueness_and_validate",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// check_uniqueness_api_v2_sessions => /api/v2/sessions/check_uniqueness(.:format)
  // function(options)
  check_uniqueness_api_v2_sessions_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[6,"check_uniqueness",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
check_uniqueness_api_v2_sessions_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[6,"check_uniqueness",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// community_api_v2_timeline_index => /api/v2/timeline/community/:id/:kind(.:format)
  // function(id, kind, options)
  community_api_v2_timeline_index_path: Utils.route([["id",true],["kind",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"community",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[3,"kind",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
community_api_v2_timeline_index_url: Utils.route([["id",true],["kind",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"community",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[3,"kind",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// community_guidelines_page => /community_guidelines(.:format)
  // function(options)
  community_guidelines_page_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"community_guidelines",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
community_guidelines_page_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"community_guidelines",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// components_test_page_index => /test_page/components
  // function(options)
  components_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"components",false]]]]),
components_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"components",false]]]], true),
// content_admin_best_tab => /admin/best_tabs/:id/content(.:format)
  // function(id, options)
  content_admin_best_tab_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"content",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
content_admin_best_tab_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"content",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// copy_api_v2_coub => /api/v2/coubs/:id/copy(.:format)
  // function(id, options)
  copy_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"copy",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
copy_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"copy",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// copy_editor_story => /editor/stories/:id/copy(.:format)
  // function(id, options)
  copy_editor_story_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"copy",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
copy_editor_story_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"copy",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// copyright_ban_mail_test_page_index => /test_page/copyright_ban_mail
  // function(options)
  copyright_ban_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"copyright_ban_mail",false]]]]),
copyright_ban_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"copyright_ban_mail",false]]]], true),
// cotd_mail_test_page_index => /test_page/cotd_mail
  // function(options)
  cotd_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"cotd_mail",false]]]]),
cotd_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"cotd_mail",false]]]], true),
// coub => /coubs/:id(.:format)
  // function(id, options)
  coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// coub_likes_list_api_v2_action_subjects_data => /api/v2/action_subjects_data/coub_likes_list(.:format)
  // function(options)
  coub_likes_list_api_v2_action_subjects_data_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[6,"coub_likes_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
coub_likes_list_api_v2_action_subjects_data_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[6,"coub_likes_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// coub_of_the_day => /explore/coub_of_the_day(.:format)
  // function(options)
  coub_of_the_day_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[6,"coub_of_the_day",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
coub_of_the_day_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[6,"coub_of_the_day",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// coub_stats_objects_stats => /stats/stats_objects/:permalink(.:format)
  // function(permalink, options)
  coub_stats_objects_stats_path: Utils.route([["permalink",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"stats_objects",false],[2,[7,"/",false],[2,[3,"permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
coub_stats_objects_stats_url: Utils.route([["permalink",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"stats_objects",false],[2,[7,"/",false],[2,[3,"permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// coub_traffic_sources_stats => /stats/traffic_sources/:permalink(.:format)
  // function(permalink, options)
  coub_traffic_sources_stats_path: Utils.route([["permalink",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"traffic_sources",false],[2,[7,"/",false],[2,[3,"permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
coub_traffic_sources_stats_url: Utils.route([["permalink",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"traffic_sources",false],[2,[7,"/",false],[2,[3,"permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// coub_view_sharing_hack => /view/:id(.:format)
  // function(id, options)
  coub_view_sharing_hack_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"view",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
coub_view_sharing_hack_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"view",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// coubs => /coubs(.:format)
  // function(options)
  coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// coubs_admin_audio_track => /admin/audio_tracks/:id/coubs(.:format)
  // function(id, options)
  coubs_admin_audio_track_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
coubs_admin_audio_track_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// coubs_api_v2_best => /api/v2/best/:id/coubs(.:format)
  // function(id, options)
  coubs_api_v2_best_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
coubs_api_v2_best_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// coubs_api_v2_promo_best2015_collection => /api/v2/promo/best2015/collections/:id/coubs(.:format)
  // function(id, options)
  coubs_api_v2_promo_best2015_collection_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2015",false],[2,[7,"/",false],[2,[6,"collections",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]),
coubs_api_v2_promo_best2015_collection_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2015",false],[2,[7,"/",false],[2,[6,"collections",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]], true),
// coubs_api_v2_promo_best2016_category => /api/v2/promo/best2016/categories/:id/coubs(.:format)
  // function(id, options)
  coubs_api_v2_promo_best2016_category_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2016",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]),
coubs_api_v2_promo_best2016_category_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2016",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]], true),
// coubs_api_v2_search_index => /api/v2/search/coubs(.:format)
  // function(options)
  coubs_api_v2_search_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
coubs_api_v2_search_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// coubs_api_v2_story => /api/v2/stories/:id/coubs(.:format)
  // function(id, options)
  coubs_api_v2_story_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
coubs_api_v2_story_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// coubs_api_v2_weekly_digest => /api/v2/weekly_digests/:id/coubs(.:format)
  // function(id, options)
  coubs_api_v2_weekly_digest_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
coubs_api_v2_weekly_digest_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// coubs_by_countries_stats => /stats/coubs_by_countries(.:format)
  // function(options)
  coubs_by_countries_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"coubs_by_countries",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
coubs_by_countries_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"coubs_by_countries",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// coubs_from_source_api_editor_stats => /api/editor/stats/coubs_from_source(.:format)
  // function(options)
  coubs_from_source_api_editor_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"coubs_from_source",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
coubs_from_source_api_editor_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"coubs_from_source",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// coubs_from_source_stats => /stats/coubs_from_source(.:format)
  // function(options)
  coubs_from_source_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"coubs_from_source",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
coubs_from_source_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"coubs_from_source",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// coubs_list_api_v2_editor_coubs => /api/v2/editor/coubs/coubs_list(.:format)
  // function(options)
  coubs_list_api_v2_editor_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"coubs_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
coubs_list_api_v2_editor_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"coubs_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// coubs_stats_admin_audio_tracks => /admin/audio_tracks/coubs_stats(.:format)
  // function(options)
  coubs_stats_admin_audio_tracks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[6,"coubs_stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
coubs_stats_admin_audio_tracks_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[6,"coubs_stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// create => /create(.:format)
  // function(options)
  create_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"create",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
create_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"create",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// create_coub_from_reminder => /create_from_reminder(.:format)
  // function(options)
  create_coub_from_reminder_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"create_from_reminder",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
create_coub_from_reminder_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"create_from_reminder",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// create_payment_api_v2_promoted_coub => /api/v2/promoted_coubs/:id/create_payment(.:format)
  // function(id, options)
  create_payment_api_v2_promoted_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"create_payment",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
create_payment_api_v2_promoted_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"create_payment",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// created_coubs_admin_channel => /admin/channels/:id/created_coubs(.:format)
  // function(id, options)
  created_coubs_admin_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"created_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
created_coubs_admin_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"created_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// created_coubs_admin_user => /admin/users/:id/created_coubs(.:format)
  // function(id, options)
  created_coubs_admin_user_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"created_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
created_coubs_admin_user_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"created_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// css3_spinner_test_page_index => /test_page/css3_spinner
  // function(options)
  css3_spinner_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"css3_spinner",false]]]]),
css3_spinner_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"css3_spinner",false]]]], true),
// custom_suggestions_api_v2_coub => /api/v2/coubs/:id/custom_suggestions(.:format)
  // function(id, options)
  custom_suggestions_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"custom_suggestions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
custom_suggestions_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"custom_suggestions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// dashboard_editor_promoted_coubs => /editor/promoted_coubs/dashboard(.:format)
  // function(options)
  dashboard_editor_promoted_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[6,"dashboard",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
dashboard_editor_promoted_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[6,"dashboard",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// delete_account_users => /users/delete_account(.:format)
  // function(options)
  delete_account_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"delete_account",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
delete_account_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"delete_account",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// delete_avatar_api_v2_channels => /api/v2/channels/delete_avatar(.:format)
  // function(options)
  delete_avatar_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"delete_avatar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
delete_avatar_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"delete_avatar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// delete_cached_friendships_api_v2_friends => /api/v2/friends/delete_cached_friendships(.:format)
  // function(options)
  delete_cached_friendships_api_v2_friends_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"delete_cached_friendships",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
delete_cached_friendships_api_v2_friends_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"delete_cached_friendships",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// delete_channel_api_v2_channels => /api/v2/channels/delete_channel(.:format)
  // function(options)
  delete_channel_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"delete_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
delete_channel_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"delete_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// destroy_all_api_v2_search_logs => /api/v2/search_logs/destroy_all(.:format)
  // function(options)
  destroy_all_api_v2_search_logs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search_logs",false],[2,[7,"/",false],[2,[6,"destroy_all",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
destroy_all_api_v2_search_logs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"search_logs",false],[2,[7,"/",false],[2,[6,"destroy_all",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// dev => /dev(.:format)
  // function(options)
  dev_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
dev_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// dev_application => /dev/applications/:id(.:format)
  // function(id, options)
  dev_application_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
dev_application_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// dev_applications => /dev/applications(.:format)
  // function(options)
  dev_applications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"applications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
dev_applications_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"applications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// dev_doc => /dev/docs/:id(.:format)
  // function(id, options)
  dev_doc_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"docs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
dev_doc_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"docs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// dev_docs => /dev/docs(.:format)
  // function(options)
  dev_docs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"docs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
dev_docs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"docs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// dev_docs_search => /dev/docs/search(.:format)
  // function(options)
  dev_docs_search_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"docs",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
dev_docs_search_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"docs",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// digest_mail_test_page_index => /test_page/digest_mail
  // function(options)
  digest_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"digest_mail",false]]]]),
digest_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"digest_mail",false]]]], true),
// download_editor_coub => /editor/coubs/:id/download(.:format)
  // function(id, options)
  download_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"download",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
download_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"download",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_best => /admin/bests/:id/edit(.:format)
  // function(id, options)
  edit_admin_best_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"bests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_admin_best_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"bests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_best_tab => /admin/best_tabs/:id/edit(.:format)
  // function(id, options)
  edit_admin_best_tab_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_admin_best_tab_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_category => /admin/categories/:id/edit(.:format)
  // function(id, options)
  edit_admin_category_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_admin_category_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_channel_category => /admin/channel_categories/:id/edit(.:format)
  // function(id, options)
  edit_admin_channel_category_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channel_categories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_admin_channel_category_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channel_categories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_emoji => /admin/emojis/:id/edit(.:format)
  // function(id, options)
  edit_admin_emoji_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_admin_emoji_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_faq => /admin/faqs/:id/edit(.:format)
  // function(id, options)
  edit_admin_faq_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_admin_faq_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_faq_category => /admin/faq_categories/:id/edit(.:format)
  // function(id, options)
  edit_admin_faq_category_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faq_categories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_admin_faq_category_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faq_categories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_image_block => /admin/image_blocks/:id/edit(.:format)
  // function(id, options)
  edit_admin_image_block_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"image_blocks",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_admin_image_block_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"image_blocks",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_media_block => /admin/media_blocks/:id/edit(.:format)
  // function(id, options)
  edit_admin_media_block_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"media_blocks",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_admin_media_block_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"media_blocks",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_mobile_banner => /admin/mobile_banners/:id/edit(.:format)
  // function(id, options)
  edit_admin_mobile_banner_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"mobile_banners",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_admin_mobile_banner_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"mobile_banners",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_admin_promo_coubs_carousel => /admin/promo/coubs_carousels/:id/edit(.:format)
  // function(id, options)
  edit_admin_promo_coubs_carousel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"coubs_carousels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_admin_promo_coubs_carousel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"coubs_carousels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_admin_promo_pro_group => /admin/promo/pro_groups/:id/edit(.:format)
  // function(id, options)
  edit_admin_promo_pro_group_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_groups",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_admin_promo_pro_group_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_groups",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_admin_promo_pro_group_coub => /admin/promo/pro_group_coubs/:id/edit(.:format)
  // function(id, options)
  edit_admin_promo_pro_group_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_group_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_admin_promo_pro_group_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_group_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_admin_trending_like_weight => /admin/trending/like_weights/:id/edit(.:format)
  // function(id, options)
  edit_admin_trending_like_weight_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"like_weights",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_admin_trending_like_weight_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"like_weights",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_admin_trending_trend_region => /admin/trending/trend_regions/:id/edit(.:format)
  // function(id, options)
  edit_admin_trending_trend_region_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_regions",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_admin_trending_trend_region_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_regions",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_admin_trending_trend_schedule => /admin/trending/trend_schedules/:id/edit(.:format)
  // function(id, options)
  edit_admin_trending_trend_schedule_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_schedules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_admin_trending_trend_schedule_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_schedules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_ads_ad_overlay => /ads/ad_overlays/:id/edit(.:format)
  // function(id, options)
  edit_ads_ad_overlay_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"ad_overlays",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_ads_ad_overlay_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"ad_overlays",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_ads_editor_background => /ads/editor_backgrounds/:id/edit(.:format)
  // function(id, options)
  edit_ads_editor_background_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"editor_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_ads_editor_background_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"editor_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_ads_overlay => /ads/overlays/:id/edit(.:format)
  // function(id, options)
  edit_ads_overlay_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"overlays",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_ads_overlay_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"overlays",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_ads_promo_audio_track => /ads/promo_audio_tracks/:id/edit(.:format)
  // function(id, options)
  edit_ads_promo_audio_track_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_audio_tracks",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_ads_promo_audio_track_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_audio_tracks",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_ads_promo_background => /ads/promo_backgrounds/:id/edit(.:format)
  // function(id, options)
  edit_ads_promo_background_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_ads_promo_background_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_ads_promo_rule => /ads/promo_rules/:id/edit(.:format)
  // function(id, options)
  edit_ads_promo_rule_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_rules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_ads_promo_rule_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_rules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_ads_tag_promo_background => /ads/tag_promo_backgrounds/:id/edit(.:format)
  // function(id, options)
  edit_ads_tag_promo_background_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"tag_promo_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_ads_tag_promo_background_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"tag_promo_backgrounds",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_api_v2_channel => /api/v2/channels/:id/edit(.:format)
  // function(id, options)
  edit_api_v2_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_api_v2_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_api_v2_invite => /api/v2/invites/:id/edit(.:format)
  // function(id, options)
  edit_api_v2_invite_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_api_v2_invite_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_api_v2_password => /api/v2/passwords/:id/edit(.:format)
  // function(id, options)
  edit_api_v2_password_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_api_v2_password_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_api_v2_profile => /api/v2/profile/:id/edit(.:format)
  // function(id, options)
  edit_api_v2_profile_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"profile",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_api_v2_profile_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"profile",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_api_v2_raw_video => /api/v2/raw_videos/:id/edit(.:format)
  // function(id, options)
  edit_api_v2_raw_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_api_v2_raw_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_api_v2_story => /api/v2/stories/:id/edit(.:format)
  // function(id, options)
  edit_api_v2_story_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
edit_api_v2_story_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// edit_coub => /coubs/:id/edit(.:format)
  // function(id, options)
  edit_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
edit_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// edit_dev_application => /dev/applications/:id/edit(.:format)
  // function(id, options)
  edit_dev_application_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_dev_application_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_editor_weekly_digest => /editor/weekly_digests/:id/edit(.:format)
  // function(id, options)
  edit_editor_weekly_digest_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_editor_weekly_digest_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_oauth_application => /oauth/applications/:id/edit(.:format)
  // function(id, options)
  edit_oauth_application_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edit_oauth_application_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// edit_promoted_coub => /promote/:id/edit
  // function(id, options)
  edit_promoted_coub_path: Utils.route([["id",true]], {}, [2,[7,"/",false],[2,[6,"promote",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[6,"edit",false]]]]]]),
edit_promoted_coub_url: Utils.route([["id",true]], {}, [2,[7,"/",false],[2,[6,"promote",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[6,"edit",false]]]]]], true),
// edit_raw_video => /raw_videos/:id/edit(.:format)
  // function(id, options)
  edit_raw_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
edit_raw_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// edit_story => /stories/:id/edit(.:format)
  // function(id, options)
  edit_story_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
edit_story_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// edit_user => /users/:id/edit(.:format)
  // function(id, options)
  edit_user_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
edit_user_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// edited_tracks_admin_audio_track => /admin/audio_tracks/:id/edited_tracks(.:format)
  // function(id, options)
  edited_tracks_admin_audio_track_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edited_tracks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
edited_tracks_admin_audio_track_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edited_tracks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// editor_backgrounds => /editor/backgrounds(.:format)
  // function(options)
  editor_backgrounds_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"backgrounds",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
editor_backgrounds_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"backgrounds",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// editor_channel => /editor/channels/:id(.:format)
  // function(id, options)
  editor_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
editor_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// editor_channel_feature => /editor/channel_features/:id(.:format)
  // function(id, options)
  editor_channel_feature_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channel_features",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
editor_channel_feature_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channel_features",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// editor_channel_features => /editor/channel_features(.:format)
  // function(options)
  editor_channel_features_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channel_features",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
editor_channel_features_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channel_features",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// editor_coub_of_the_day => /editor/coub_of_the_days/:id(.:format)
  // function(id, options)
  editor_coub_of_the_day_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coub_of_the_days",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
editor_coub_of_the_day_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coub_of_the_days",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// editor_coub_of_the_days => /editor/coub_of_the_days(.:format)
  // function(options)
  editor_coub_of_the_days_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coub_of_the_days",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
editor_coub_of_the_days_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coub_of_the_days",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// editor_coubs => /editor/coubs(.:format)
  // function(options)
  editor_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
editor_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// editor_promoted_coub => /editor/promoted_coubs/:id(.:format)
  // function(id, options)
  editor_promoted_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
editor_promoted_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// editor_promoted_coubs => /editor/promoted_coubs(.:format)
  // function(options)
  editor_promoted_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
editor_promoted_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// editor_reminder_mail_test_page_index => /test_page/editor_reminder_mail
  // function(options)
  editor_reminder_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"editor_reminder_mail",false]]]]),
editor_reminder_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"editor_reminder_mail",false]]]], true),
// editor_saved_channel => /editor/saved_channels/:id(.:format)
  // function(id, options)
  editor_saved_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"saved_channels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
editor_saved_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"saved_channels",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// editor_saved_channels => /editor/saved_channels(.:format)
  // function(options)
  editor_saved_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"saved_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
editor_saved_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"saved_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// editor_stories => /editor/stories(.:format)
  // function(options)
  editor_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
editor_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// editor_tag => /editor/tags/:id(.:format)
  // function(id, options)
  editor_tag_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
editor_tag_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// editor_tags => /editor/tags(.:format)
  // function(options)
  editor_tags_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
editor_tags_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// editor_user => /editor/users/:id(.:format)
  // function(id, options)
  editor_user_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
editor_user_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// editor_weekly_digests => /editor/weekly_digests(.:format)
  // function(options)
  editor_weekly_digests_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
editor_weekly_digests_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// editorial_api_editor_channels => /api/editor/channels/editorial(.:format)
  // function(options)
  editorial_api_editor_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"editorial",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
editorial_api_editor_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"editorial",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// editorial_api_v2_action_subjects_datum => /api/v2/action_subjects_data/:id/editorial(.:format)
  // function(id, options)
  editorial_api_v2_action_subjects_datum_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"editorial",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
editorial_api_v2_action_subjects_datum_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"editorial",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// editorial_channels_api_v2_channels => /api/v2/channels/editorial_channels(.:format)
  // function(options)
  editorial_channels_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"editorial_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
editorial_channels_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"editorial_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// editorial_reposts_api_editor_content => /api/editor/contents/:id/editorial_reposts(.:format)
  // function(id, options)
  editorial_reposts_api_editor_content_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"contents",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"editorial_reposts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
editorial_reposts_api_editor_content_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"contents",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"editorial_reposts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// editors_stats_editor_coubs => /editor/coubs/editors_stats(.:format)
  // function(options)
  editors_stats_editor_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"editors_stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
editors_stats_editor_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"editors_stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// embed_api_test_page_index => /test_page/embed_api
  // function(options)
  embed_api_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embed_api",false]]]]),
embed_api_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embed_api",false]]]], true),
// embed_coub => /embed/:id(.:format)
  // function(id, options)
  embed_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"embed",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
embed_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"embed",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// embed_runner_test_page_index => /test_page/embed_runner
  // function(options)
  embed_runner_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embed_runner",false]]]]),
embed_runner_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embed_runner",false]]]], true),
// embeds_autoplay_test_page_index => /test_page/embeds_autoplay
  // function(options)
  embeds_autoplay_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds_autoplay",false]]]]),
embeds_autoplay_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds_autoplay",false]]]], true),
// embeds_continuous_size_test_page_index => /test_page/embeds_continuous_size
  // function(options)
  embeds_continuous_size_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds_continuous_size",false]]]]),
embeds_continuous_size_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds_continuous_size",false]]]], true),
// embeds_custom_size_test_page_index => /test_page/embeds_custom_size
  // function(options)
  embeds_custom_size_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds_custom_size",false]]]]),
embeds_custom_size_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds_custom_size",false]]]], true),
// embeds_ios_test_page_index => /test_page/embeds_ios
  // function(options)
  embeds_ios_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds_ios",false]]]]),
embeds_ios_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds_ios",false]]]], true),
// embeds_mobile_test_page_index => /test_page/embeds_mobile
  // function(options)
  embeds_mobile_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds_mobile",false]]]]),
embeds_mobile_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds_mobile",false]]]], true),
// embeds_test_page_index => /test_page/embeds
  // function(options)
  embeds_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds",false]]]]),
embeds_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"embeds",false]]]], true),
// empty_description_api_editor_channel => /api/editor/channels/:id/empty_description(.:format)
  // function(id, options)
  empty_description_api_editor_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"empty_description",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
empty_description_api_editor_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"empty_description",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// exit_during_conversion_api_v2_raw_video => /api/v2/raw_videos/:id/exit_during_conversion(.:format)
  // function(id, options)
  exit_during_conversion_api_v2_raw_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"exit_during_conversion",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
exit_during_conversion_api_v2_raw_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"exit_during_conversion",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// exit_during_download_api_v2_external_download => /api/v2/external_downloads/:id/exit_during_download(.:format)
  // function(id, options)
  exit_during_download_api_v2_external_download_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"external_downloads",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"exit_during_download",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
exit_during_download_api_v2_external_download_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"external_downloads",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"exit_during_download",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// exit_from_editor_api_v2_raw_video => /api/v2/raw_videos/:id/exit_from_editor(.:format)
  // function(id, options)
  exit_from_editor_api_v2_raw_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"exit_from_editor",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
exit_from_editor_api_v2_raw_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"exit_from_editor",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// explore => /explore(.:format)
  // function(options)
  explore_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"explore",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
explore_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"explore",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// explore_api_v2_timeline_index => /api/v2/timeline/explore(.:format)
  // function(options)
  explore_api_v2_timeline_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"explore",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
explore_api_v2_timeline_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"explore",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// explore_cat_api_v2_timeline_index => /api/v2/timeline/explore/:category_id(.:format)
  // function(category_id, options)
  explore_cat_api_v2_timeline_index_path: Utils.route([["category_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[3,"category_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
explore_cat_api_v2_timeline_index_url: Utils.route([["category_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[3,"category_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// explore_category => /explore/:category_id(.:format)
  // function(category_id, options)
  explore_category_path: Utils.route([["category_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[3,"category_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
explore_category_url: Utils.route([["category_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[3,"category_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// explore_channels_api_v2_channels => /api/v2/channels/explore_channels(.:format)
  // function(options)
  explore_channels_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"explore_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
explore_channels_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"explore_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// explore_editor_delay_publishes => /editor/delay_publishes/explore(.:format)
  // function(options)
  explore_editor_delay_publishes_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"delay_publishes",false],[2,[7,"/",false],[2,[6,"explore",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
explore_editor_delay_publishes_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"delay_publishes",false],[2,[7,"/",false],[2,[6,"explore",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// explore_newest => /explore/newest(.:format)
  // function(options)
  explore_newest_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[6,"newest",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
explore_newest_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[6,"newest",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// external_raw_videos => /raw_videos/external(.:format)
  // function(options)
  external_raw_videos_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[6,"external",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
external_raw_videos_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[6,"external",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// faq => /faq(.:format)
  // function(options)
  faq_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"faq",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
faq_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"faq",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// faq_page => /help(/:category)(.:format)
  // function(options)
  faq_page_path: Utils.route([["category",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"help",false],[2,[1,[2,[7,"/",false],[3,"category",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]),
faq_page_url: Utils.route([["category",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"help",false],[2,[1,[2,[7,"/",false],[3,"category",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]], true),
// faq_search => /help/search(.:format)
  // function(options)
  faq_search_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"help",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
faq_search_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"help",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// favourites => /bookmarks(/:sort_type)
  // function(options)
  favourites_path: Utils.route([["sort_type",false]], {}, [2,[7,"/",false],[2,[6,"bookmarks",false],[1,[2,[7,"/",false],[3,"sort_type",false]],false]]]),
favourites_url: Utils.route([["sort_type",false]], {}, [2,[7,"/",false],[2,[6,"bookmarks",false],[1,[2,[7,"/",false],[3,"sort_type",false]],false]]], true),
// favourites_api_v2_timeline_index => /api/v2/timeline/favourites(.:format)
  // function(options)
  favourites_api_v2_timeline_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"favourites",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
favourites_api_v2_timeline_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"favourites",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// fb_embeds_test_page_index => /test_page/fb_embeds
  // function(options)
  fb_embeds_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"fb_embeds",false]]]]),
fb_embeds_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"fb_embeds",false]]]], true),
// featured => /featured(.:format)
  // function(options)
  featured_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"featured",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
featured_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"featured",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// featured_api_v2_stories => /api/v2/stories/featured(.:format)
  // function(options)
  featured_api_v2_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"featured",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
featured_api_v2_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"featured",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// featured_channels => /featured/channels(.:format)
  // function(options)
  featured_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"featured",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
featured_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"featured",false],[2,[7,"/",false],[2,[6,"channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// featured_channels_api_v2_channels => /api/v2/channels/featured_channels(.:format)
  // function(options)
  featured_channels_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"featured_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
featured_channels_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"featured_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// featured_channels_editor_channels => /editor/channels/featured_channels(.:format)
  // function(options)
  featured_channels_editor_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"featured_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
featured_channels_editor_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"featured_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// featured_coubs => /featured/coubs(/:sort_type)(.:format)
  // function(options)
  featured_coubs_path: Utils.route([["sort_type",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"featured",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[1,[2,[7,"/",false],[3,"sort_type",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]),
featured_coubs_url: Utils.route([["sort_type",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"featured",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[1,[2,[7,"/",false],[3,"sort_type",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]], true),
// featured_stories => /featured/stories(/:sort_type)(.:format)
  // function(options)
  featured_stories_path: Utils.route([["sort_type",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"featured",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[1,[2,[7,"/",false],[3,"sort_type",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]),
featured_stories_url: Utils.route([["sort_type",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"featured",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[1,[2,[7,"/",false],[3,"sort_type",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]], true),
// features_editor_channel => /editor/channels/:id/features(.:format)
  // function(id, options)
  features_editor_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"features",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
features_editor_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"features",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// feed => /feed
  // function(options)
  feed_path: Utils.route([], {}, [2,[7,"/",false],[6,"feed",false]]),
feed_url: Utils.route([], {}, [2,[7,"/",false],[6,"feed",false]], true),
// feed_api_v2_stories => /api/v2/stories/feed(.:format)
  // function(options)
  feed_api_v2_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"feed",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
feed_api_v2_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"feed",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// fetch_oauth_data_api_v2_sessions => /api/v2/sessions/fetch_oauth_data(.:format)
  // function(options)
  fetch_oauth_data_api_v2_sessions_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[6,"fetch_oauth_data",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
fetch_oauth_data_api_v2_sessions_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[6,"fetch_oauth_data",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// finalize_raw_video => /raw_videos/:id/finalize(.:format)
  // function(id, options)
  finalize_raw_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"finalize",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
finalize_raw_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"finalize",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// finalize_status_api_v2_coub => /api/v2/coubs/:id/finalize_status(.:format)
  // function(id, options)
  finalize_status_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"finalize_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
finalize_status_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"finalize_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// finalize_upload_api_v2_coub => /api/v2/coubs/:id/finalize_upload(.:format)
  // function(id, options)
  finalize_upload_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"finalize_upload",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
finalize_upload_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"finalize_upload",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// find_api_v2_follows => /api/v2/follows/find(.:format)
  // function(options)
  find_api_v2_follows_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"follows",false],[2,[7,"/",false],[2,[6,"find",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
find_api_v2_follows_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"follows",false],[2,[7,"/",false],[2,[6,"find",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// find_api_v2_friends => /api/v2/friends/find(.:format)
  // function(options)
  find_api_v2_friends_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"find",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
find_api_v2_friends_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"find",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// find_friends => /friends/:page(.:format)
  // function(page, options)
  find_friends_path: Utils.route([["page",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[3,"page",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
find_friends_url: Utils.route([["page",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[3,"page",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// finish_api_v2_ab_mobile_test => /api/v2/ab_mobile_tests/:id/finish(.:format)
  // function(id, options)
  finish_api_v2_ab_mobile_test_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"ab_mobile_tests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"finish",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
finish_api_v2_ab_mobile_test_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"ab_mobile_tests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"finish",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// flashvars_test_page_index => /test_page/flashvars
  // function(options)
  flashvars_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"flashvars",false]]]]),
flashvars_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"flashvars",false]]]], true),
// follow_all_friends_from_provider_api_v2_follows => /api/v2/follows/follow_all_friends_from_provider(.:format)
  // function(options)
  follow_all_friends_from_provider_api_v2_follows_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"follows",false],[2,[7,"/",false],[2,[6,"follow_all_friends_from_provider",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
follow_all_friends_from_provider_api_v2_follows_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"follows",false],[2,[7,"/",false],[2,[6,"follow_all_friends_from_provider",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// follow_from_mail => /follows/follow_from_mail/:permalink(.:format)
  // function(permalink, options)
  follow_from_mail_path: Utils.route([["permalink",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"follows",false],[2,[7,"/",false],[2,[6,"follow_from_mail",false],[2,[7,"/",false],[2,[3,"permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
follow_from_mail_url: Utils.route([["permalink",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"follows",false],[2,[7,"/",false],[2,[6,"follow_from_mail",false],[2,[7,"/",false],[2,[3,"permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// follow_mail_test_page_index => /test_page/follow_mail
  // function(options)
  follow_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"follow_mail",false]]]]),
follow_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"follow_mail",false]]]], true),
// followers_list_api_v2_action_subjects_data => /api/v2/action_subjects_data/followers_list(.:format)
  // function(options)
  followers_list_api_v2_action_subjects_data_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[6,"followers_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
followers_list_api_v2_action_subjects_data_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[6,"followers_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// followings_list_api_v2_action_subjects_data => /api/v2/action_subjects_data/followings_list(.:format)
  // function(options)
  followings_list_api_v2_action_subjects_data_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[6,"followings_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
followings_list_api_v2_action_subjects_data_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[6,"followings_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// fresh => /fresh
  // function(options)
  fresh_path: Utils.route([], {}, [2,[7,"/",false],[6,"fresh",false]]),
fresh_url: Utils.route([], {}, [2,[7,"/",false],[6,"fresh",false]], true),
// friends => /friends
  // function(options)
  friends_path: Utils.route([], {}, [2,[7,"/",false],[6,"friends",false]]),
friends_url: Utils.route([], {}, [2,[7,"/",false],[6,"friends",false]], true),
// friends_api_v2_notifications => /api/v2/notifications/friends(.:format)
  // function(options)
  friends_api_v2_notifications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"notifications",false],[2,[7,"/",false],[2,[6,"friends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
friends_api_v2_notifications_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"notifications",false],[2,[7,"/",false],[2,[6,"friends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// friends_count_friends => /friends/friends_count(.:format)
  // function(options)
  friends_count_friends_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"friends_count",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
friends_count_friends_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"friends_count",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// friends_per_provider_friends => /friends/friends_per_provider(.:format)
  // function(options)
  friends_per_provider_friends_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"friends_per_provider",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
friends_per_provider_friends_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"friends_per_provider",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// friends_to_follow_api_v2_friends => /api/v2/friends/friends_to_follow(.:format)
  // function(options)
  friends_to_follow_api_v2_friends_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"friends_to_follow",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
friends_to_follow_api_v2_friends_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"friends_to_follow",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// gems_api_v2_best => /api/v2/best/:id/gems(.:format)
  // function(id, options)
  gems_api_v2_best_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"gems",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
gems_api_v2_best_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"gems",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// gifv_coub => /view/:id.gifv(.:format)
  // function(id, options)
  gifv_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"view",false],[2,[7,"/",false],[2,[3,"id",false],[2,[8,".",false],[2,[6,"gifv",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
gifv_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"view",false],[2,[7,"/",false],[2,[3,"id",false],[2,[8,".",false],[2,[6,"gifv",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// gifv_embed_test_page_index => /test_page/gifv_embed
  // function(options)
  gifv_embed_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"gifv_embed",false]]]]),
gifv_embed_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"gifv_embed",false]]]], true),
// gifv_embedly_test_page_index => /test_page/gifv_embedly
  // function(options)
  gifv_embedly_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"gifv_embedly",false]]]]),
gifv_embedly_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"gifv_embedly",false]]]], true),
// global_coubs_list_api_v2_editor_coubs => /api/v2/editor/coubs/global_coubs_list(.:format)
  // function(options)
  global_coubs_list_api_v2_editor_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"global_coubs_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
global_coubs_list_api_v2_editor_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"global_coubs_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// global_editor_coubs => /editor/coubs/global(.:format)
  // function(options)
  global_editor_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"global",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
global_editor_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"global",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// global_stats_editor_coubs => /editor/coubs/global_stats(.:format)
  // function(options)
  global_stats_editor_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"global_stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
global_stats_editor_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"global_stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// graphs_stats => /stats/graphs(.:format)
  // function(options)
  graphs_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"graphs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
graphs_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"graphs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// help => /help(.:format)
  // function(options)
  help_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"help",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
help_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"help",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// hot => /hot
  // function(options)
  hot_path: Utils.route([], {}, [2,[7,"/",false],[6,"hot",false]]),
hot_url: Utils.route([], {}, [2,[7,"/",false],[6,"hot",false]], true),
// hot_api_v2_timeline_index => /api/v2/timeline/hot(/:hot_kind)(.:format)
  // function(options)
  hot_api_v2_timeline_index_path: Utils.route([["hot_kind",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"hot",false],[2,[1,[2,[7,"/",false],[3,"hot_kind",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]),
hot_api_v2_timeline_index_url: Utils.route([["hot_kind",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"hot",false],[2,[1,[2,[7,"/",false],[3,"hot_kind",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]], true),
// hotness_api_v2_timeline_index => /api/v2/timeline/hotness(.:format)
  // function(options)
  hotness_api_v2_timeline_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"hotness",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
hotness_api_v2_timeline_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"hotness",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// hotness_feed => /feed/hotness
  // function(options)
  hotness_feed_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"feed",false],[2,[7,"/",false],[6,"hotness",false]]]]),
hotness_feed_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"feed",false],[2,[7,"/",false],[6,"hotness",false]]]], true),
// ignore_possible_friend => /users/ignore_possible_friend/:friend_id(.:format)
  // function(friend_id, options)
  ignore_possible_friend_path: Utils.route([["friend_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"ignore_possible_friend",false],[2,[7,"/",false],[2,[3,"friend_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
ignore_possible_friend_url: Utils.route([["friend_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"ignore_possible_friend",false],[2,[7,"/",false],[2,[3,"friend_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// ignore_possible_friend_api_v2_friends => /api/v2/friends/ignore_possible_friend(.:format)
  // function(options)
  ignore_possible_friend_api_v2_friends_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"ignore_possible_friend",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
ignore_possible_friend_api_v2_friends_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"ignore_possible_friend",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// imgur_post_api_v2_coubs => /api/v2/coubs/imgur_post(.:format)
  // function(options)
  imgur_post_api_v2_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"imgur_post",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
imgur_post_api_v2_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"imgur_post",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// increaserev_test_page_index => /test_page/increaserev
  // function(options)
  increaserev_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"increaserev",false]]]]),
increaserev_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"increaserev",false]]]], true),
// increment_clicks_api_v2_promoted_coub => /api/v2/promoted_coubs/:id/increment_clicks(.:format)
  // function(id, options)
  increment_clicks_api_v2_promoted_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"increment_clicks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
increment_clicks_api_v2_promoted_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"increment_clicks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// increment_views_api_v2_promoted_coub => /api/v2/promoted_coubs/:id/increment_views(.:format)
  // function(id, options)
  increment_views_api_v2_promoted_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"increment_views",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
increment_views_api_v2_promoted_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"increment_views",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// increment_views_coub => /coubs/:id/increment_views(.:format)
  // function(id, options)
  increment_views_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"increment_views",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
increment_views_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"increment_views",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// index_api_v2_stats => /api/v2/stats/coubs/:type(.:format)
  // function(type, options)
  index_api_v2_stats_path: Utils.route([["type",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"type",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
index_api_v2_stats_url: Utils.route([["type",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"type",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// init_upload_api_v2_coubs => /api/v2/coubs/init_upload(.:format)
  // function(options)
  init_upload_api_v2_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"init_upload",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
init_upload_api_v2_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"init_upload",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// invite_all_friends_from_provider_api_v2_invites => /api/v2/invites/invite_all_friends_from_provider(.:format)
  // function(options)
  invite_all_friends_from_provider_api_v2_invites_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"invite_all_friends_from_provider",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
invite_all_friends_from_provider_api_v2_invites_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"invite_all_friends_from_provider",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// invite_friend_mail_test_page_index => /test_page/invite_friend_mail
  // function(options)
  invite_friend_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"invite_friend_mail",false]]]]),
invite_friend_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"invite_friend_mail",false]]]], true),
// invite_friends_scope_api_v2_invites => /api/v2/invites/invite_friends_scope(.:format)
  // function(options)
  invite_friends_scope_api_v2_invites_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"invite_friends_scope",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
invite_friends_scope_api_v2_invites_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"invite_friends_scope",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// invite_friends_via_provider_api_v2_invites => /api/v2/invites/invite_friends_via_provider(.:format)
  // function(options)
  invite_friends_via_provider_api_v2_invites_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"invite_friends_via_provider",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
invite_friends_via_provider_api_v2_invites_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"invite_friends_via_provider",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// ios => /ios(.:format)
  // function(options)
  ios_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ios",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
ios_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ios",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// labels_admin_audio_tracks => /admin/audio_tracks/labels(.:format)
  // function(options)
  labels_admin_audio_tracks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[6,"labels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
labels_admin_audio_tracks_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[6,"labels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// lame_api_editor_stories => /api/editor/stories/lame(.:format)
  // function(options)
  lame_api_editor_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"lame",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
lame_api_editor_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"lame",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// lame_editor_stories => /editor/stories/lame(.:format)
  // function(options)
  lame_editor_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"lame",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
lame_editor_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"lame",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// like_mail_test_page_index => /test_page/like_mail
  // function(options)
  like_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"like_mail",false]]]]),
like_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"like_mail",false]]]], true),
// like_points_api_v2_editor_coub => /api/v2/editor/coubs/:id/like_points(.:format)
  // function(id, options)
  like_points_api_v2_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"like_points",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
like_points_api_v2_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"like_points",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// likes => /likes(/:sort_type)
  // function(options)
  likes_path: Utils.route([["sort_type",false]], {}, [2,[7,"/",false],[2,[6,"likes",false],[1,[2,[7,"/",false],[3,"sort_type",false]],false]]]),
likes_url: Utils.route([["sort_type",false]], {}, [2,[7,"/",false],[2,[6,"likes",false],[1,[2,[7,"/",false],[3,"sort_type",false]],false]]], true),
// likes_api_v2_best => /api/v2/best/:id/likes(.:format)
  // function(id, options)
  likes_api_v2_best_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"likes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
likes_api_v2_best_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"likes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// likes_api_v2_timeline_index => /api/v2/timeline/likes(.:format)
  // function(options)
  likes_api_v2_timeline_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"likes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
likes_api_v2_timeline_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"likes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// likes_stats => /stats/likes(.:format)
  // function(options)
  likes_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"likes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
likes_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"likes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// location_test_page_index => /test_page/location
  // function(options)
  location_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"location",false]]]]),
location_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"location",false]]]], true),
// login_as_channel_admin_channel => /admin/channels/:id/login_as_channel(.:format)
  // function(id, options)
  login_as_channel_admin_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"login_as_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
login_as_channel_admin_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"login_as_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// logout_as_channel_admin_channels => /admin/channels/logout_as_channel(.:format)
  // function(options)
  logout_as_channel_admin_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"logout_as_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
logout_as_channel_admin_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"logout_as_channel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// mails_test_page_index => /test_page/mails
  // function(options)
  mails_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mails",false]]]]),
mails_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mails",false]]]], true),
// mark_as_invited_api_v2_invites => /api/v2/invites/mark_as_invited(.:format)
  // function(options)
  mark_as_invited_api_v2_invites_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"mark_as_invited",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
mark_as_invited_api_v2_invites_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"mark_as_invited",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// mark_as_normal_admin_tag => /admin/tags/:id/mark_as_normal(.:format)
  // function(id, options)
  mark_as_normal_admin_tag_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"mark_as_normal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
mark_as_normal_admin_tag_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"mark_as_normal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// mark_as_trash_admin_tag => /admin/tags/:id/mark_as_trash(.:format)
  // function(id, options)
  mark_as_trash_admin_tag_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"mark_as_trash",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
mark_as_trash_admin_tag_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"mark_as_trash",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// mark_channels_guide_as_seen_api_v2_users => /api/v2/users/mark_channels_guide_as_seen(.:format)
  // function(options)
  mark_channels_guide_as_seen_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"mark_channels_guide_as_seen",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
mark_channels_guide_as_seen_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"mark_channels_guide_as_seen",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// marked_18_mail_test_page_index => /test_page/marked_18_mail
  // function(options)
  marked_18_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"marked_18_mail",false]]]]),
marked_18_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"marked_18_mail",false]]]], true),
// mass_destroy_api_v2_abuses => /api/v2/abuses/mass_delete/:coub_id(.:format)
  // function(coub_id, options)
  mass_destroy_api_v2_abuses_path: Utils.route([["coub_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"abuses",false],[2,[7,"/",false],[2,[6,"mass_delete",false],[2,[7,"/",false],[2,[3,"coub_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
mass_destroy_api_v2_abuses_url: Utils.route([["coub_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"abuses",false],[2,[7,"/",false],[2,[6,"mass_delete",false],[2,[7,"/",false],[2,[3,"coub_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// mass_follow_api_v2_follows => /api/v2/follows/mass_follow(.:format)
  // function(options)
  mass_follow_api_v2_follows_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"follows",false],[2,[7,"/",false],[2,[6,"mass_follow",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
mass_follow_api_v2_follows_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"follows",false],[2,[7,"/",false],[2,[6,"mass_follow",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// mastercard2017_quiz => /travelmastercard/quiz(.:format)
  // function(options)
  mastercard2017_quiz_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"travelmastercard",false],[2,[7,"/",false],[2,[6,"quiz",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
mastercard2017_quiz_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"travelmastercard",false],[2,[7,"/",false],[2,[6,"quiz",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// mastercard2017_quiz_result => /travelmastercard/quiz/result(.:format)
  // function(options)
  mastercard2017_quiz_result_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"travelmastercard",false],[2,[7,"/",false],[2,[6,"quiz",false],[2,[7,"/",false],[2,[6,"result",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
mastercard2017_quiz_result_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"travelmastercard",false],[2,[7,"/",false],[2,[6,"quiz",false],[2,[7,"/",false],[2,[6,"result",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// me_api_v2_users => /api/v2/users/me(.:format)
  // function(options)
  me_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"me",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
me_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"me",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// media_page => /media
  // function(options)
  media_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"media",false]]),
media_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"media",false]], true),
// mediaforce_between_hb_test_page_index => /test_page/mediaforce_between_hb
  // function(options)
  mediaforce_between_hb_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mediaforce_between_hb",false]]]]),
mediaforce_between_hb_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mediaforce_between_hb",false]]]], true),
// mediaforce_feed_new_test_page_index => /test_page/mediaforce_feed_new
  // function(options)
  mediaforce_feed_new_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mediaforce_feed_new",false]]]]),
mediaforce_feed_new_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mediaforce_feed_new",false]]]], true),
// mediaforce_player_hb_test_page_index => /test_page/mediaforce_player_hb
  // function(options)
  mediaforce_player_hb_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mediaforce_player_hb",false]]]]),
mediaforce_player_hb_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mediaforce_player_hb",false]]]], true),
// mediaforce_test_page_index => /test_page/mediaforce
  // function(options)
  mediaforce_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mediaforce",false]]]]),
mediaforce_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mediaforce",false]]]], true),
// memes_api_v2_best => /api/v2/best/:id/memes(.:format)
  // function(id, options)
  memes_api_v2_best_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"memes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
memes_api_v2_best_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"memes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// meta_test_page_index => /test_page/meta
  // function(options)
  meta_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"meta",false]]]]),
meta_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"meta",false]]]], true),
// mgid_test_page_index => /test_page/mgid
  // function(options)
  mgid_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mgid",false]]]]),
mgid_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"mgid",false]]]], true),
// moderated_coubs_admin_user => /admin/users/:id/moderated_coubs(.:format)
  // function(id, options)
  moderated_coubs_admin_user_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"moderated_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
moderated_coubs_admin_user_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"moderated_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// more_from_source_api_v2_coub => /api/v2/coubs/:id/more_from_source(.:format)
  // function(id, options)
  more_from_source_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"more_from_source",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
more_from_source_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"more_from_source",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// moxtv_test_page_index => /test_page/moxtv
  // function(options)
  moxtv_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"moxtv",false]]]]),
moxtv_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"moxtv",false]]]], true),
// my_api_v2_channel_recommendations => /api/v2/channels/:channel_id/recommendations/my(.:format)
  // function(channel_id, options)
  my_api_v2_channel_recommendations_path: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"channel_id",false],[2,[7,"/",false],[2,[6,"recommendations",false],[2,[7,"/",false],[2,[6,"my",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
my_api_v2_channel_recommendations_url: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"channel_id",false],[2,[7,"/",false],[2,[6,"recommendations",false],[2,[7,"/",false],[2,[6,"my",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// nativeroll_test_page_index => /test_page/nativeroll
  // function(options)
  nativeroll_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"nativeroll",false]]]]),
nativeroll_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"nativeroll",false]]]], true),
// new_admin_best => /admin/bests/new(.:format)
  // function(options)
  new_admin_best_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"bests",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_admin_best_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"bests",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_admin_best_tab => /admin/best_tabs/new(.:format)
  // function(options)
  new_admin_best_tab_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_admin_best_tab_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_admin_category => /admin/categories/new(.:format)
  // function(options)
  new_admin_category_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_admin_category_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_admin_channel_category => /admin/channel_categories/new(.:format)
  // function(options)
  new_admin_channel_category_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channel_categories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_admin_channel_category_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channel_categories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_admin_emoji => /admin/emojis/new(.:format)
  // function(options)
  new_admin_emoji_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_admin_emoji_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_admin_faq => /admin/faqs/new(.:format)
  // function(options)
  new_admin_faq_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_admin_faq_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_admin_faq_category => /admin/faq_categories/new(.:format)
  // function(options)
  new_admin_faq_category_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faq_categories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_admin_faq_category_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faq_categories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_admin_image_block => /admin/image_blocks/new(.:format)
  // function(options)
  new_admin_image_block_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"image_blocks",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_admin_image_block_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"image_blocks",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_admin_media_block => /admin/media_blocks/new(.:format)
  // function(options)
  new_admin_media_block_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"media_blocks",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_admin_media_block_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"media_blocks",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_admin_mobile_banner => /admin/mobile_banners/new(.:format)
  // function(options)
  new_admin_mobile_banner_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"mobile_banners",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_admin_mobile_banner_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"mobile_banners",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_admin_promo_coubs_carousel => /admin/promo/coubs_carousels/new(.:format)
  // function(options)
  new_admin_promo_coubs_carousel_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"coubs_carousels",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
new_admin_promo_coubs_carousel_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"coubs_carousels",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// new_admin_promo_pro_group => /admin/promo/pro_groups/new(.:format)
  // function(options)
  new_admin_promo_pro_group_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_groups",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
new_admin_promo_pro_group_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_groups",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// new_admin_promo_pro_group_coub => /admin/promo/pro_group_coubs/new(.:format)
  // function(options)
  new_admin_promo_pro_group_coub_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_group_coubs",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
new_admin_promo_pro_group_coub_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"pro_group_coubs",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// new_admin_trending_trend_region => /admin/trending/trend_regions/new(.:format)
  // function(options)
  new_admin_trending_trend_region_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_regions",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
new_admin_trending_trend_region_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"trend_regions",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// new_ads_ad_overlay => /ads/ad_overlays/new(.:format)
  // function(options)
  new_ads_ad_overlay_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"ad_overlays",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_ads_ad_overlay_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"ad_overlays",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_ads_editor_background => /ads/editor_backgrounds/new(.:format)
  // function(options)
  new_ads_editor_background_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"editor_backgrounds",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_ads_editor_background_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"editor_backgrounds",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_ads_overlay => /ads/overlays/new(.:format)
  // function(options)
  new_ads_overlay_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"overlays",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_ads_overlay_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"overlays",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_ads_promo_audio_track => /ads/promo_audio_tracks/new(.:format)
  // function(options)
  new_ads_promo_audio_track_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_audio_tracks",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_ads_promo_audio_track_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_audio_tracks",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_ads_promo_background => /ads/promo_backgrounds/new(.:format)
  // function(options)
  new_ads_promo_background_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_backgrounds",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_ads_promo_background_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_backgrounds",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_ads_promo_rule => /ads/promo_rules/new(.:format)
  // function(options)
  new_ads_promo_rule_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_rules",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_ads_promo_rule_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"promo_rules",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_ads_tag_promo_background => /ads/tag_promo_backgrounds/new(.:format)
  // function(options)
  new_ads_tag_promo_background_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"tag_promo_backgrounds",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_ads_tag_promo_background_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"tag_promo_backgrounds",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_api_v2_invite => /api/v2/invites/new(.:format)
  // function(options)
  new_api_v2_invite_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
new_api_v2_invite_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// new_api_v2_password => /api/v2/passwords/new(.:format)
  // function(options)
  new_api_v2_password_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
new_api_v2_password_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// new_api_v2_raw_video => /api/v2/raw_videos/new(.:format)
  // function(options)
  new_api_v2_raw_video_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
new_api_v2_raw_video_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// new_api_v2_story => /api/v2/stories/new(.:format)
  // function(options)
  new_api_v2_story_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
new_api_v2_story_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// new_category_mail_test_page_index => /test_page/new_category_mail
  // function(options)
  new_category_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"new_category_mail",false]]]]),
new_category_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"new_category_mail",false]]]], true),
// new_coub => /coubs/new(.:format)
  // function(options)
  new_coub_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
new_coub_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// new_dev_application => /dev/applications/new(.:format)
  // function(options)
  new_dev_application_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_dev_application_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_editor_coub_of_the_day => /editor/coub_of_the_days/new(.:format)
  // function(options)
  new_editor_coub_of_the_day_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coub_of_the_days",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_editor_coub_of_the_day_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coub_of_the_days",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_editor_mail_test_page_index => /test_page/new_editor_mail
  // function(options)
  new_editor_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"new_editor_mail",false]]]]),
new_editor_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"new_editor_mail",false]]]], true),
// new_editor_promo => /new-editor
  // function(options)
  new_editor_promo_path: Utils.route([], {}, [2,[7,"/",false],[6,"new-editor",false]]),
new_editor_promo_url: Utils.route([], {}, [2,[7,"/",false],[6,"new-editor",false]], true),
// new_hot => /new-hot
  // function(options)
  new_hot_path: Utils.route([], {}, [2,[7,"/",false],[6,"new-hot",false]]),
new_hot_url: Utils.route([], {}, [2,[7,"/",false],[6,"new-hot",false]], true),
// new_oauth_application => /oauth/applications/new(.:format)
  // function(options)
  new_oauth_application_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
new_oauth_application_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// new_promoted_coub => /promote/new
  // function(options)
  new_promoted_coub_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"promote",false],[2,[7,"/",false],[6,"new",false]]]]),
new_promoted_coub_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"promote",false],[2,[7,"/",false],[6,"new",false]]]], true),
// new_raw_video => /raw_videos/new(.:format)
  // function(options)
  new_raw_video_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
new_raw_video_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// new_rising => /new-rising
  // function(options)
  new_rising_path: Utils.route([], {}, [2,[7,"/",false],[6,"new-rising",false]]),
new_rising_url: Utils.route([], {}, [2,[7,"/",false],[6,"new-rising",false]], true),
// new_story => /stories/new(.:format)
  // function(options)
  new_story_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
new_story_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// new_user => /users/new(.:format)
  // function(options)
  new_user_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
new_user_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// new_user_coubs_stats => /stats/new_user_coubs(.:format)
  // function(options)
  new_user_coubs_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"new_user_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
new_user_coubs_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"new_user_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// nicetry => /getvideo
  // function(options)
  nicetry_path: Utils.route([], {}, [2,[7,"/",false],[6,"getvideo",false]]),
nicetry_url: Utils.route([], {}, [2,[7,"/",false],[6,"getvideo",false]], true),
// ninegag_post_api_v2_coubs => /api/v2/coubs/ninegag_post(.:format)
  // function(options)
  ninegag_post_api_v2_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"ninegag_post",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
ninegag_post_api_v2_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"ninegag_post",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// notifications_group => /notifications_groups/:id(.:format)
  // function(id, options)
  notifications_group_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"notifications_groups",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
notifications_group_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"notifications_groups",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// notifications_viewed_api_v2_channels => /api/v2/channels/notifications_viewed(.:format)
  // function(options)
  notifications_viewed_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"notifications_viewed",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
notifications_viewed_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"notifications_viewed",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// oauth_application => /oauth/applications/:id(.:format)
  // function(id, options)
  oauth_application_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
oauth_application_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"applications",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// oauth_applications => /oauth/applications(.:format)
  // function(options)
  oauth_applications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"applications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
oauth_applications_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"applications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// oauth_authorization => /dev/oauth/authorize(.:format)
  // function(options)
  oauth_authorization_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"authorize",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
oauth_authorization_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"authorize",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// oauth_authorized_application => /oauth/authorized_applications/:id(.:format)
  // function(id, options)
  oauth_authorized_application_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"authorized_applications",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
oauth_authorized_application_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"authorized_applications",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// oauth_authorized_applications => /oauth/authorized_applications(.:format)
  // function(options)
  oauth_authorized_applications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"authorized_applications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
oauth_authorized_applications_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"authorized_applications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// oauth_revoke => /dev/oauth/revoke(.:format)
  // function(options)
  oauth_revoke_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"revoke",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
oauth_revoke_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"revoke",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// oauth_signin => /oauth/signin(.:format)
  // function(options)
  oauth_signin_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"signin",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
oauth_signin_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"signin",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// oauth_token => /dev/oauth/token(.:format)
  // function(options)
  oauth_token_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
oauth_token_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// oauth_token_info => /dev/oauth/token/info(.:format)
  // function(options)
  oauth_token_info_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"token",false],[2,[7,"/",false],[2,[6,"info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
oauth_token_info_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dev",false],[2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"token",false],[2,[7,"/",false],[2,[6,"info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// oembed_service => /oembed_service
  // function(options)
  oembed_service_path: Utils.route([], {}, [2,[7,"/",false],[6,"oembed_service",false]]),
oembed_service_url: Utils.route([], {}, [2,[7,"/",false],[6,"oembed_service",false]], true),
// og_image_api_v2_coub => /api/v2/coubs/:id/og_image(.:format)
  // function(id, options)
  og_image_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"og_image",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
og_image_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"og_image",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// ok_embeds_test_page_index => /test_page/ok_embeds
  // function(options)
  ok_embeds_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"ok_embeds",false]]]]),
ok_embeds_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"ok_embeds",false]]]], true),
// old_favourites => /favourites(.:format)
  // function(options)
  old_favourites_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"favourites",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
old_favourites_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"favourites",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// old_terms_of_service_policy_page => /copyright(.:format)
  // function(options)
  old_terms_of_service_policy_page_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"copyright",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
old_terms_of_service_policy_page_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"copyright",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// payments_qiwi_callback => /payments/qiwi_callback(.:format)
  // function(options)
  payments_qiwi_callback_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"payments",false],[2,[7,"/",false],[2,[6,"qiwi_callback",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
payments_qiwi_callback_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"payments",false],[2,[7,"/",false],[2,[6,"qiwi_callback",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// pop_editor_coub => /editor/coubs/:id/pop(.:format)
  // function(id, options)
  pop_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"pop",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
pop_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"pop",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// popular_banned_stats => /stats/popular_banned(.:format)
  // function(options)
  popular_banned_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"popular_banned",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
popular_banned_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"popular_banned",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// processing_status_api_v2_coub => /api/v2/coubs/:id/processing_status(.:format)
  // function(id, options)
  processing_status_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
processing_status_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// processing_status_api_v2_external_download => /api/v2/external_downloads/:id/processing_status(.:format)
  // function(id, options)
  processing_status_api_v2_external_download_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"external_downloads",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
processing_status_api_v2_external_download_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"external_downloads",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// processing_status_api_v2_raw_video => /api/v2/raw_videos/:id/processing_status(.:format)
  // function(id, options)
  processing_status_api_v2_raw_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
processing_status_api_v2_raw_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// processing_status_api_v2_raw_video_announcement => /api/v2/raw_video_announcements/:id/processing_status(.:format)
  // function(id, options)
  processing_status_api_v2_raw_video_announcement_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_video_announcements",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
processing_status_api_v2_raw_video_announcement_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"raw_video_announcements",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// processing_status_api_v2_rtmp_upload => /api/v2/rtmp_uploads/:id/processing_status(.:format)
  // function(id, options)
  processing_status_api_v2_rtmp_upload_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"rtmp_uploads",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
processing_status_api_v2_rtmp_upload_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"rtmp_uploads",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// processing_status_api_v2_segment => /api/v2/segments/:id/processing_status(.:format)
  // function(id, options)
  processing_status_api_v2_segment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"segments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
processing_status_api_v2_segment_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"segments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// processing_status_api_v2_temp_upload => /api/v2/temp_uploads/:id/processing_status(.:format)
  // function(id, options)
  processing_status_api_v2_temp_upload_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"temp_uploads",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
processing_status_api_v2_temp_upload_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"temp_uploads",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// processing_status_raw_video => /raw_videos/:id/processing_status(.:format)
  // function(id, options)
  processing_status_raw_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
processing_status_raw_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"processing_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// profile_edit => /:id/edit(.:format)
  // function(id, options)
  profile_edit_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
profile_edit_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// profile_notifications_viewed => /profile/notifications_viewed(.:format)
  // function(options)
  profile_notifications_viewed_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"profile",false],[2,[7,"/",false],[2,[6,"notifications_viewed",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
profile_notifications_viewed_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"profile",false],[2,[7,"/",false],[2,[6,"notifications_viewed",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// promo_main_page_coubs => /promo/main_page_coubs/:version(.:format)
  // function(version, options)
  promo_main_page_coubs_path: Utils.route([["version",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"main_page_coubs",false],[2,[7,"/",false],[2,[3,"version",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
promo_main_page_coubs_url: Utils.route([["version",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"main_page_coubs",false],[2,[7,"/",false],[2,[3,"version",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// promo_rules => /promo/rules/:template(.:format)
  // function(template, options)
  promo_rules_path: Utils.route([["template",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"rules",false],[2,[7,"/",false],[2,[3,"template",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
promo_rules_url: Utils.route([["template",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"rules",false],[2,[7,"/",false],[2,[3,"template",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// promo_veon => /promo/veon(.:format)
  // function(options)
  promo_veon_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"veon",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
promo_veon_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"veon",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// promoted_coub => /promote/:id
  // function(id, options)
  promoted_coub_path: Utils.route([["id",true]], {}, [2,[7,"/",false],[2,[6,"promote",false],[2,[7,"/",false],[3,"id",false]]]]),
promoted_coub_url: Utils.route([["id",true]], {}, [2,[7,"/",false],[2,[6,"promote",false],[2,[7,"/",false],[3,"id",false]]]], true),
// promoted_coubs => /promote
  // function(options)
  promoted_coubs_path: Utils.route([], {}, [2,[7,"/",false],[6,"promote",false]]),
promoted_coubs_url: Utils.route([], {}, [2,[7,"/",false],[6,"promote",false]], true),
// publish_now_api_v2_editor_explore_index => /api/v2/editor/explore/publish_now(.:format)
  // function(options)
  publish_now_api_v2_editor_explore_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[6,"publish_now",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
publish_now_api_v2_editor_explore_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"explore",false],[2,[7,"/",false],[2,[6,"publish_now",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// publish_now_editor_coub => /editor/coubs/:id/publish_now(.:format)
  // function(id, options)
  publish_now_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"publish_now",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
publish_now_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"publish_now",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// push_notification_test_page_index => /test_page/push_notification
  // function(options)
  push_notification_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"push_notification",false]]]]),
push_notification_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"push_notification",false]]]], true),
// random => /random(/:sort_type)
  // function(options)
  random_path: Utils.route([["sort_type",false]], {}, [2,[7,"/",false],[2,[6,"random",false],[1,[2,[7,"/",false],[3,"sort_type",false]],false]]]),
random_url: Utils.route([["sort_type",false]], {}, [2,[7,"/",false],[2,[6,"random",false],[1,[2,[7,"/",false],[3,"sort_type",false]],false]]], true),
// random_coubs => /coubs/random(.:format)
  // function(options)
  random_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"random",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
random_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"random",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// random_stats => /stats/random(.:format)
  // function(options)
  random_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"random",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
random_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"random",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// random_suggestions_api_v2_coub => /api/v2/coubs/:id/random_suggestions(.:format)
  // function(id, options)
  random_suggestions_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"random_suggestions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
random_suggestions_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"random_suggestions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// raw_video => /raw_videos/:id(.:format)
  // function(id, options)
  raw_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
raw_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// raw_videos => /raw_videos(.:format)
  // function(options)
  raw_videos_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
raw_videos_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// reattach_channels_api_v2_users => /api/v2/users/reattach_channels(.:format)
  // function(options)
  reattach_channels_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"reattach_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
reattach_channels_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"reattach_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// recent_api_editor_stories => /api/editor/stories/recent(.:format)
  // function(options)
  recent_api_editor_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"recent",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
recent_api_editor_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"recent",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// recent_api_v2_channels => /api/v2/channels/recent(.:format)
  // function(options)
  recent_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"recent",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
recent_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"recent",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// recent_editor_stories => /editor/stories/recent(.:format)
  // function(options)
  recent_editor_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"recent",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
recent_editor_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"recent",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// recommended_api_v2_friends => /api/v2/friends/recommended(.:format)
  // function(options)
  recommended_api_v2_friends_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"recommended",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
recommended_api_v2_friends_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"recommended",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// recoub_mail_test_page_index => /test_page/recoub_mail
  // function(options)
  recoub_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"recoub_mail",false]]]]),
recoub_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"recoub_mail",false]]]], true),
// recoubs_list_api_v2_action_subjects_data => /api/v2/action_subjects_data/recoubs_list(.:format)
  // function(options)
  recoubs_list_api_v2_action_subjects_data_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[6,"recoubs_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
recoubs_list_api_v2_action_subjects_data_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[6,"recoubs_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// recoubs_queue_editor_channel => /editor/channels/:id/recoubs_queue(.:format)
  // function(id, options)
  recoubs_queue_editor_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"recoubs_queue",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
recoubs_queue_editor_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"recoubs_queue",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// recover_password => /recover_password(.:format)
  // function(options)
  recover_password_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"recover_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
recover_password_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"recover_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// recover_password_api_v2_passwords => /api/v2/passwords/recover_password(.:format)
  // function(options)
  recover_password_api_v2_passwords_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[6,"recover_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
recover_password_api_v2_passwords_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[6,"recover_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// redo_api_v2_editor_coub => /api/v2/editor/coubs/:id/redo(.:format)
  // function(id, options)
  redo_api_v2_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"redo",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
redo_api_v2_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"redo",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// regular_update_test_page_index => /test_page/regular_update
  // function(options)
  regular_update_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"regular_update",false]]]]),
regular_update_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"regular_update",false]]]], true),
// reject_editor_promoted_coub => /editor/promoted_coubs/:id/reject(.:format)
  // function(id, options)
  reject_editor_promoted_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"reject",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
reject_editor_promoted_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"promoted_coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"reject",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// related_channels_api_v2_tags => /api/v2/tags/:tag_name/related_channels(.:format)
  // function(tag_name, options)
  related_channels_api_v2_tags_path: Utils.route([["tag_name",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"tag_name",false],[2,[7,"/",false],[2,[6,"related_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
related_channels_api_v2_tags_url: Utils.route([["tag_name",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"tag_name",false],[2,[7,"/",false],[2,[6,"related_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// related_tags_api_v2_tags => /api/v2/tags/:tag_name/related_tags(.:format)
  // function(tag_name, options)
  related_tags_api_v2_tags_path: Utils.route([["tag_name",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"tag_name",false],[2,[7,"/",false],[2,[6,"related_tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
related_tags_api_v2_tags_url: Utils.route([["tag_name",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"tag_name",false],[2,[7,"/",false],[2,[6,"related_tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// remix_coub => /coubs/:id/remix(.:format)
  // function(id, options)
  remix_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"remix",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
remix_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"remix",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// remixes_list_api_v2_action_subjects_data => /api/v2/action_subjects_data/remixes_list(.:format)
  // function(options)
  remixes_list_api_v2_action_subjects_data_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[6,"remixes_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
remixes_list_api_v2_action_subjects_data_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[6,"remixes_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// remove_auth_api_v2_channels => /api/v2/channels/remove_auth(.:format)
  // function(options)
  remove_auth_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"remove_auth",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
remove_auth_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"remove_auth",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// remove_device_token_api_v2_users => /api/v2/users/remove_device_token(.:format)
  // function(options)
  remove_device_token_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"remove_device_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
remove_device_token_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"remove_device_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// remove_from_edited_editor_coub => /editor/coubs/:id/remove_from_edited(.:format)
  // function(id, options)
  remove_from_edited_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"remove_from_edited",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
remove_from_edited_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"remove_from_edited",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// remove_from_editorial_channels_editor_coub => /editor/coubs/:id/remove_from_editorial_channels(.:format)
  // function(id, options)
  remove_from_editorial_channels_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"remove_from_editorial_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
remove_from_editorial_channels_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"remove_from_editorial_channels",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// remove_search_tag_editor_coub => /editor/coubs/:id/remove_search_tag(.:format)
  // function(id, options)
  remove_search_tag_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"remove_search_tag",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
remove_search_tag_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"remove_search_tag",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// remove_tags_api_v2_editor_coub => /api/v2/editor/coubs/:id/remove_tags(.:format)
  // function(id, options)
  remove_tags_api_v2_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"remove_tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
remove_tags_api_v2_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"remove_tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// reorder_api_editor_delayed_reposts => /api/editor/delayed_reposts/reorder(.:format)
  // function(options)
  reorder_api_editor_delayed_reposts_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"delayed_reposts",false],[2,[7,"/",false],[2,[6,"reorder",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
reorder_api_editor_delayed_reposts_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"delayed_reposts",false],[2,[7,"/",false],[2,[6,"reorder",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// reorder_api_editor_story_features => /api/editor/story_features/reorder(.:format)
  // function(options)
  reorder_api_editor_story_features_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"story_features",false],[2,[7,"/",false],[2,[6,"reorder",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
reorder_api_editor_story_features_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"story_features",false],[2,[7,"/",false],[2,[6,"reorder",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// reorder_api_v2_unified_admin_coub => /api/v2/unified_admin/coubs/:id/reorder(.:format)
  // function(id, options)
  reorder_api_v2_unified_admin_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"unified_admin",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"reorder",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
reorder_api_v2_unified_admin_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"unified_admin",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"reorder",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// repost => /reposts/:id(.:format)
  // function(id, options)
  repost_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"reposts",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
repost_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"reposts",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// reposts => /reposts(.:format)
  // function(options)
  reposts_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"reposts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
reposts_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"reposts",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// resend_email_verification_api_v2_users => /api/v2/users/resend_email_verification(.:format)
  // function(options)
  resend_email_verification_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"resend_email_verification",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
resend_email_verification_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"resend_email_verification",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// resend_email_verification_users => /users/resend_email_verification(.:format)
  // function(options)
  resend_email_verification_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"resend_email_verification",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
resend_email_verification_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"resend_email_verification",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// reset_password => /reset_password(.:format)
  // function(options)
  reset_password_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"reset_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
reset_password_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"reset_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// reset_password_api_v2_passwords => /api/v2/passwords/reset_password(.:format)
  // function(options)
  reset_password_api_v2_passwords_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[6,"reset_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
reset_password_api_v2_passwords_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[6,"reset_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// reset_password_mail_test_page_index => /test_page/reset_password_mail
  // function(options)
  reset_password_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"reset_password_mail",false]]]]),
reset_password_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"reset_password_mail",false]]]], true),
// reset_password_users => /users/reset_password(.:format)
  // function(options)
  reset_password_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"reset_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
reset_password_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"reset_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// rising => /rising
  // function(options)
  rising_path: Utils.route([], {}, [2,[7,"/",false],[6,"rising",false]]),
rising_url: Utils.route([], {}, [2,[7,"/",false],[6,"rising",false]], true),
// rising_api_v2_timeline_index => /api/v2/timeline/rising(.:format)
  // function(options)
  rising_api_v2_timeline_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"rising",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
rising_api_v2_timeline_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"rising",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// root => /
  // function(options)
  root_path: Utils.route([], {}, [7,"/",false]),
root_url: Utils.route([], {}, [7,"/",false], true),
// save_name_promoted_coubs => /promote/save_name
  // function(options)
  save_name_promoted_coubs_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"promote",false],[2,[7,"/",false],[6,"save_name",false]]]]),
save_name_promoted_coubs_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"promote",false],[2,[7,"/",false],[6,"save_name",false]]]], true),
// save_status_api_v2_avatar_moderations => /api/v2/avatar_moderations/save_status(.:format)
  // function(options)
  save_status_api_v2_avatar_moderations_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"avatar_moderations",false],[2,[7,"/",false],[2,[6,"save_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
save_status_api_v2_avatar_moderations_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"avatar_moderations",false],[2,[7,"/",false],[2,[6,"save_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// schedule_api_editor_story_feature => /api/editor/story_features/:id/schedule(.:format)
  // function(id, options)
  schedule_api_editor_story_feature_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"story_features",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"schedule",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
schedule_api_editor_story_feature_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"story_features",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"schedule",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// scheduled_api_editor_story_features => /api/editor/story_features/scheduled(.:format)
  // function(options)
  scheduled_api_editor_story_features_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"story_features",false],[2,[7,"/",false],[2,[6,"scheduled",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
scheduled_api_editor_story_features_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"story_features",false],[2,[7,"/",false],[2,[6,"scheduled",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// search => /search(/:sort_type)(.:format)
  // function(options)
  search_path: Utils.route([["sort_type",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"search",false],[2,[1,[2,[7,"/",false],[3,"sort_type",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]),
search_url: Utils.route([["sort_type",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"search",false],[2,[1,[2,[7,"/",false],[3,"sort_type",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]], true),
// search_api_v2_tags => /api/v2/tags/search(.:format)
  // function(options)
  search_api_v2_tags_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
search_api_v2_tags_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// secure_resque_server => /resque
  // function(options)
  secure_resque_server_path: Utils.route([], {}, [2,[7,"/",false],[6,"resque",false]]),
secure_resque_server_url: Utils.route([], {}, [2,[7,"/",false],[6,"resque",false]], true),
// segment_source_coubs_api_v2_users => /api/v2/users/segment_source_coubs(.:format)
  // function(options)
  segment_source_coubs_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"segment_source_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
segment_source_coubs_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"segment_source_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// segments_api_v2_coub => /api/v2/coubs/:id/segments(.:format)
  // function(id, options)
  segments_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"segments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
segments_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"segments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// selectable_trends_api_editor_coubs => /api/editor/coubs/selectable_trends(.:format)
  // function(options)
  selectable_trends_api_editor_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"selectable_trends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
selectable_trends_api_editor_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"selectable_trends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// selectable_trends_editor_coubs => /editor/coubs/selectable_trends(.:format)
  // function(options)
  selectable_trends_editor_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"selectable_trends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
selectable_trends_editor_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"selectable_trends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// send_test_mail_editor_weekly_digest => /editor/weekly_digests/:id/send_test_mail(.:format)
  // function(id, options)
  send_test_mail_editor_weekly_digest_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"send_test_mail",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
send_test_mail_editor_weekly_digest_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"weekly_digests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"send_test_mail",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// set_categories_coub => /coubs/:id/set_categories(.:format)
  // function(id, options)
  set_categories_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"set_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
set_categories_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"set_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// set_copyright_claim_editor_coub => /editor/coubs/:id/set_copyright_claim(.:format)
  // function(id, options)
  set_copyright_claim_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"set_copyright_claim",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
set_copyright_claim_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"set_copyright_claim",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// set_global_safe_status_editor_coub => /editor/coubs/:id/set_global_safe_status(.:format)
  // function(id, options)
  set_global_safe_status_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"set_global_safe_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
set_global_safe_status_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"set_global_safe_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// set_new_password => /set_new_password/:token(.:format)
  // function(token, options)
  set_new_password_path: Utils.route([["token",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"set_new_password",false],[2,[7,"/",false],[2,[3,"token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
set_new_password_url: Utils.route([["token",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"set_new_password",false],[2,[7,"/",false],[2,[3,"token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// set_new_password_api_v2_passwords => /api/v2/passwords/set_new_password(.:format)
  // function(options)
  set_new_password_api_v2_passwords_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[6,"set_new_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
set_new_password_api_v2_passwords_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"passwords",false],[2,[7,"/",false],[2,[6,"set_new_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// set_previous_api_v2_channel_backgrounds => /api/v2/channels/:channel_id/backgrounds/set_previous(.:format)
  // function(channel_id, options)
  set_previous_api_v2_channel_backgrounds_path: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"channel_id",false],[2,[7,"/",false],[2,[6,"backgrounds",false],[2,[7,"/",false],[2,[6,"set_previous",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
set_previous_api_v2_channel_backgrounds_url: Utils.route([["channel_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"channel_id",false],[2,[7,"/",false],[2,[6,"backgrounds",false],[2,[7,"/",false],[2,[6,"set_previous",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// share_coub_api_v2_action_subjects_datum => /api/v2/action_subjects_data/:id/share_coub(.:format)
  // function(id, options)
  share_coub_api_v2_action_subjects_datum_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"share_coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
share_coub_api_v2_action_subjects_datum_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"action_subjects_data",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"share_coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// share_video_status_api_v2_coub => /api/v2/coubs/:id/share_video_status(.:format)
  // function(id, options)
  share_video_status_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"share_video_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
share_video_status_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"share_video_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// share_video_to_twitter_api_v2_coub => /api/v2/coubs/:id/share_video_to_twitter(.:format)
  // function(id, options)
  share_video_to_twitter_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"share_video_to_twitter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
share_video_to_twitter_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"share_video_to_twitter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// share_video_to_vkontakte_api_v2_coub => /api/v2/coubs/:id/share_video_to_vkontakte(.:format)
  // function(id, options)
  share_video_to_vkontakte_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"share_video_to_vkontakte",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
share_video_to_vkontakte_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"share_video_to_vkontakte",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// short_view_coub_by_permalink => /v/:id(.:format)
  // function(id, options)
  short_view_coub_by_permalink_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"v",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
short_view_coub_by_permalink_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"v",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// show_debug_info_api_v2_coub => /api/v2/coubs/:id/show_debug_info(.:format)
  // function(id, options)
  show_debug_info_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"show_debug_info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
show_debug_info_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"show_debug_info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// show_unregistered_friends_api_v2_friends => /api/v2/friends/show_unregistered_friends(.:format)
  // function(options)
  show_unregistered_friends_api_v2_friends_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"show_unregistered_friends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
show_unregistered_friends_api_v2_friends_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"friends",false],[2,[7,"/",false],[2,[6,"show_unregistered_friends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// sign_popup_test_page_index => /test_page/sign_popup
  // function(options)
  sign_popup_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"sign_popup",false]]]]),
sign_popup_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"sign_popup",false]]]], true),
// signin => /signin(.:format)
  // function(options)
  signin_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"signin",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
signin_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"signin",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// signin_api_v2_sessions => /api/v2/sessions/signin(.:format)
  // function(options)
  signin_api_v2_sessions_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[6,"signin",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
signin_api_v2_sessions_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[6,"signin",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// signout => /signout(.:format)
  // function(options)
  signout_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"signout",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
signout_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"signout",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// signup => /signup(.:format)
  // function(options)
  signup_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"signup",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
signup_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"signup",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// signup_api_v2_sessions => /api/v2/sessions/signup(.:format)
  // function(options)
  signup_api_v2_sessions_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[6,"signup",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
signup_api_v2_sessions_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[6,"signup",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// signup_page_data_invites => /invites/signup_page_data(.:format)
  // function(options)
  signup_page_data_invites_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"signup_page_data",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
signup_page_data_invites_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"signup_page_data",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// signup_page_invites => /invites(/:fid)(.:format)
  // function(options)
  signup_page_invites_path: Utils.route([["fid",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"invites",false],[2,[1,[2,[7,"/",false],[3,"fid",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]),
signup_page_invites_url: Utils.route([["fid",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"invites",false],[2,[1,[2,[7,"/",false],[3,"fid",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]], true),
// source => /sources/:id(.:format)
  // function(id, options)
  source_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"sources",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
source_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"sources",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// source_api_v2_coub => /api/v2/coubs/:id/source(.:format)
  // function(id, options)
  source_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"source",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
source_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"source",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// sources_api_v2_coub => /api/v2/coubs/:id/sources(.:format)
  // function(id, options)
  sources_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"sources",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
sources_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"sources",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// split_dashboard => /admin/split_panel
  // function(options)
  split_dashboard_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[6,"split_panel",false]]]]),
split_dashboard_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[6,"split_panel",false]]]], true),
// start_api_v2_ab_mobile_test => /api/v2/ab_mobile_tests/:id/start(.:format)
  // function(id, options)
  start_api_v2_ab_mobile_test_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"ab_mobile_tests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"start",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
start_api_v2_ab_mobile_test_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"ab_mobile_tests",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"start",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// stats => /stats(.:format)
  // function(options)
  stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// stats_ads_ad_overlay => /ads/ad_overlays/:id/stats(.:format)
  // function(id, options)
  stats_ads_ad_overlay_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"ad_overlays",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
stats_ads_ad_overlay_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ads",false],[2,[7,"/",false],[2,[6,"ad_overlays",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"stats",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// status_api_v2_sessions => /api/v2/sessions/status(.:format)
  // function(options)
  status_api_v2_sessions_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[6,"status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
status_api_v2_sessions_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"sessions",false],[2,[7,"/",false],[2,[6,"status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// status_api_v2_upload_audio => /api/v2/upload/audio/:id/status(.:format)
  // function(id, options)
  status_api_v2_upload_audio_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"upload",false],[2,[7,"/",false],[2,[6,"audio",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
status_api_v2_upload_audio_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"upload",false],[2,[7,"/",false],[2,[6,"audio",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// status_api_v2_upload_video => /api/v2/upload/video/:id/status(.:format)
  // function(id, options)
  status_api_v2_upload_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"upload",false],[2,[7,"/",false],[2,[6,"video",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
status_api_v2_upload_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"upload",false],[2,[7,"/",false],[2,[6,"video",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]], true),
// stories_api_v2_best => /api/v2/best/:id/stories(.:format)
  // function(id, options)
  stories_api_v2_best_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
stories_api_v2_best_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// stories_api_v2_timeline_index => /api/v2/timeline/stories(.:format)
  // function(options)
  stories_api_v2_timeline_index_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
stories_api_v2_timeline_index_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"stories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// stories_feed_page => /stories
  // function(options)
  stories_feed_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"stories",false]]),
stories_feed_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"stories",false]], true),
// story => /stories/:id(.:format)
  // function(id, options)
  story_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
story_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// story_memes_api_v2_best => /api/v2/best/:id/story_memes(.:format)
  // function(id, options)
  story_memes_api_v2_best_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"story_memes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
story_memes_api_v2_best_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"best",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"story_memes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// subscribe_api_v2_community => /api/v2/communities/:id/subscribe(.:format)
  // function(id, options)
  subscribe_api_v2_community_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"communities",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"subscribe",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
subscribe_api_v2_community_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"communities",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"subscribe",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// subscribe_to_coubs_mail => /users/subscribe_to_coubs_mail/:coub(.:format)
  // function(coub, options)
  subscribe_to_coubs_mail_path: Utils.route([["coub",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"subscribe_to_coubs_mail",false],[2,[7,"/",false],[2,[3,"coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
subscribe_to_coubs_mail_url: Utils.route([["coub",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"subscribe_to_coubs_mail",false],[2,[7,"/",false],[2,[3,"coub",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// subscriptions_api_v2_timeline_index => /api/v2/timeline/subscriptions/:kind(.:format)
  // function(kind, options)
  subscriptions_api_v2_timeline_index_path: Utils.route([["kind",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"subscriptions",false],[2,[7,"/",false],[2,[3,"kind",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
subscriptions_api_v2_timeline_index_url: Utils.route([["kind",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"subscriptions",false],[2,[7,"/",false],[2,[3,"kind",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// suggestions_api_v2_stories => /api/v2/stories/suggestions(.:format)
  // function(options)
  suggestions_api_v2_stories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"suggestions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
suggestions_api_v2_stories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[6,"suggestions",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// tag => /tags/:id(/:sort_type)
  // function(id, options)
  tag_path: Utils.route([["id",true],["sort_type",false]], {}, [2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[7,"/",false],[3,"sort_type",false]],false]]]]]),
tag_url: Utils.route([["id",true],["sort_type",false]], {}, [2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[7,"/",false],[3,"sort_type",false]],false]]]]], true),
// tag_adreport => /tags/:id/adreport(.:format)
  // function(id, options)
  tag_adreport_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"adreport",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
tag_adreport_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"adreport",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// tag_api_v2_timeline_index => /api/v2/timeline/tag/:id(.:format)
  // function(id, options)
  tag_api_v2_timeline_index_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"tag",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
tag_api_v2_timeline_index_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"timeline",false],[2,[7,"/",false],[2,[6,"tag",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// tag_page => /tag
  // function(options)
  tag_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"tag",false]]),
tag_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"tag",false]], true),
// terms_of_service_api_page => /api-terms
  // function(options)
  terms_of_service_api_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"api-terms",false]]),
terms_of_service_api_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"api-terms",false]], true),
// terms_of_service_copyright_page => /dmca
  // function(options)
  terms_of_service_copyright_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"dmca",false]]),
terms_of_service_copyright_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"dmca",false]], true),
// terms_of_service_copyright_page_ru => /dmca/ru
  // function(options)
  terms_of_service_copyright_page_ru_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"dmca",false],[2,[7,"/",false],[6,"ru",false]]]]),
terms_of_service_copyright_page_ru_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"dmca",false],[2,[7,"/",false],[6,"ru",false]]]], true),
// terms_of_service_page => /tos
  // function(options)
  terms_of_service_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"tos",false]]),
terms_of_service_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"tos",false]], true),
// terms_of_service_page_ru => /tos/ru
  // function(options)
  terms_of_service_page_ru_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"tos",false],[2,[7,"/",false],[6,"ru",false]]]]),
terms_of_service_page_ru_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"tos",false],[2,[7,"/",false],[6,"ru",false]]]], true),
// terms_of_service_policy_page => /privacy
  // function(options)
  terms_of_service_policy_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"privacy",false]]),
terms_of_service_policy_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"privacy",false]], true),
// test_page_index => /test_page
  // function(options)
  test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[6,"test_page",false]]),
test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[6,"test_page",false]], true),
// test_pushes_test_page_index => /test_page/test_pushes
  // function(options)
  test_pushes_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"test_pushes",false]]]]),
test_pushes_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"test_pushes",false]]]], true),
// timeline_rss_index => /rss/:rss_token(.:format)
  // function(rss_token, options)
  timeline_rss_index_path: Utils.route([["rss_token",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rss",false],[2,[7,"/",false],[2,[3,"rss_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
timeline_rss_index_url: Utils.route([["rss_token",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rss",false],[2,[7,"/",false],[2,[3,"rss_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// timeline_vast_test_page_index => /test_page/timeline_vast
  // function(options)
  timeline_vast_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"timeline_vast",false]]]]),
timeline_vast_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"timeline_vast",false]]]], true),
// toggle_category_editor_coub => /editor/coubs/:id/toggle_category(.:format)
  // function(id, options)
  toggle_category_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"toggle_category",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
toggle_category_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"toggle_category",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// toggle_flag_editor_coub => /editor/coubs/:id/toggle_flag(.:format)
  // function(id, options)
  toggle_flag_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"toggle_flag",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
toggle_flag_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"toggle_flag",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// top_coubs_stats => /stats/top_coubs(.:format)
  // function(options)
  top_coubs_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"top_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
top_coubs_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"top_coubs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// total_count_admin_audio_tracks => /admin/audio_tracks/total_count(.:format)
  // function(options)
  total_count_admin_audio_tracks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[6,"total_count",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
total_count_admin_audio_tracks_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"audio_tracks",false],[2,[7,"/",false],[2,[6,"total_count",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// trends_api_editor_coubs => /api/editor/coubs/trends(.:format)
  // function(options)
  trends_api_editor_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"trends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
trends_api_editor_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"trends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// trends_editor_coubs => /editor/coubs/trends(.:format)
  // function(options)
  trends_editor_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"trends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
trends_editor_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"trends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// tumblr_embeds_test_page_index => /test_page/tumblr_embeds
  // function(options)
  tumblr_embeds_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"tumblr_embeds",false]]]]),
tumblr_embeds_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"tumblr_embeds",false]]]], true),
// unban_tag_admin_trending_like_weights => /admin/trending/like_weights/unban_tag(.:format)
  // function(options)
  unban_tag_admin_trending_like_weights_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"like_weights",false],[2,[7,"/",false],[2,[6,"unban_tag",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
unban_tag_admin_trending_like_weights_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"trending",false],[2,[7,"/",false],[2,[6,"like_weights",false],[2,[7,"/",false],[2,[6,"unban_tag",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// unblock_account_api_v2_channel => /api/v2/channels/:id/unblock_account(.:format)
  // function(id, options)
  unblock_account_api_v2_channel_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"unblock_account",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
unblock_account_api_v2_channel_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"unblock_account",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// universal_image => /universal_image(.:format)
  // function(options)
  universal_image_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"universal_image",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
universal_image_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"universal_image",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// unregistered_fb_friends_api_v2_invites => /api/v2/invites/unregistered_fb_friends(.:format)
  // function(options)
  unregistered_fb_friends_api_v2_invites_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"unregistered_fb_friends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
unregistered_fb_friends_api_v2_invites_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"invites",false],[2,[7,"/",false],[2,[6,"unregistered_fb_friends",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// unscheduled_api_editor_story_features => /api/editor/story_features/unscheduled(.:format)
  // function(options)
  unscheduled_api_editor_story_features_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"story_features",false],[2,[7,"/",false],[2,[6,"unscheduled",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
unscheduled_api_editor_story_features_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"story_features",false],[2,[7,"/",false],[2,[6,"unscheduled",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// unsubscribe_api_v2_community => /api/v2/communities/:id/unsubscribe(.:format)
  // function(id, options)
  unsubscribe_api_v2_community_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"communities",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"unsubscribe",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
unsubscribe_api_v2_community_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"communities",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"unsubscribe",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// unsubscribe_by_token => /unsubscribe/:unsubscribe_token(/:kind)(.:format)
  // function(unsubscribe_token, options)
  unsubscribe_by_token_path: Utils.route([["unsubscribe_token",true],["kind",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"unsubscribe",false],[2,[7,"/",false],[2,[3,"unsubscribe_token",false],[2,[1,[2,[7,"/",false],[3,"kind",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]),
unsubscribe_by_token_url: Utils.route([["unsubscribe_token",true],["kind",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"unsubscribe",false],[2,[7,"/",false],[2,[3,"unsubscribe_token",false],[2,[1,[2,[7,"/",false],[3,"kind",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]], true),
// unsubscribe_from_coubs_mail => /unsubscribe_from_coubs_mail/:unsubscribe_token(.:format)
  // function(unsubscribe_token, options)
  unsubscribe_from_coubs_mail_path: Utils.route([["unsubscribe_token",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"unsubscribe_from_coubs_mail",false],[2,[7,"/",false],[2,[3,"unsubscribe_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
unsubscribe_from_coubs_mail_url: Utils.route([["unsubscribe_token",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"unsubscribe_from_coubs_mail",false],[2,[7,"/",false],[2,[3,"unsubscribe_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// unsubscribe_success => /unsubscribe/success(.:format)
  // function(options)
  unsubscribe_success_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"unsubscribe",false],[2,[7,"/",false],[2,[6,"success",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
unsubscribe_success_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"unsubscribe",false],[2,[7,"/",false],[2,[6,"success",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// update_avatar_api_v2_users => /api/v2/users/update_avatar(.:format)
  // function(options)
  update_avatar_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"update_avatar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_avatar_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"update_avatar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// update_categories_editor_coub => /editor/coubs/:id/update_categories(.:format)
  // function(id, options)
  update_categories_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_categories_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// update_content_admin_best_tab => /admin/best_tabs/:id/update_content(.:format)
  // function(id, options)
  update_content_admin_best_tab_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_content",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_content_admin_best_tab_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"best_tabs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_content",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// update_description_api_v2_community => /api/v2/communities/:id/update_description(.:format)
  // function(id, options)
  update_description_api_v2_community_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"communities",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_description",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
update_description_api_v2_community_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"communities",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_description",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// update_features_api_editor_story => /api/editor/stories/:id/update_features(.:format)
  // function(id, options)
  update_features_api_editor_story_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_features",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
update_features_api_editor_story_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"stories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_features",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// update_flags_or_categories_editor_coub => /editor/coubs/:id/update_flags_or_categories(.:format)
  // function(id, options)
  update_flags_or_categories_editor_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_flags_or_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_flags_or_categories_editor_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"editor",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_flags_or_categories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// update_from_new_editor_api_v2_coub => /api/v2/coubs/:id/update_from_new_editor(.:format)
  // function(id, options)
  update_from_new_editor_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_from_new_editor",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
update_from_new_editor_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_from_new_editor",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// update_info_api_v2_channels => /api/v2/channels/update_info(.:format)
  // function(options)
  update_info_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"update_info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_info_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"update_info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// update_info_api_v2_coub => /api/v2/coubs/:id/update_info(.:format)
  // function(id, options)
  update_info_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
update_info_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// update_order_admin_categories => /admin/categories/update_order(.:format)
  // function(options)
  update_order_admin_categories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[6,"update_order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
update_order_admin_categories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[6,"update_order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// update_order_admin_channel_categories => /admin/channel_categories/update_order(.:format)
  // function(options)
  update_order_admin_channel_categories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channel_categories",false],[2,[7,"/",false],[2,[6,"update_order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
update_order_admin_channel_categories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"channel_categories",false],[2,[7,"/",false],[2,[6,"update_order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// update_order_admin_emojis => /admin/emojis/update_order(.:format)
  // function(options)
  update_order_admin_emojis_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[2,[7,"/",false],[2,[6,"update_order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
update_order_admin_emojis_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[2,[7,"/",false],[2,[6,"update_order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// update_order_admin_faq_categories => /admin/faq_categories/update_order(.:format)
  // function(options)
  update_order_admin_faq_categories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faq_categories",false],[2,[7,"/",false],[2,[6,"update_order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
update_order_admin_faq_categories_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faq_categories",false],[2,[7,"/",false],[2,[6,"update_order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// update_order_admin_faqs => /admin/faqs/update_order(.:format)
  // function(options)
  update_order_admin_faqs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[2,[7,"/",false],[2,[6,"update_order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
update_order_admin_faqs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[2,[7,"/",false],[2,[6,"update_order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// update_phone_number_api_v2_users => /api/v2/users/update_phone_number(.:format)
  // function(options)
  update_phone_number_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"update_phone_number",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_phone_number_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"update_phone_number",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// update_private_info_api_v2_users => /api/v2/users/update_private_info(.:format)
  // function(options)
  update_private_info_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"update_private_info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_private_info_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"update_private_info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// update_regular_info_api_v2_users => /api/v2/users/update_regular_info(.:format)
  // function(options)
  update_regular_info_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"update_regular_info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_regular_info_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"update_regular_info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// update_status_admin_faq => /admin/faqs/:id/update_status(.:format)
  // function(id, options)
  update_status_admin_faq_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_status_admin_faq_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"faqs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// update_video_title_raw_video => /raw_videos/:id/update_video_title(.:format)
  // function(id, options)
  update_video_title_raw_video_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_video_title",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
update_video_title_raw_video_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"raw_videos",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_video_title",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// update_views_count_api_v2_coubs => /api/v2/coubs/update_views_count(.:format)
  // function(options)
  update_views_count_api_v2_coubs_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"update_views_count",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_views_count_api_v2_coubs_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[6,"update_views_count",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// update_visibility_admin_emoji => /admin/emojis/:id/update_visibility(.:format)
  // function(id, options)
  update_visibility_admin_emoji_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_visibility",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
update_visibility_admin_emoji_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"admin",false],[2,[7,"/",false],[2,[6,"emojis",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_visibility",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// upload_audio_api_v2_coub => /api/v2/coubs/:id/upload_audio(.:format)
  // function(id, options)
  upload_audio_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"upload_audio",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
upload_audio_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"upload_audio",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// upload_avatar_api_v2_channels => /api/v2/channels/upload_avatar(.:format)
  // function(options)
  upload_avatar_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"upload_avatar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
upload_avatar_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"upload_avatar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// upload_video_api_v2_coub => /api/v2/coubs/:id/upload_video(.:format)
  // function(id, options)
  upload_video_api_v2_coub_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"upload_video",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
upload_video_api_v2_coub_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"upload_video",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]], true),
// uploaded_api_v2_rtmp_uploads => /api/v2/rtmp_uploads/uploaded(.:format)
  // function(options)
  uploaded_api_v2_rtmp_uploads_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"rtmp_uploads",false],[2,[7,"/",false],[2,[6,"uploaded",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
uploaded_api_v2_rtmp_uploads_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"rtmp_uploads",false],[2,[7,"/",false],[2,[6,"uploaded",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// user => /users/:id(.:format)
  // function(id, options)
  user_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
user_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// users => /users(.:format)
  // function(options)
  users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]], true),
// users_stats => /stats/users(.:format)
  // function(options)
  users_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
users_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// validate_password_users => /users/validate_password(.:format)
  // function(options)
  validate_password_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"validate_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
validate_password_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"validate_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// validate_permalink_api_v2_channels => /api/v2/channels/validate_permalink(.:format)
  // function(options)
  validate_permalink_api_v2_channels_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"validate_permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
validate_permalink_api_v2_channels_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"channels",false],[2,[7,"/",false],[2,[6,"validate_permalink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// verify_account_api_v2_users => /api/v2/users/verify_account(.:format)
  // function(options)
  verify_account_api_v2_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"verify_account",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
verify_account_api_v2_users_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"verify_account",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// verify_email => /users/verify_email/:confirmation_token(.:format)
  // function(confirmation_token, options)
  verify_email_path: Utils.route([["confirmation_token",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"verify_email",false],[2,[7,"/",false],[2,[3,"confirmation_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
verify_email_url: Utils.route([["confirmation_token",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"verify_email",false],[2,[7,"/",false],[2,[3,"confirmation_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]], true),
// verify_email_mail_test_page_index => /test_page/verify_email_mail
  // function(options)
  verify_email_mail_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"verify_email_mail",false]]]]),
verify_email_mail_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"verify_email_mail",false]]]], true),
// video_url_api_v2_external_downloads => /api/v2/external_downloads/video_url(.:format)
  // function(options)
  video_url_api_v2_external_downloads_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"external_downloads",false],[2,[7,"/",false],[2,[6,"video_url",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
video_url_api_v2_external_downloads_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"external_downloads",false],[2,[7,"/",false],[2,[6,"video_url",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]], true),
// view_coub_by_permalink => /view/:id(.:format)
  // function(id, options)
  view_coub_by_permalink_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"view",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
view_coub_by_permalink_url: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"view",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// views_stats => /stats/views(.:format)
  // function(options)
  views_stats_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"views",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
views_stats_url: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"stats",false],[2,[7,"/",false],[2,[6,"views",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]], true),
// vine_import_page => /vine
  // function(options)
  vine_import_page_path: Utils.route([], {}, [2,[7,"/",false],[6,"vine",false]]),
vine_import_page_url: Utils.route([], {}, [2,[7,"/",false],[6,"vine",false]], true),
// vk_embeds_test_page_index => /test_page/vk_embeds
  // function(options)
  vk_embeds_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"vk_embeds",false]]]]),
vk_embeds_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"vk_embeds",false]]]], true),
// vote_coub_api_v2_promo_best2016_category => /api/v2/promo/best2016/categories/:id/coubs/:coub_id/vote(.:format)
  // function(id, coub_id, options)
  vote_coub_api_v2_promo_best2016_category_path: Utils.route([["id",true],["coub_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2016",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"coub_id",false],[2,[7,"/",false],[2,[6,"vote",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]),
vote_coub_api_v2_promo_best2016_category_url: Utils.route([["id",true],["coub_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v2",false],[2,[7,"/",false],[2,[6,"promo",false],[2,[7,"/",false],[2,[6,"best2016",false],[2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"coubs",false],[2,[7,"/",false],[2,[3,"coub_id",false],[2,[7,"/",false],[2,[6,"vote",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]], true),
// web_pushes => /web_pushes/safari/:version/pushPackages/:website_push_id
  // function(version, website_push_id, options)
  web_pushes_path: Utils.route([["version",true],["website_push_id",true]], {}, [2,[7,"/",false],[2,[6,"web_pushes",false],[2,[7,"/",false],[2,[6,"safari",false],[2,[7,"/",false],[2,[3,"version",false],[2,[7,"/",false],[2,[6,"pushPackages",false],[2,[7,"/",false],[3,"website_push_id",false]]]]]]]]]]),
web_pushes_url: Utils.route([["version",true],["website_push_id",true]], {}, [2,[7,"/",false],[2,[6,"web_pushes",false],[2,[7,"/",false],[2,[6,"safari",false],[2,[7,"/",false],[2,[3,"version",false],[2,[7,"/",false],[2,[6,"pushPackages",false],[2,[7,"/",false],[3,"website_push_id",false]]]]]]]]]], true),
// web_pushes_chrome_subscribe => /web_pushes/chrome/subscribe
  // function(options)
  web_pushes_chrome_subscribe_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"web_pushes",false],[2,[7,"/",false],[2,[6,"chrome",false],[2,[7,"/",false],[6,"subscribe",false]]]]]]),
web_pushes_chrome_subscribe_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"web_pushes",false],[2,[7,"/",false],[2,[6,"chrome",false],[2,[7,"/",false],[6,"subscribe",false]]]]]], true),
// web_pushes_chrome_unsubscribe => /web_pushes/chrome/unsubscribe
  // function(options)
  web_pushes_chrome_unsubscribe_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"web_pushes",false],[2,[7,"/",false],[2,[6,"chrome",false],[2,[7,"/",false],[6,"unsubscribe",false]]]]]]),
web_pushes_chrome_unsubscribe_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"web_pushes",false],[2,[7,"/",false],[2,[6,"chrome",false],[2,[7,"/",false],[6,"unsubscribe",false]]]]]], true),
// web_pushes_latest => /web_pushes/latest
  // function(options)
  web_pushes_latest_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"web_pushes",false],[2,[7,"/",false],[6,"latest",false]]]]),
web_pushes_latest_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"web_pushes",false],[2,[7,"/",false],[6,"latest",false]]]], true),
// weekly => /weekly
  // function(options)
  weekly_path: Utils.route([], {}, [2,[7,"/",false],[6,"weekly",false]]),
weekly_url: Utils.route([], {}, [2,[7,"/",false],[6,"weekly",false]], true),
// weekly_digest_test_page_index => /test_page/weekly_digest
  // function(options)
  weekly_digest_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"weekly_digest",false]]]]),
weekly_digest_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"weekly_digest",false]]]], true),
// weekly_page => /weekly/:year/:week
  // function(year, week, options)
  weekly_page_path: Utils.route([["year",true],["week",true]], {}, [2,[7,"/",false],[2,[6,"weekly",false],[2,[7,"/",false],[2,[3,"year",false],[2,[7,"/",false],[3,"week",false]]]]]]),
weekly_page_url: Utils.route([["year",true],["week",true]], {}, [2,[7,"/",false],[2,[6,"weekly",false],[2,[7,"/",false],[2,[3,"year",false],[2,[7,"/",false],[3,"week",false]]]]]], true),
// wmgroup_test_page_index => /test_page/wmgroup
  // function(options)
  wmgroup_test_page_index_path: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"wmgroup",false]]]]),
wmgroup_test_page_index_url: Utils.route([], {}, [2,[7,"/",false],[2,[6,"test_page",false],[2,[7,"/",false],[6,"wmgroup",false]]]], true)}
;
      routes.configure = function(config) {
        return Utils.configure(config);
      };
      routes.config = function() {
        return Utils.config();
      };
      Object.defineProperty(routes, 'defaults', {
        get: function() {
          throw new Error("Routes" + ".defaults is removed. Use " + "Routes" + ".configure() instead.");
        },
        set: function(value) {}
      });
      routes.default_serializer = function(object, prefix) {
        return Utils.default_serializer(object, prefix);
      };
      return Utils.namespace(root, "Routes", routes);
    }
  };

  if (typeof define === "function" && define.amd) {
    define([], function() {
      return Utils.make();
    });
  } else {
    Utils.make();
  }

}).call(this);
// I18n.js
// =======
//
// This small library provides the Rails I18n API on the Javascript.
// You don't actually have to use Rails (or even Ruby) to use I18n.js.
// Just make sure you export all translations in an object like this:
//
//     I18n.translations.en = {
//       hello: "Hello World"
//     };
//
// See tests for specific formatting like numbers and dates.
//

// Using UMD pattern from
// https://github.com/umdjs/umd#regular-module
// `returnExports.js` version
;(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define("i18n", function(){ return factory(root);});
  } else if (typeof module === 'object' && module.exports) {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(root);
  } else {
    // Browser globals (root is window)
    root.I18n = factory(root);
  }
}(this, function(global) {
  "use strict";

  // Use previously defined object if exists in current scope
  var I18n = global && global.I18n || {};

  // Just cache the Array#slice function.
  var slice = Array.prototype.slice;

  // Apply number padding.
  var padding = function(number) {
    return ("0" + number.toString()).substr(-2);
  };

  // Improved toFixed number rounding function with support for unprecise floating points
  // JavaScript's standard toFixed function does not round certain numbers correctly (for example 0.105 with precision 2).
  var toFixed = function(number, precision) {
    return decimalAdjust('round', number, -precision).toFixed(precision);
  };

  // Is a given variable an object?
  // Borrowed from Underscore.js
  var isObject = function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object'
  };

  var isFunction = function(func) {
    var type = typeof func;
    return type === 'function'
  };

  // Check if value is different than undefined and null;
  var isSet = function(value) {
    return typeof(value) !== 'undefined' && value !== null;
  };

  // Is a given value an array?
  // Borrowed from Underscore.js
  var isArray = function(val) {
    if (Array.isArray) {
      return Array.isArray(val);
    };
    return Object.prototype.toString.call(val) === '[object Array]';
  };

  var isString = function(val) {
    return typeof value == 'string' || Object.prototype.toString.call(val) === '[object String]';
  };

  var isNumber = function(val) {
    return typeof val == 'number' || Object.prototype.toString.call(val) === '[object Number]';
  };

  var isBoolean = function(val) {
    return val === true || val === false;
  };

  var decimalAdjust = function(type, value, exp) {
    // If the exp is undefined or zero...
    if (typeof exp === 'undefined' || +exp === 0) {
      return Math[type](value);
    }
    value = +value;
    exp = +exp;
    // If the value is not a number or the exp is not an integer...
    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {
      return NaN;
    }
    // Shift
    value = value.toString().split('e');
    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));
    // Shift back
    value = value.toString().split('e');
    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));
  }

  var lazyEvaluate = function(message, scope) {
    if (isFunction(message)) {
      return message(scope);
    } else {
      return message;
    }
  }

  var merge = function (dest, obj) {
    var key, value;
    for (key in obj) if (obj.hasOwnProperty(key)) {
      value = obj[key];
      if (isString(value) || isNumber(value) || isBoolean(value) || isArray(value)) {
        dest[key] = value;
      } else {
        if (dest[key] == null) dest[key] = {};
        merge(dest[key], value);
      }
    }
    return dest;
  };

  // Set default days/months translations.
  var DATE = {
      day_names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
    , abbr_day_names: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
    , month_names: [null, "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    , abbr_month_names: [null, "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    , meridian: ["AM", "PM"]
  };

  // Set default number format.
  var NUMBER_FORMAT = {
      precision: 3
    , separator: "."
    , delimiter: ","
    , strip_insignificant_zeros: false
  };

  // Set default currency format.
  var CURRENCY_FORMAT = {
      unit: "$"
    , precision: 2
    , format: "%u%n"
    , sign_first: true
    , delimiter: ","
    , separator: "."
  };

  // Set default percentage format.
  var PERCENTAGE_FORMAT = {
      unit: "%"
    , precision: 3
    , format: "%n%u"
    , separator: "."
    , delimiter: ""
  };

  // Set default size units.
  var SIZE_UNITS = [null, "kb", "mb", "gb", "tb"];

  // Other default options
  var DEFAULT_OPTIONS = {
    // Set default locale. This locale will be used when fallback is enabled and
    // the translation doesn't exist in a particular locale.
      defaultLocale: "en"
    // Set the current locale to `en`.
    , locale: "en"
    // Set the translation key separator.
    , defaultSeparator: "."
    // Set the placeholder format. Accepts `{{placeholder}}` and `%{placeholder}`.
    , placeholder: /(?:\{\{|%\{)(.*?)(?:\}\}?)/gm
    // Set if engine should fallback to the default locale when a translation
    // is missing.
    , fallbacks: false
    // Set the default translation object.
    , translations: {}
    // Set missing translation behavior. 'message' will display a message
    // that the translation is missing, 'guess' will try to guess the string
    , missingBehaviour: 'message'
    // if you use missingBehaviour with 'message', but want to know that the
    // string is actually missing for testing purposes, you can prefix the
    // guessed string by setting the value here. By default, no prefix!
    , missingTranslationPrefix: ''
  };

  // Set default locale. This locale will be used when fallback is enabled and
  // the translation doesn't exist in a particular locale.
  I18n.reset = function() {
    var key;
    for (key in DEFAULT_OPTIONS) {
      this[key] = DEFAULT_OPTIONS[key];
    }
  };

  // Much like `reset`, but only assign options if not already assigned
  I18n.initializeOptions = function() {
    var key;
    for (key in DEFAULT_OPTIONS) if (!isSet(this[key])) {
      this[key] = DEFAULT_OPTIONS[key];
    }
  };
  I18n.initializeOptions();

  // Return a list of all locales that must be tried before returning the
  // missing translation message. By default, this will consider the inline option,
  // current locale and fallback locale.
  //
  //     I18n.locales.get("de-DE");
  //     // ["de-DE", "de", "en"]
  //
  // You can define custom rules for any locale. Just make sure you return a array
  // containing all locales.
  //
  //     // Default the Wookie locale to English.
  //     I18n.locales["wk"] = function(locale) {
  //       return ["en"];
  //     };
  //
  I18n.locales = {};

  // Retrieve locales based on inline locale, current locale or default to
  // I18n's detection.
  I18n.locales.get = function(locale) {
    var result = this[locale] || this[I18n.locale] || this["default"];

    if (isFunction(result)) {
      result = result(locale);
    }

    if (isArray(result) === false) {
      result = [result];
    }

    return result;
  };

  // The default locale list.
  I18n.locales["default"] = function(locale) {
    var locales = []
      , list = []
    ;

    // Handle the inline locale option that can be provided to
    // the `I18n.t` options.
    if (locale) {
      locales.push(locale);
    }

    // Add the current locale to the list.
    if (!locale && I18n.locale) {
      locales.push(I18n.locale);
    }

    // Add the default locale if fallback strategy is enabled.
    if (I18n.fallbacks && I18n.defaultLocale) {
      locales.push(I18n.defaultLocale);
    }

    // Locale code format 1:
    // According to RFC4646 (http://www.ietf.org/rfc/rfc4646.txt)
    // language codes for Traditional Chinese should be `zh-Hant`
    //
    // But due to backward compatibility
    // We use older version of IETF language tag
    // @see http://www.w3.org/TR/html401/struct/dirlang.html
    // @see http://en.wikipedia.org/wiki/IETF_language_tag
    //
    // Format: `language-code = primary-code ( "-" subcode )*`
    //
    // primary-code uses ISO639-1
    // @see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
    // @see http://www.iso.org/iso/home/standards/language_codes.htm
    //
    // subcode uses ISO 3166-1 alpha-2
    // @see http://en.wikipedia.org/wiki/ISO_3166
    // @see http://www.iso.org/iso/country_codes.htm
    //
    // @note
    //   subcode can be in upper case or lower case
    //   defining it in upper case is a convention only


    // Locale code format 2:
    // Format: `code = primary-code ( "-" region-code )*`
    // primary-code uses ISO 639-1
    // script-code uses ISO 15924
    // region-code uses ISO 3166-1 alpha-2
    // Example: zh-Hant-TW, en-HK, zh-Hant-CN
    //
    // It is similar to RFC4646 (or actually the same),
    // but seems to be limited to language, script, region

    // Compute each locale with its country code.
    // So this will return an array containing
    // `de-DE` and `de`
    // or
    // `zh-hans-tw`, `zh-hans`, `zh`
    // locales.
    locales.forEach(function(locale) {
      var localeParts = locale.split("-");
      var firstFallback = null;
      var secondFallback = null;
      if (localeParts.length === 3) {
        firstFallback = [
          localeParts[0],
          localeParts[1]
        ].join("-");
        secondFallback = localeParts[0];
      }
      else if (localeParts.length === 2) {
        firstFallback = localeParts[0];
      }

      if (list.indexOf(locale) === -1) {
        list.push(locale);
      }

      if (! I18n.fallbacks) {
        return;
      }

      [
        firstFallback,
        secondFallback
      ].forEach(function(nullableFallbackLocale) {
        // We don't want null values
        if (typeof nullableFallbackLocale === "undefined") { return; }
        if (nullableFallbackLocale === null) { return; }
        // We don't want duplicate values
        //
        // Comparing with `locale` first is faster than
        // checking whether value's presence in the list
        if (nullableFallbackLocale === locale) { return; }
        if (list.indexOf(nullableFallbackLocale) !== -1) { return; }

        list.push(nullableFallbackLocale);
      });
    });

    // No locales set? English it is.
    if (!locales.length) {
      locales.push("en");
    }

    return list;
  };

  // Hold pluralization rules.
  I18n.pluralization = {};

  // Return the pluralizer for a specific locale.
  // If no specify locale is found, then I18n's default will be used.
  I18n.pluralization.get = function(locale) {
    return this[locale] || this[I18n.locale] || this["default"];
  };

  // The default pluralizer rule.
  // It detects the `zero`, `one`, and `other` scopes.
  I18n.pluralization["default"] = function(count) {
    switch (count) {
      case 0: return ["zero", "other"];
      case 1: return ["one"];
      default: return ["other"];
    }
  };

  // Return current locale. If no locale has been set, then
  // the current locale will be the default locale.
  I18n.currentLocale = function() {
    return this.locale || this.defaultLocale;
  };

  // Check if value is different than undefined and null;
  I18n.isSet = isSet;

  // Find and process the translation using the provided scope and options.
  // This is used internally by some functions and should not be used as an
  // public API.
  I18n.lookup = function(scope, options) {
    options = options || {}

    var locales = this.locales.get(options.locale).slice()
      , requestedLocale = locales[0]
      , locale
      , scopes
      , fullScope
      , translations
    ;

    fullScope = this.getFullScope(scope, options);

    while (locales.length) {
      locale = locales.shift();
      scopes = fullScope.split(this.defaultSeparator);
      translations = this.translations[locale];

      if (!translations) {
        continue;
      }
      while (scopes.length) {
        translations = translations[scopes.shift()];

        if (translations === undefined || translations === null) {
          break;
        }
      }

      if (translations !== undefined && translations !== null) {
        return translations;
      }
    }

    if (isSet(options.defaultValue)) {
      return lazyEvaluate(options.defaultValue, scope);
    }
  };

  // lookup pluralization rule key into translations
  I18n.pluralizationLookupWithoutFallback = function(count, locale, translations) {
    var pluralizer = this.pluralization.get(locale)
      , pluralizerKeys = pluralizer(count)
      , pluralizerKey
      , message;

    if (isObject(translations)) {
      while (pluralizerKeys.length) {
        pluralizerKey = pluralizerKeys.shift();
        if (isSet(translations[pluralizerKey])) {
          message = translations[pluralizerKey];
          break;
        }
      }
    }

    return message;
  };

  // Lookup dedicated to pluralization
  I18n.pluralizationLookup = function(count, scope, options) {
    options = options || {}
    var locales = this.locales.get(options.locale).slice()
      , requestedLocale = locales[0]
      , locale
      , scopes
      , translations
      , message
    ;
    scope = this.getFullScope(scope, options);

    while (locales.length) {
      locale = locales.shift();
      scopes = scope.split(this.defaultSeparator);
      translations = this.translations[locale];

      if (!translations) {
        continue;
      }

      while (scopes.length) {
        translations = translations[scopes.shift()];
        if (!isObject(translations)) {
          break;
        }
        if (scopes.length == 0) {
          message = this.pluralizationLookupWithoutFallback(count, locale, translations);
        }
      }
      if (message != null && message != undefined) {
        break;
      }
    }

    if (message == null || message == undefined) {
      if (isSet(options.defaultValue)) {
        if (isObject(options.defaultValue)) {
          message = this.pluralizationLookupWithoutFallback(count, options.locale, options.defaultValue);
        } else {
          message = options.defaultValue;
        }
        translations = options.defaultValue;
      }
    }

    return { message: message, translations: translations };
  };

  // Rails changed the way the meridian is stored.
  // It started with `date.meridian` returning an array,
  // then it switched to `time.am` and `time.pm`.
  // This function abstracts this difference and returns
  // the correct meridian or the default value when none is provided.
  I18n.meridian = function() {
    var time = this.lookup("time");
    var date = this.lookup("date");

    if (time && time.am && time.pm) {
      return [time.am, time.pm];
    } else if (date && date.meridian) {
      return date.meridian;
    } else {
      return DATE.meridian;
    }
  };

  // Merge serveral hash options, checking if value is set before
  // overwriting any value. The precedence is from left to right.
  //
  //     I18n.prepareOptions({name: "John Doe"}, {name: "Mary Doe", role: "user"});
  //     #=> {name: "John Doe", role: "user"}
  //
  I18n.prepareOptions = function() {
    var args = slice.call(arguments)
      , options = {}
      , subject
    ;

    while (args.length) {
      subject = args.shift();

      if (typeof(subject) != "object") {
        continue;
      }

      for (var attr in subject) {
        if (!subject.hasOwnProperty(attr)) {
          continue;
        }

        if (isSet(options[attr])) {
          continue;
        }

        options[attr] = subject[attr];
      }
    }

    return options;
  };

  // Generate a list of translation options for default fallbacks.
  // `defaultValue` is also deleted from options as it is returned as part of
  // the translationOptions array.
  I18n.createTranslationOptions = function(scope, options) {
    var translationOptions = [{scope: scope}];

    // Defaults should be an array of hashes containing either
    // fallback scopes or messages
    if (isSet(options.defaults)) {
      translationOptions = translationOptions.concat(options.defaults);
    }

    // Maintain support for defaultValue. Since it is always a message
    // insert it in to the translation options as such.
    if (isSet(options.defaultValue)) {
      translationOptions.push({ message: options.defaultValue });
    }

    return translationOptions;
  };

  // Translate the given scope with the provided options.
  I18n.translate = function(scope, options) {
    options = options || {}

    var translationOptions = this.createTranslationOptions(scope, options);

    var translation;

    var optionsWithoutDefault = this.prepareOptions(options)
    delete optionsWithoutDefault.defaultValue

    // Iterate through the translation options until a translation
    // or message is found.
    var translationFound =
      translationOptions.some(function(translationOption) {
        if (isSet(translationOption.scope)) {
          translation = this.lookup(translationOption.scope, optionsWithoutDefault);
        } else if (isSet(translationOption.message)) {
          translation = lazyEvaluate(translationOption.message, scope);
        }

        if (translation !== undefined && translation !== null) {
          return true;
        }
      }, this);

    if (!translationFound) {
      return this.missingTranslation(scope, options);
    }

    if (typeof(translation) === "string") {
      translation = this.interpolate(translation, options);
    } else if (isArray(translation)) {
      translation = translation.map(function(t) {
        return this.interpolate(t, options);
      }, this);
    } else if (isObject(translation) && isSet(options.count)) {
      translation = this.pluralize(options.count, scope, options);
    }

    return translation;
  };

  // This function interpolates the all variables in the given message.
  I18n.interpolate = function(message, options) {
    options = options || {}
    var matches = message.match(this.placeholder)
      , placeholder
      , value
      , name
      , regex
    ;

    if (!matches) {
      return message;
    }

    var value;

    while (matches.length) {
      placeholder = matches.shift();
      name = placeholder.replace(this.placeholder, "$1");

      if (isSet(options[name])) {
        value = options[name].toString().replace(/\$/gm, "_#$#_");
      } else if (name in options) {
        value = this.nullPlaceholder(placeholder, message, options);
      } else {
        value = this.missingPlaceholder(placeholder, message, options);
      }

      regex = new RegExp(placeholder.replace(/\{/gm, "\\{").replace(/\}/gm, "\\}"));
      message = message.replace(regex, value);
    }

    return message.replace(/_#\$#_/g, "$");
  };

  // Pluralize the given scope using the `count` value.
  // The pluralized translation may have other placeholders,
  // which will be retrieved from `options`.
  I18n.pluralize = function(count, scope, options) {
    options = this.prepareOptions({count: String(count)}, options)
    var pluralizer, message, result;

    result = this.pluralizationLookup(count, scope, options);
    if (result.translations == undefined || result.translations == null) {
      return this.missingTranslation(scope, options);
    }

    if (result.message != undefined && result.message != null) {
      return this.interpolate(result.message, options);
    }
    else {
      pluralizer = this.pluralization.get(options.locale);
      return this.missingTranslation(scope + '.' + pluralizer(count)[0], options);
    }
  };

  // Return a missing translation message for the given parameters.
  I18n.missingTranslation = function(scope, options) {
    //guess intended string
    if(this.missingBehaviour == 'guess'){
      //get only the last portion of the scope
      var s = scope.split('.').slice(-1)[0];
      //replace underscore with space && camelcase with space and lowercase letter
      return (this.missingTranslationPrefix.length > 0 ? this.missingTranslationPrefix : '') +
          s.replace('_',' ').replace(/([a-z])([A-Z])/g,
          function(match, p1, p2) {return p1 + ' ' + p2.toLowerCase()} );
    }

    var localeForTranslation = (options != null && options.locale != null) ? options.locale : this.currentLocale();
    var fullScope           = this.getFullScope(scope, options);
    var fullScopeWithLocale = [localeForTranslation, fullScope].join(this.defaultSeparator);

    return '[missing "' + fullScopeWithLocale + '" translation]';
  };

  // Return a missing placeholder message for given parameters
  I18n.missingPlaceholder = function(placeholder, message, options) {
    return "[missing " + placeholder + " value]";
  };

  I18n.nullPlaceholder = function() {
    return I18n.missingPlaceholder.apply(I18n, arguments);
  };

  // Format number using localization rules.
  // The options will be retrieved from the `number.format` scope.
  // If this isn't present, then the following options will be used:
  //
  // - `precision`: `3`
  // - `separator`: `"."`
  // - `delimiter`: `","`
  // - `strip_insignificant_zeros`: `false`
  //
  // You can also override these options by providing the `options` argument.
  //
  I18n.toNumber = function(number, options) {
    options = this.prepareOptions(
        options
      , this.lookup("number.format")
      , NUMBER_FORMAT
    );

    var negative = number < 0
      , string = toFixed(Math.abs(number), options.precision).toString()
      , parts = string.split(".")
      , precision
      , buffer = []
      , formattedNumber
      , format = options.format || "%n"
      , sign = negative ? "-" : ""
    ;

    number = parts[0];
    precision = parts[1];

    while (number.length > 0) {
      buffer.unshift(number.substr(Math.max(0, number.length - 3), 3));
      number = number.substr(0, number.length -3);
    }

    formattedNumber = buffer.join(options.delimiter);

    if (options.strip_insignificant_zeros && precision) {
      precision = precision.replace(/0+$/, "");
    }

    if (options.precision > 0 && precision) {
      formattedNumber += options.separator + precision;
    }

    if (options.sign_first) {
      format = "%s" + format;
    }
    else {
      format = format.replace("%n", "%s%n");
    }

    formattedNumber = format
      .replace("%u", options.unit)
      .replace("%n", formattedNumber)
      .replace("%s", sign)
    ;

    return formattedNumber;
  };

  // Format currency with localization rules.
  // The options will be retrieved from the `number.currency.format` and
  // `number.format` scopes, in that order.
  //
  // Any missing option will be retrieved from the `I18n.toNumber` defaults and
  // the following options:
  //
  // - `unit`: `"$"`
  // - `precision`: `2`
  // - `format`: `"%u%n"`
  // - `delimiter`: `","`
  // - `separator`: `"."`
  //
  // You can also override these options by providing the `options` argument.
  //
  I18n.toCurrency = function(number, options) {
    options = this.prepareOptions(
        options
      , this.lookup("number.currency.format")
      , this.lookup("number.format")
      , CURRENCY_FORMAT
    );

    return this.toNumber(number, options);
  };

  // Localize several values.
  // You can provide the following scopes: `currency`, `number`, or `percentage`.
  // If you provide a scope that matches the `/^(date|time)/` regular expression
  // then the `value` will be converted by using the `I18n.toTime` function.
  //
  // It will default to the value's `toString` function.
  //
  I18n.localize = function(scope, value, options) {
    options || (options = {});

    switch (scope) {
      case "currency":
        return this.toCurrency(value);
      case "number":
        scope = this.lookup("number.format");
        return this.toNumber(value, scope);
      case "percentage":
        return this.toPercentage(value);
      default:
        var localizedValue;

        if (scope.match(/^(date|time)/)) {
          localizedValue = this.toTime(scope, value);
        } else {
          localizedValue = value.toString();
        }

        return this.interpolate(localizedValue, options);
    }
  };

  // Parse a given `date` string into a JavaScript Date object.
  // This function is time zone aware.
  //
  // The following string formats are recognized:
  //
  //    yyyy-mm-dd
  //    yyyy-mm-dd[ T]hh:mm::ss
  //    yyyy-mm-dd[ T]hh:mm::ss
  //    yyyy-mm-dd[ T]hh:mm::ssZ
  //    yyyy-mm-dd[ T]hh:mm::ss+0000
  //    yyyy-mm-dd[ T]hh:mm::ss+00:00
  //    yyyy-mm-dd[ T]hh:mm::ss.123Z
  //
  I18n.parseDate = function(date) {
    var matches, convertedDate, fraction;
    // we have a date, so just return it.
    if (typeof(date) == "object") {
      return date;
    };

    matches = date.toString().match(/(\d{4})-(\d{2})-(\d{2})(?:[ T](\d{2}):(\d{2}):(\d{2})([\.,]\d{1,3})?)?(Z|\+00:?00)?/);

    if (matches) {
      for (var i = 1; i <= 6; i++) {
        matches[i] = parseInt(matches[i], 10) || 0;
      }

      // month starts on 0
      matches[2] -= 1;

      fraction = matches[7] ? 1000 * ("0" + matches[7]) : null;

      if (matches[8]) {
        convertedDate = new Date(Date.UTC(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction));
      } else {
        convertedDate = new Date(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction);
      }
    } else if (typeof(date) == "number") {
      // UNIX timestamp
      convertedDate = new Date();
      convertedDate.setTime(date);
    } else if (date.match(/([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\d+) (\d+:\d+:\d+) ([+-]\d+) (\d+)/)) {
      // This format `Wed Jul 20 13:03:39 +0000 2011` is parsed by
      // webkit/firefox, but not by IE, so we must parse it manually.
      convertedDate = new Date();
      convertedDate.setTime(Date.parse([
        RegExp.$1, RegExp.$2, RegExp.$3, RegExp.$6, RegExp.$4, RegExp.$5
      ].join(" ")));
    } else if (date.match(/\d+ \d+:\d+:\d+ [+-]\d+ \d+/)) {
      // a valid javascript format with timezone info
      convertedDate = new Date();
      convertedDate.setTime(Date.parse(date));
    } else {
      // an arbitrary javascript string
      convertedDate = new Date();
      convertedDate.setTime(Date.parse(date));
    }

    return convertedDate;
  };

  // Formats time according to the directives in the given format string.
  // The directives begins with a percent (%) character. Any text not listed as a
  // directive will be passed through to the output string.
  //
  // The accepted formats are:
  //
  //     %a  - The abbreviated weekday name (Sun)
  //     %A  - The full weekday name (Sunday)
  //     %b  - The abbreviated month name (Jan)
  //     %B  - The full month name (January)
  //     %c  - The preferred local date and time representation
  //     %d  - Day of the month (01..31)
  //     %-d - Day of the month (1..31)
  //     %H  - Hour of the day, 24-hour clock (00..23)
  //     %-H - Hour of the day, 24-hour clock (0..23)
  //     %I  - Hour of the day, 12-hour clock (01..12)
  //     %-I - Hour of the day, 12-hour clock (1..12)
  //     %m  - Month of the year (01..12)
  //     %-m - Month of the year (1..12)
  //     %M  - Minute of the hour (00..59)
  //     %-M - Minute of the hour (0..59)
  //     %p  - Meridian indicator (AM  or  PM)
  //     %S  - Second of the minute (00..60)
  //     %-S - Second of the minute (0..60)
  //     %w  - Day of the week (Sunday is 0, 0..6)
  //     %y  - Year without a century (00..99)
  //     %-y - Year without a century (0..99)
  //     %Y  - Year with century
  //     %z  - Timezone offset (+0545)
  //
  I18n.strftime = function(date, format) {
    var options = this.lookup("date")
      , meridianOptions = I18n.meridian()
    ;

    if (!options) {
      options = {};
    }

    options = this.prepareOptions(options, DATE);

    if (isNaN(date.getTime())) {
      throw new Error('I18n.strftime() requires a valid date object, but received an invalid date.');
    }

    var weekDay = date.getDay()
      , day = date.getDate()
      , year = date.getFullYear()
      , month = date.getMonth() + 1
      , hour = date.getHours()
      , hour12 = hour
      , meridian = hour > 11 ? 1 : 0
      , secs = date.getSeconds()
      , mins = date.getMinutes()
      , offset = date.getTimezoneOffset()
      , absOffsetHours = Math.floor(Math.abs(offset / 60))
      , absOffsetMinutes = Math.abs(offset) - (absOffsetHours * 60)
      , timezoneoffset = (offset > 0 ? "-" : "+") +
          (absOffsetHours.toString().length < 2 ? "0" + absOffsetHours : absOffsetHours) +
          (absOffsetMinutes.toString().length < 2 ? "0" + absOffsetMinutes : absOffsetMinutes)
    ;

    if (hour12 > 12) {
      hour12 = hour12 - 12;
    } else if (hour12 === 0) {
      hour12 = 12;
    }

    format = format.replace("%a", options.abbr_day_names[weekDay]);
    format = format.replace("%A", options.day_names[weekDay]);
    format = format.replace("%b", options.abbr_month_names[month]);
    format = format.replace("%B", options.month_names[month]);
    format = format.replace("%d", padding(day));
    format = format.replace("%e", day);
    format = format.replace("%-d", day);
    format = format.replace("%H", padding(hour));
    format = format.replace("%-H", hour);
    format = format.replace("%I", padding(hour12));
    format = format.replace("%-I", hour12);
    format = format.replace("%m", padding(month));
    format = format.replace("%-m", month);
    format = format.replace("%M", padding(mins));
    format = format.replace("%-M", mins);
    format = format.replace("%p", meridianOptions[meridian]);
    format = format.replace("%S", padding(secs));
    format = format.replace("%-S", secs);
    format = format.replace("%w", weekDay);
    format = format.replace("%y", padding(year));
    format = format.replace("%-y", padding(year).replace(/^0+/, ""));
    format = format.replace("%Y", year);
    format = format.replace("%z", timezoneoffset);

    return format;
  };

  // Convert the given dateString into a formatted date.
  I18n.toTime = function(scope, dateString) {
    var date = this.parseDate(dateString)
      , format = this.lookup(scope)
    ;

    if (date.toString().match(/invalid/i)) {
      return date.toString();
    }

    if (!format) {
      return date.toString();
    }

    return this.strftime(date, format);
  };

  // Convert a number into a formatted percentage value.
  I18n.toPercentage = function(number, options) {
    options = this.prepareOptions(
        options
      , this.lookup("number.percentage.format")
      , this.lookup("number.format")
      , PERCENTAGE_FORMAT
    );

    return this.toNumber(number, options);
  };

  // Convert a number into a readable size representation.
  I18n.toHumanSize = function(number, options) {
    var kb = 1024
      , size = number
      , iterations = 0
      , unit
      , precision
    ;

    while (size >= kb && iterations < 4) {
      size = size / kb;
      iterations += 1;
    }

    if (iterations === 0) {
      unit = this.t("number.human.storage_units.units.byte", {count: size});
      precision = 0;
    } else {
      unit = this.t("number.human.storage_units.units." + SIZE_UNITS[iterations]);
      precision = (size - Math.floor(size) === 0) ? 0 : 1;
    }

    options = this.prepareOptions(
        options
      , {unit: unit, precision: precision, format: "%n%u", delimiter: ""}
    );

    return this.toNumber(size, options);
  };

  I18n.getFullScope = function(scope, options) {
    options = options || {}

    // Deal with the scope as an array.
    if (isArray(scope)) {
      scope = scope.join(this.defaultSeparator);
    }

    // Deal with the scope option provided through the second argument.
    //
    //    I18n.t('hello', {scope: 'greetings'});
    //
    if (options.scope) {
      scope = [options.scope, scope].join(this.defaultSeparator);
    }

    return scope;
  };
  /**
   * Merge obj1 with obj2 (shallow merge), without modifying inputs
   * @param {Object} obj1
   * @param {Object} obj2
   * @returns {Object} Merged values of obj1 and obj2
   *
   * In order to support ES3, `Object.prototype.hasOwnProperty.call` is used
   * Idea is from:
   * https://stackoverflow.com/questions/8157700/object-has-no-hasownproperty-method-i-e-its-undefined-ie8
   */
  I18n.extend = function ( obj1, obj2 ) {
    if (typeof(obj1) === "undefined" && typeof(obj2) === "undefined") {
      return {};
    }
    return merge(obj1, obj2);
  };

  // Set aliases, so we can save some typing.
  I18n.t = I18n.translate;
  I18n.l = I18n.localize;
  I18n.p = I18n.pluralize;

  return I18n;
}));
// https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf
if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {
        "use strict";
        if (this == null) {
            throw new TypeError();
        }
        var t = Object(this);
        var len = t.length >>> 0;
        if (len === 0) {
            return -1;
        }
        var n = 0;
        if (arguments.length > 1) {
            n = Number(arguments[1]);
            if (n != n) { // shortcut for verifying if it's NaN
                n = 0;
            } else if (n != 0 && n != Infinity && n != -Infinity) {
                n = (n > 0 || -1) * Math.floor(Math.abs(n));
            }
        }
        if (n >= len) {
            return -1;
        }
        var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);
        for (; k < len; k++) {
            if (k in t && t[k] === searchElement) {
                return k;
            }
        }
        return -1;
    }
}

// Production steps of ECMA-262, Edition 5, 15.4.4.18
// Reference: http://es5.github.com/#x15.4.4.18
// https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/forEach
if ( !Array.prototype.forEach ) {

  Array.prototype.forEach = function forEach( callback, thisArg ) {

    var T, k;

    if ( this == null ) {
      throw new TypeError( "this is null or not defined" );
    }

    // 1. Let O be the result of calling ToObject passing the |this| value as the argument.
    var O = Object(this);

    // 2. Let lenValue be the result of calling the Get internal method of O with the argument "length".
    // 3. Let len be ToUint32(lenValue).
    var len = O.length >>> 0; // Hack to convert O.length to a UInt32

    // 4. If IsCallable(callback) is false, throw a TypeError exception.
    // See: http://es5.github.com/#x9.11
    if ( {}.toString.call(callback) !== "[object Function]" ) {
      throw new TypeError( callback + " is not a function" );
    }

    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.
    if ( thisArg ) {
      T = thisArg;
    }

    // 6. Let k be 0
    k = 0;

    // 7. Repeat, while k < len
    while( k < len ) {

      var kValue;

      // a. Let Pk be ToString(k).
      //   This is implicit for LHS operands of the in operator
      // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.
      //   This step can be combined with c
      // c. If kPresent is true, then
      if ( Object.prototype.hasOwnProperty.call(O, k) ) {

        // i. Let kValue be the result of calling the Get internal method of O with argument Pk.
        kValue = O[ k ];

        // ii. Call the Call internal method of callback with T as the this value and
        // argument list containing kValue, k, and O.
        callback.call( T, kValue, k, O );
      }
      // d. Increase k by 1.
      k++;
    }
    // 8. return undefined
  };
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some
if (!Array.prototype.some)
{
  Array.prototype.some = function(fun /*, thisArg */)
  {
    'use strict';

    if (this === void 0 || this === null)
      throw new TypeError();

    var t = Object(this);
    var len = t.length >>> 0;
    if (typeof fun !== 'function')
      throw new TypeError();

    var thisArg = arguments.length >= 2 ? arguments[1] : void 0;
    for (var i = 0; i < len; i++)
    {
      if (i in t && fun.call(thisArg, t[i], i, t))
        return true;
    }

    return false;
  };
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
if (!Array.prototype.map) {

  Array.prototype.map = function(callback/*, thisArg*/) {

    var T, A, k;

    if (this == null) {
      throw new TypeError('this is null or not defined');
    }

    // 1. Let O be the result of calling ToObject passing the |this| 
    //    value as the argument.
    var O = Object(this);

    // 2. Let lenValue be the result of calling the Get internal 
    //    method of O with the argument "length".
    // 3. Let len be ToUint32(lenValue).
    var len = O.length >>> 0;

    // 4. If IsCallable(callback) is false, throw a TypeError exception.
    // See: http://es5.github.com/#x9.11
    if (typeof callback !== 'function') {
      throw new TypeError(callback + ' is not a function');
    }

    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.
    if (arguments.length > 1) {
      T = arguments[1];
    }

    // 6. Let A be a new array created as if by the expression new Array(len) 
    //    where Array is the standard built-in constructor with that name and 
    //    len is the value of len.
    A = new Array(len);

    // 7. Let k be 0
    k = 0;

    // 8. Repeat, while k < len
    while (k < len) {

      var kValue, mappedValue;

      // a. Let Pk be ToString(k).
      //   This is implicit for LHS operands of the in operator
      // b. Let kPresent be the result of calling the HasProperty internal 
      //    method of O with argument Pk.
      //   This step can be combined with c
      // c. If kPresent is true, then
      if (k in O) {

        // i. Let kValue be the result of calling the Get internal 
        //    method of O with argument Pk.
        kValue = O[k];

        // ii. Let mappedValue be the result of calling the Call internal 
        //     method of callback with T as the this value and argument 
        //     list containing kValue, k, and O.
        mappedValue = callback.call(T, kValue, k, O);

        // iii. Call the DefineOwnProperty internal method of A with arguments
        // Pk, Property Descriptor
        // { Value: mappedValue,
        //   Writable: true,
        //   Enumerable: true,
        //   Configurable: true },
        // and false.

        // In browsers that support Object.defineProperty, use the following:
        // Object.defineProperty(A, k, {
        //   value: mappedValue,
        //   writable: true,
        //   enumerable: true,
        //   configurable: true
        // });

        // For best browser support, use the following:
        A[k] = mappedValue;
      }
      // d. Increase k by 1.
      k++;
    }

    // 9. return A
    return A;
  };
}
;

// Using UMD pattern from
// https://github.com/umdjs/umd#regular-module
// `returnExports.js` version
;(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(["i18n"], factory);
  } else if (typeof module === 'object' && module.exports) {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    factory(require("i18n"));
  } else {
    // Browser globals (root is window)
    factory(root.I18n);
  }
}(this, function(I18n) {
  "use strict";

  I18n.translations = {"en":{"about_page":{"description":"Good old remix culture put to next level."},"activemodel":{"attributes":{"bug_report":{"report_text":"Report text","user_email":"User email"},"coub/coub_of_the_day":{"at":"At","id":"Id","permalink":"Permalink"},"profile_editing":{"email":"Email","permalink":"Permalink"},"promo/user_feedback":{"email":"Email","message":"Message"}},"errors":{"messages":{"invalid":"is invalid","invalid_event":"cannot transition when %{state}","invalid_transition":"cannot transition via \"%{event}\""},"models":{"bug_report":{"attributes":{"report_text":{"blank":"can't be blank"},"user_email":{"blank":"can't be blank","invalid":"is invalid"}}},"coub/coub_of_the_day":{"attributes":{"id":{"blank":"can't be blank"},"permalink":{"blank":"can't be blank"}}},"profile_editing":{"attributes":{"email":{"blank":"can't be blank"},"permalink":{"blank":"can't be blank"}}},"promo/user_feedback":{"attributes":{"email":{"blank":"can't be blank","invalid":"is invalid"},"message":{"blank":"can't be blank"}}}}},"models":{"bug_report":"Bug report","coub/coub_of_the_day":"Coub of the day","profile_editing":"Profile editing","promo/user_feedback":"User feedback"}},"activerecord":{"attributes":{"abuse":{"claim_text":"Claim text"},"application":{"company_url":"Company url","name":"Name","redirect_uri":"Redirect uri","url":"Url"},"audio_track":{"name":"Name","title":"Title"},"audio_track/cutted":{"title":"Title"},"audio_upload":{"state":"State"},"authentication":{"auth_secret":"Auth secret","auth_token":"Auth token","channel_id":"Channel","extended_uid":"Extended uid","provider":"Provider","provider_data":"Provider data"},"background":{"channel":"Channel","user":"User"},"category":{"permalink":"Permalink","permalinks":"Permalinks","special":"Special","title":"Title","visible":"Visible"},"cdn_logs_file":{"date":"Date","file_name":"File name"},"cdn_logs_files":{"file_name":"File name"},"channel":{"category":"Category","contacts":"Contacts","description":"Description","homepage":"Homepage","is_promo_account":"Is promo account","permalink":"Permalink","popular_banned":"Popular banned","rank":"Rank","title":"Title","tumblr":"Tumblr","user_id":"User","vimeo":"Vimeo","visibility":"Visibility","youtube":"Youtube"},"channel_list":{"channel":"Channel","channel_permalink":"Channel permalink","custom_title":"Custom title","kind":"Kind"},"channel_recommendation":{"channel_id":"Channel"},"channel_tag":{"tag_id":"Tag"},"chrome_pushes_subscription":{"token":"Token"},"coub/delayed_coub":{"user":"User"},"coub/delayed_recoub":{"channel_id":"Channel","recoub_to":"Recoub to","user":"User","user_id":"User"},"coub/montage":{"user":"User"},"coub/recoub":{"channel":"Channel","channel_id":"Channel","permalink":"Permalink","recoub_to":"Recoub to","user":"User","user_id":"User"},"coub/simple":{"channel":"Channel","finalization_data":"Finalization data","hidden_tags":"Hidden tags","image":"Image","name":"Name","original_visibility_type":"Original visibility type","permalink":"Permalink","quote":"Quote","raw_video":"Raw video","recoubs":"Recoubs","segments":"Segments","sorting_key":"Sorting key","source":"Source","tags":"Tags","timeline_pic":"Timeline pic","title":"Title","user":"User","video_temp_upload_id":"Video temp upload","visibility_type":"Visibility type"},"coub/temp":{"channel":"Channel","sound_enabled":"Sound enabled","title":"Title","user":"User"},"coub_category":{"coub_id":"Coub"},"coub_like":{"coub_id":"Coub"},"coub_segment":{"coub_id":"Coub","segment_id":"Segment","segment_index":"Segment index"},"developer/application":{"name":"Name","redirect_uri":"Redirect URI"},"doorkeeper/application":{"name":"Name","redirect_uri":"Redirect URI"},"download/facebook":{"state":"State"},"download/gfycat":{"state":"State"},"download/instagram":{"state":"State"},"download/live_leak":{"state":"State"},"download/twitter":{"state":"State"},"download/vimeo":{"state":"State"},"download/vine":{"state":"State"},"download/vk":{"state":"State"},"download/youtube":{"state":"State","state_event":"State event"},"editor_background":{"channel_id":"Channel","coub_cover":"Coub cover","end":"End","end_date":"End date","ex_ussr_safe":"Ex ussr safe","global_safe":"Global safe","image":"Image","is_white_header":"Is white header","is_white_headerr":"Is white headerr","link":"Link (Кликовый пиксель)","priority":"Priority","start":"Start","start_date":"Start date","stats_pixels":"Stats pixels (Пискели на просмотр)","target_countries":"Target countries","title":"Title"},"embedded_overlay":{"channel_id":"Channel","channel_permalink":"Channel permalink","click_url":"Click url","image":"Image","image240":"Image240","image500":"Image500","image600":"Image600","name":"Name","pixel_click":"Pixel click","pixel_view":"Pixel view"},"emoji":{"image":"Image","is_visible":"Is visible","kind":"Kind"},"external_download":{"target":"Target"},"external_share":{"platform":"Platform"},"faq":{"answer":"Answer","category":"Category","faq_category":"Faq category","faq_category_id":"Faq category","image_left":"Image left","image_right":"Image right","is_promoted":"Is promoted","is_published":"Is published","position":"Position","question":"Question","title":"Title"},"faq_category":{"alias":"Alias","icon":"Icon","icon_hover":"Icon hover","icon_hover_retina":"Icon hover retina","icon_retina":"Icon retina","is_published":"Is published","tip":"Tip","title":"Title"},"follow":{"channel_id":"Channel","user_id":"User"},"friendship":{"provider_uid":"Provider uid"},"hidden_coub_tag":{"coub_id":"Coub"},"ignored_editorial_friendship":{"friend_id":"Friend"},"image_block":{"entity":"Entity"},"instagram_download":{"state_event":"State event"},"invitation":{"email":"Email"},"like":{"channel_id":"Channel","entity_id":"Entity","entity_type":"Entity type"},"media_block":{"amazon_url":"Amazon url","artist":"Artist","bandcamp_url":"Bandcamp url","block_type":"Block type","coub_id":"Coub","coub_permalink":"Coub permalink","created_from_admin":"Created from admin","full_image_url":"Full image url","google_play_url":"Google play url","image":"Image","image_url":"Image url","is_visible":"Is visible","kind":"Kind","meta":"Meta","name":"Name","soundcloud_url":"Soundcloud url","title":"Title","track_name":"Track name","type":"Type","url":"Url"},"notification":{"recipient":"Recipient","sender":"Sender"},"notifications_group":{"entity":"Entity","kind":"Kind","senders":"Senders"},"notifications_group_category":{"category_id":"Category"},"notifications_group_channel":{"channel_id":"Channel"},"notifications_group_user":{"user_id":"User"},"o_embed_service_cache":{"url":"Url"},"possible_suggestion":{"suggest_id":"Suggest"},"promo/best2015/collection":{"channel_id":"Channel"},"promo/best2015/collection_coub":{"coub":"Coub","coub_id":"Coub"},"promo/best2015/vote":{"channel_id":"Channel"},"promo/coubs_carousel":{"coubs_list":"Coubs list"},"promo/pro_group":{"coubs_list":"Coubs list","description":"Description","page_name":"Page name","position":"Position","title":"Title"},"promo/pro_group_coub":{"description":"Description"},"promo_background":{"channel_id":"Channel","channel_permalink":"Channel permalink","ex_ussr_safe":"Ex ussr safe","global_safe":"Global safe","image":"Image","is_left":"Is left","is_white_header":"Is white header","min_height":"Min height","min_player_height":"Min player height","promo_channel_block":"Promo channel block","promo_channel_btn_text":"Promo channel btn text","promo_channel_desc":"Promo channel description","promo_channel_title":"Promo channel title","redirect_link":"Redirect link","stats_pixels":"Stats pixels (Пиксели на просмотр)","stick_to_top":"Stick to top","target_countries":"Target countries","title":"Title","url":"Url (Кликовый пиксель)"},"promo_rule":{"channel":"Channel","channel_id":"Channel","channel_permalink":"Channel permalink","text_file":"Text file","title":"Title"},"push_notification":{"entity":"Entity","entity_id":"Entity","sender":"Sender","sender_user":"Sender user","state":"State"},"raw_video":{"screenshoter_token":"Screenshoter token","source":"Source","state":"State","state_event":"State event"},"raw_video_announcement":{"channel":"Channel","raw_video_id":"Raw video","title":"Title","user":"User"},"saved_user":{"editor":"Editor","user":"User","user_id":"User"},"search_log":{"query":"Query","user":"User"},"search_tag":{"title":"Title"},"segment":{"cutter_ios_state":"Cutter ios state"},"segment_source_coub":{"coub_id":"Coub"},"simple_coubs_raw_video":{"simple_coub_id":"Simple coub"},"storage_sweep_task":{"state":"State"},"suggested_friendship":{"kind":"Kind"},"tag":{"title":"Title"},"tag_promo_background":{"bg_color":"Bg color","channel":"Channel","country_ukraine":"Country ukraine","css":"Css","ex_ussr_safe":"Ex ussr safe","global_safe":"Global safe","hashtags":"Hashtags","image":"Image","is_white_header":"Is white header","min_height":"Min height","open_in_blank":"Open in blank","stats_pixels":"Stats pixels","tag_promo_background_tags":"Tag promo background tags","tags":"Tags","tags_titles":"Tags titles","target_countries":"Target countries","text":"Text","title":"Title","url":"Url"},"tag_promo_background_tag":{"tag_id":"Tag"},"temp_upload":{"content_type":"Content type","filename":"Filename","user":"User"},"timeline/recoubs_group":{"user":"User"},"url_download":{"state":"State","state_event":"State event"},"user":{"avatar":"Avatar","birthday":"Birthday","can_view_stats":"Can view stats","channels":"Channels","city":"City","contacts":"Contacts","current_locale":"Current locale","email":"Email","facebook":"Facebook","facebook_data":"Facebook data","facebook_uid":"Facebook uid","first_name":"First name","flickr":"Flickr","friendships":"Friendships","google_data":"Google data","homepage":"Homepage","last_name":"Last name","link":"Link","password":"Password","password_changing":"New password","permalink":"Permalink","popular_banned":"Popular banned","rank":"Rank","search":"Search","sex":"Sex","short_text":"Short text","signed_up_with":"Signed up with","skype":"Skype","title":"Title","tumblr":"Tumblr","tumblr_data":"Tumblr data","twitter":"Twitter","twitter_data":"Twitter data","url":"Url","vimeo":"Vimeo","vkontakte":"VKontakte","vkontakte_data":"Vkontakte data","youtube":"Youtube"},"user_list":{"kind":"Kind","type":"Type","user":"User"},"video_upload":{"state":"State","upload_type":"Upload type"},"vimeo_download":{"state_event":"State event"},"vine_download":{"state_event":"State event"},"web_pushes_subscription/chrome":{"token":"Token"},"web_pushes_subscription/safari":{"token":"Token"},"weekly_digest_item":{"coub_card_size":"Coub card size","entity":"Entity","entity_type":"Entity type"},"youtube_download":{"state_event":"State event","url":"Url"}},"errors":{"messages":{"invalid":"is invalid","invalid_event":"cannot transition when %{state}","invalid_transition":"cannot transition via \"%{event}\"","record_invalid":"Validation failed","restrict_dependent_destroy":{"many":"Cannot delete record because dependent %{record} exist","one":"Cannot delete record because a dependent %{record} exists"},"taken":"has already been taken"},"models":{"abuse":{"attributes":{"claim_text":{"too_long":"is too long (maximum is 255 characters)"}}},"application":{"attributes":{"company_url":{"invalid":"is invalid"},"name":{"blank":"can't be blank"},"redirect_uri":{"blank":"can't be blank","fragment_present":"cannot contain a fragment.","invalid_uri":"must be a valid URI.","relative_uri":"must be an absolute URI."},"url":{"invalid":"is invalid"}}},"audio_track":{"attributes":{"name":{"blank":"can't be blank"},"title":{"blank":"can't be blank"}}},"audio_track/cutted":{"attributes":{"title":{"blank":"can't be blank"}}},"audio_upload":{"attributes":{"state":{"invalid_transition":"cannot transition via \"process\""}}},"authentication":{"attributes":{"auth_secret":{"blank":"can't be blank"},"auth_token":{"blank":"can't be blank","taken":"has already been taken"},"channel_id":{"blank":"can't be blank"},"extended_uid":{"blank":"can't be blank","taken":"has already been taken"},"provider":{"blank":"can't be blank","taken":"has already been taken"},"provider_data":{"blank":"can't be blank"}}},"background":{"attributes":{"channel":{"blank":"can't be blank"},"user":{"blank":"can't be blank"}}},"banner":{"attributes":{"banner_type":{"blank":"can't be blank"},"client_id":{"blank":"can't be blank"},"coub_id":{"blank":"can't be blank","taken":"has already been taken"},"creator_id":{"blank":"can't be blank"},"image":{"blank":"can't be blank"},"kind":{"blank":"can't be blank"},"link":{"blank":"can't be blank"},"placing":{"blank":"can't be blank"},"type":{"blank":"can't be blank"}}},"category":{"attributes":{"permalink":{"blank":"can't be blank","invalid":"is invalid","taken":"has already been taken"}}},"cdn_logs_file":{"attributes":{"date":{"blank":"can't be blank"},"file_name":{"blank":"can't be blank"}}},"cdn_logs_files":{"attributes":{"file_name":{"blank":"can't be blank"}}},"channel":{"attributes":{"category":{"inclusion":"is not included in the list"},"homepage":{"invalid":"is invalid"},"permalink":{"blank":"can't be blank","invalid":"is invalid","taken":"has already been taken"},"title":{"blank":"can't be blank"},"tumblr":{"invalid":"is invalid"},"user_id":{"blank":"can't be blank"},"vimeo":{"invalid":"is invalid"},"visibility":{"blank":"can't be blank","inclusion":"is not included in the list"},"youtube":{"invalid":"is invalid"}}},"channel_list":{"attributes":{"channel":{"blank":"can't be blank"},"kind":{"blank":"can't be blank"}}},"channel_recommendation":{"attributes":{"channel_id":{"taken":"has already been taken"}}},"channel_tag":{"attributes":{"tag_id":{"taken":"has already been taken"}}},"chrome_pushes_subscription":{"attributes":{"token":{"too_short":"is too short (minimum is 100 characters)"}}},"coub":{"attributes":{"permalink":{"blank":"can't be blank"}}},"coub/delayed_coub":{"attributes":{"user":{"blank":"can't be blank"}}},"coub/delayed_recoub":{"attributes":{"channel_id":{"taken":"has already been taken"},"recoub_to":{"blank":"can't be blank"},"user":{"blank":"can't be blank"},"user_id":{"taken":"has already been taken"}}},"coub/montage":{"attributes":{"user":{"blank":"can't be blank"}}},"coub/recoub":{"attributes":{"channel":{"blank":"can't be blank"},"channel_id":{"taken":"has already been taken"},"permalink":{"taken":"has already been taken"},"recoub_to":{"blank":"can't be blank"},"user":{"blank":"can't be blank"},"user_id":{"taken":"has already been taken"}}},"coub/simple":{"attributes":{"channel":{"blank":"can't be blank"},"hidden_tags":{"invalid":"is invalid"},"original_visibility_type":{"inclusion":"is not included in the list"},"permalink":{"taken":"has already been taken"},"raw_video":{"blank":"can't be blank"},"recoubs":{"invalid":"is invalid"},"segments":{"too_long":"is too long (maximum is 10 characters)"},"sorting_key":{"blank":"can't be blank","taken":"has already been taken"},"tags":{"invalid":"is invalid"},"user":{"blank":"can't be blank"},"video_temp_upload_id":{"blank":"can't be blank"},"visibility_type":{"inclusion":"is not included in the list"}}},"coub/temp":{"attributes":{"channel":{"blank":"can't be blank"},"title":{"blank":"can't be blank"},"user":{"blank":"can't be blank"}}},"coub_category":{"attributes":{"coub_id":{"taken":"has already been taken"}}},"coub_like":{"attributes":{"coub_id":{"taken":"has already been taken"}}},"coub_segment":{"attributes":{"coub_id":{"blank":"can't be blank"},"segment_id":{"blank":"can't be blank"},"segment_index":{"blank":"can't be blank"}}},"developer/application":{"attributes":{"name":{"blank":"can't be blank"},"redirect_uri":{"blank":"can't be blank","invalid_uri":"must be a valid URI.","relative_uri":"must be an absolute URI.","secured_uri":"must be an HTTPS/SSL URI."}}},"doorkeeper/application":{"attributes":{"redirect_uri":{"fragment_present":"cannot contain a fragment.","invalid_uri":"must be a valid URI.","relative_uri":"must be an absolute URI.","secured_uri":"must be an HTTPS/SSL URI."}}},"download/facebook":{"attributes":{"state":{"invalid_transition":"cannot transition via \"saved\""}}},"download/gfycat":{"attributes":{"state":{"invalid_transition":"cannot transition via \"saved\""}}},"download/instagram":{"attributes":{"state":{"invalid_transition":"cannot transition via \"saved\""}}},"download/live_leak":{"attributes":{"state":{"invalid_transition":"cannot transition via \"saved\""}}},"download/twitter":{"attributes":{"state":{"invalid_transition":"cannot transition via \"saved\""}}},"download/vimeo":{"attributes":{"state":{"invalid_transition":"cannot transition via \"saved\""}}},"download/vine":{"attributes":{"state":{"invalid_transition":"cannot transition via \"saved\""}}},"download/vk":{"attributes":{"state":{"invalid_transition":"cannot transition via \"saved\""}}},"download/youtube":{"attributes":{"state":{"invalid_transition":"cannot transition via \"start download\""},"state_event":{"invalid_event":"cannot transition when processed"}}},"editor_background":{"attributes":{"link":{"invalid":"must start with http(s)://"},"priority":{"greater_than_or_equal_to":"must be greater than or equal to 0","not_a_number":"is not a number"}}},"embedded_overlay":{"attributes":{"channel_id":{"blank":"can't be blank"},"image600":{"blank":"can't be blank"}}},"emoji":{"attributes":{"image":{"blank":"can't be blank"},"kind":{"inclusion":"is not included in the list"}}},"external_download":{"attributes":{"target":{"blank":"can't be blank","inclusion":"is not included in the list"}}},"external_share":{"attributes":{"platform":{"blank":"can't be blank","inclusion":"is not included in the list"}}},"faq":{"attributes":{"answer":{"blank":"can't be blank"},"faq_category":{"blank":"can't be blank"},"question":{"blank":"can't be blank"}}},"faq_category":{"attributes":{"alias":{"blank":"can't be blank","taken":"has already been taken"},"tip":{"blank":"can't be blank"},"title":{"blank":"can't be blank"}}},"follow":{"attributes":{"channel_id":{"taken":"has already been taken"},"user_id":{"taken":"has already been taken"}}},"friendship":{"attributes":{"provider_uid":{"taken":"has already been taken"}}},"hidden_coub_tag":{"attributes":{"coub_id":{"taken":"has already been taken"}}},"ignored_editorial_friendship":{"attributes":{"friend_id":{"taken":"has already been taken"}}},"image_block":{"attributes":{"entity":{"inclusion":"is not included in the list"}}},"instagram_download":{"attributes":{"state_event":{"invalid_event":"cannot transition when processed"}}},"like":{"attributes":{"entity_id":{"taken":"has already been taken"},"entity_type":{"taken":"has already been taken"}}},"media_block":{"attributes":{"amazon_url":{"invalid":"is invalid"},"bandcamp_url":{"invalid":"is invalid"},"block_type":{"inclusion":"is not included in the list"},"coub_id":{"taken":"has already been taken"},"google_play_url":{"invalid":"is invalid"},"soundcloud_url":{"invalid":"is invalid"},"type":{"inclusion":"is not included in the list"},"url":{"invalid":"is invalid"}}},"notification":{"attributes":{"recipient":{"blank":"can't be blank"},"sender":{"blank":"can't be blank"}}},"notifications_group":{"attributes":{"entity":{"blank":"can't be blank"},"kind":{"blank":"can't be blank"},"senders":{"invalid":"is invalid"}}},"notifications_group_category":{"attributes":{"category_id":{"taken":"has already been taken"}}},"notifications_group_channel":{"attributes":{"channel_id":{"taken":"has already been taken"}}},"notifications_group_user":{"attributes":{"user_id":{"taken":"has already been taken"}}},"o_embed_service_cache":{"attributes":{"url":{"blank":"can't be blank","taken":"has already been taken"}}},"possible_suggestion":{"attributes":{"suggest_id":{"taken":"has already been taken"}}},"promo/best2015/collection":{"attributes":{"channel_id":{"taken":"has already been taken"}}},"promo/best2015/collection_coub":{"attributes":{"coub_id":{"taken":"has already been taken"}}},"promo/best2015/vote":{"attributes":{"channel_id":{"taken":"has already been taken"}}},"promo_rule":{"attributes":{"channel":{"blank":"can't be blank"},"text_file":{"blank":"can't be blank"},"title":{"blank":"can't be blank"}}},"push_notification":{"attributes":{"entity":{"blank":"can't be blank"},"entity_id":{"taken":"has already been taken"},"sender":{"blank":"can't be blank"},"sender_user":{"blank":"can't be blank"},"state":{"invalid_transition":"cannot transition via \"delay\""}}},"raw_video":{"attributes":{"screenshoter_token":{"blank":"can't be blank","taken":"has already been taken"},"source":{"blank":"can't be blank"},"state":{"invalid":"is invalid","invalid_transition":"cannot transition via \"redo\""},"state_event":{"invalid":"is invalid","invalid_event":"cannot transition when processed"}}},"raw_video_announcement":{"attributes":{"channel":{"blank":"can't be blank"},"raw_video_id":{"blank":"can't be blank"},"title":{"blank":"can't be blank"},"user":{"blank":"can't be blank"}}},"saved_user":{"attributes":{"editor":{"blank":"can't be blank"},"user":{"blank":"can't be blank"},"user_id":{"taken":"has already been taken"}}},"search_log":{"attributes":{"query":{"blank":"can't be blank","taken":"has already been taken"},"user":{"invalid":"is invalid"}}},"search_tag":{"attributes":{"title":{"blank":"can't be blank","taken":"has already been taken"}}},"segment":{"attributes":{"cutter_ios_state":{"invalid_transition":"cannot transition via \"process cutter ios\""}}},"segment_source_coub":{"attributes":{"coub_id":{"taken":"has already been taken"}}},"simple_coubs_raw_video":{"attributes":{"simple_coub_id":{"blank":"can't be blank"}}},"storage_sweep_task":{"attributes":{"state":{"invalid_transition":"cannot transition via \"failed\""}}},"suggested_friendship":{"attributes":{"kind":{"blank":"can't be blank"}}},"tag":{"attributes":{"title":{"blank":"can't be blank","taken":"has already been taken"}}},"tag_promo_background":{"attributes":{"channel":{"blank":"can't be blank"},"tag_promo_background_tags":{"invalid":"is invalid"},"title":{"blank":"can't be blank"}}},"tag_promo_background_tag":{"attributes":{"tag_id":{"taken":"has already been taken"}}},"temp_upload":{"attributes":{"content_type":{"blank":"can't be blank"},"filename":{"blank":"can't be blank"},"user":{"blank":"can't be blank"}}},"timeline/recoubs_group":{"attributes":{"user":{"blank":"can't be blank"}}},"url_download":{"attributes":{"state":{"invalid_transition":"cannot transition via \"start download\""},"state_event":{"invalid_event":"cannot transition when processed"}}},"user":{"attributes":{"channels":{"invalid":"is invalid"},"current_locale":{"inclusion":"is not included in the list"},"email":{"blank":"can't be blank","invalid":"is invalid","taken":"has already been taken"},"facebook_uid":{"taken":"has already been taken"},"first_name":{"blank":"can't be blank","too_long":"is too long (maximum is 255 characters)"},"flickr":{"invalid":"is invalid"},"friendships":{"invalid":"is invalid"},"homepage":{"invalid":"Incorrect URL"},"last_name":{"blank":"can't be blank","too_long":"is too long (maximum is 255 characters)"},"password":{"blank":"can't be blank"},"permalink":{"invalid":"is invalid","taken":"has already been taken"},"short_text":{"too_long":"is too long (maximum is 140 characters)"},"skype":{"invalid":"is invalid"},"tumblr":{"invalid":"is invalid"},"vimeo":{"invalid":"is invalid"},"youtube":{"invalid":"is invalid"}}},"user_list":{"attributes":{"kind":{"blank":"can't be blank"},"type":{"blank":"can't be blank"},"user":{"blank":"can't be blank"}}},"video_upload":{"attributes":{"state":{"invalid_transition":"cannot transition via \"blunder\""},"upload_type":{"inclusion":"is not included in the list"}}},"vimeo_download":{"attributes":{"state_event":{"invalid":"is invalid","invalid_event":"cannot transition when initial"}}},"vine_download":{"attributes":{"state_event":{"invalid_event":"cannot transition when processed"}}},"web_pushes_subscription/chrome":{"attributes":{"token":{"taken":"has already been taken"}}},"web_pushes_subscription/safari":{"attributes":{"token":{"taken":"has already been taken","too_short":"is too short (minimum is 100 characters)"}}},"weekly_digest_item":{"attributes":{"entity":{"blank":"can't be blank"}}},"youtube_download":{"attributes":{"state_event":{"invalid":"is invalid","invalid_event":"cannot transition when initial"},"url":{"blank":"can't be blank","incorrect":"Incorrect YouTube URL"}}}}},"models":{"abuse":"Abuse","application":"Application","audio_track":"Audio track","audio_track/cutted":"Audio track","audio_upload":"Audio upload","authentication":"Authentication","background":"Background","category":"Category","cdn_logs_file":"Cdn logs file","cdn_logs_files":"Cdn logs files","channel":"Channel","channel_list":"Channel list","channel_recommendation":"Channel recommendation","channel_tag":"Channel tag","chrome_pushes_subscription":"Chrome pushes subscription","coub/delayed_coub":"Delayed coub","coub/delayed_recoub":"Recoub","coub/montage":"Montage","coub/recoub":"Recoub","coub/simple":"Simple","coub/temp":"Temp","coub_category":"Coub category","coub_like":"Coub like","coub_segment":"Coub segment","developer/application":"Application","download/facebook":"Facebook","download/gfycat":"Gfycat","download/instagram":"Instagram","download/live_leak":"Live leak","download/twitter":"Twitter","download/vimeo":"Vimeo","download/vine":"Vine","download/vk":"Vk","download/youtube":"Youtube","editor_background":"Editor background","embedded_overlay":"Embedded overlay","emoji":"Emoji","external_share":"External share","faq":"Faq","faq_category":"Faq category","follow":"Follow","friendship":"Friendship","hidden_coub_tag":"Hidden coub tag","ignored_editorial_friendship":"Ignored editorial friendship","image_block":"Image block","instagram_download":"Instagram download","invitation":"Invitation","like":"Like","media_block":"Media block","notification":"Notification","notifications_group":"Notifications group","notifications_group_category":"Notifications group category","notifications_group_channel":"Notifications group channel","notifications_group_user":"Notifications group user","o_embed_service_cache":"O embed service cache","possible_suggestion":"Possible suggestion","promo/best2015/collection":"Collection","promo/best2015/collection_coub":"Collection coub","promo/best2015/vote":"Vote","promo/coubs_carousel":"Coubs carousel","promo/pro_group":"Pro group","promo/pro_group_coub":"Pro group coub","promo_background":"Promo background","promo_rule":"Promo rule","promo_rules":"Promo rules","push_notification":"Push notification","raw_video":"Raw video","raw_video_announcement":"Raw video announcement","saved_user":"Saved user","search_log":"Search log","search_tag":"Search tag","segment":"Segment","segment_source_coub":"Segment source coub","simple_coubs_raw_video":"Simple coubs raw video","storage_sweep_task":"Storage sweep task","suggested_friendship":"Suggested friendship","tag":"Tag","tag_promo_background":"Tag promo background","tag_promo_background_tag":"Tag promo background tag","temp_upload":"Temp upload","timeline/recoubs_group":"Recoubs group","url_download":"Url download","user":"User","user/views_history":"Views history","user/visits_history":"Visits history","user_list":"User list","video_upload":"Video upload","vimeo_download":"Vimeo download","vine_download":"Vine download","web_pushes_subscription/chrome":"Chrome","web_pushes_subscription/safari":"Safari","weekly_digest_item":"Weekly digest item","youtube_download":"Youtube download"},"state_machines":{"audio_upload":{"state":{"events":{"finish":"finish","process":"process"},"states":{"initial":"initial","processing":"processing"}}},"download/facebook":{"state":{"events":{"saved":"saved","start_download":"start download"},"states":{"processed":"processed"}}},"download/gfycat":{"state":{"events":{"saved":"saved","start_download":"start download"},"states":{"processed":"processed"}}},"download/instagram":{"state":{"events":{"saved":"saved","start_download":"start download"},"states":{"processed":"processed"}}},"download/live_leak":{"state":{"events":{"saved":"saved","start_download":"start download"},"states":{"processed":"processed"}}},"download/twitter":{"state":{"events":{"saved":"saved","start_download":"start download"},"states":{"processed":"processed"}}},"download/vimeo":{"state":{"events":{"saved":"saved","start_download":"start download"},"states":{"downloading":"downloading","processed":"processed"}}},"download/vine":{"state":{"events":{"saved":"saved","start_download":"start download"},"states":{"processed":"processed"}}},"download/vk":{"state":{"events":{"saved":"saved","start_download":"start download"},"states":{"processed":"processed"}}},"download/youtube":{"state":{"events":{"failed":"failed","saved":"saved","start_download":"start download"},"states":{"failed":"failed","initial":"initial","processed":"processed"}}},"instagram_download":{"state":{"states":{"processed":"processed"}}},"push_notification":{"state":{"events":{"delay":"delay","receive":"receive","reject":"reject"},"states":{"delayed":"delayed","received":"received","rejected":"rejected"}}},"raw_video":{"state":{"events":{"failed":"failed","redo":"redo","start_processing":"start processing"},"states":{"failed":"failed","processed":"processed","processing":"processing"}}},"segment":{"cutter_ios_state":{"events":{"process_cutter_ios":"process cutter ios"},"states":{"initial":"initial","nil":"nil"}}},"storage_sweep_task":{"state":{"events":{"failed":"failed","process":"process","saved":"saved"},"states":{"failed":"failed","processed":"processed"}}},"url_download":{"state":{"events":{"start_download":"start download"},"states":{"processed":"processed"}}},"video_upload":{"state":{"events":{"blunder":"blunder","finish":"finish","process":"process","upload":"upload"},"states":{"done":"done","failed":"failed","initial":"initial","processing":"processing"}}},"vimeo_download":{"state":{"states":{"initial":"initial"}}},"vine_download":{"state":{"states":{"processed":"processed"}}},"youtube_download":{"state":{"states":{"failed":"failed","initial":"initial","processed":"processed"}}}}},"admin":{"audio_copyright_claims":{"claim_info":"Claim's info","list":"Claims List"},"audio_tracks":{"labels_list":"Labels List","list":"Audio Tracks List"},"editor_logs":{"recoubs_added":"Editor reposts added","recoubs_removed":"Editor reposts removed"},"pane":"Admin Control Pane","set_external_video_source":"Set external video source","source":"Source: "},"announces":{"add_heading":"Add a new video","author_heading":"Add the video of your company","buttons":{"add":"Add","cancel":"Cancel","delete":"Delete","remove":"Delete video","video":"Video"},"errors":{"heading":"Error","sub":"Your video should be no longer than 20 minutes"},"make_coub_heading":"Make a coub from %{author} video","placeholder":"url","sub":"Paste a link form YouTube or Vimeo","uploading":"Uploading"},"app":{"body":"Explore and become a part of the creative Coub community: find, like and share the best coubs, and add your own to the mix. Funny, arty, fashionable or profound, coubs come in all shapes and sizes. Share your unique perspective with 50 million monthly viewers, and get inspired.","heading":"Create and</br>explore</br>on the go"},"audio_upload":{"errors":{"no_audio_track":"No audio track in this coub"}},"auth_api":{"oauth_data_fetcher":{"provider_api_error":"Failed to fetch data from provider with given credentials","temporary_provider_issue":"Failed to get registration data due to some provider issues. Please, try again later!"}},"auth_popup":{"buttons":{"back":"Back","change":"Change","done":"Done","sign_in":"Log in","view_less":"Show fewer","view_less_1":"View less","view_more":"Show more","view_more_1":"View more"},"channels_registration":{"whotofollow-description":"Follow channels to get their coubs.","whotofollow-no-channels":"No channels found","whotofollow-step-3":"Follow 3 channels","whotofollow-title":"Build your timeline","whotofollow_step_0":"Follow 3 channels","whotofollow_step_1":"Follow 3 channels","whotofollow_step_2":"Follow 2 more","whotofollow_step_other":"Yay!"},"oauth_errors":{"email":{"already_registered_text":"This e-mail is already registered. ","email_pass":"Incorrect email or password","incorrect":"Incorrect email","not_registered_text":"This e-mail is not registered. "},"no_data":{"no_token":"Insufficient data: token can't be blank","no_uid":"Insufficient data: Uid can't be blank"},"password":{"simple":"The password is too weak"}},"sign_in":"Log in","sign_up":"Sign up","signin":{"login_with_facebook":"Facebook","login_with_google":"Google","login_with_phone":"Phone number","login_with_twitter":"Twitter","login_with_vkontakte":"VKontakte","popup":{"login":"Log in","unknown_error":"Unknown error"},"reset":{"forgot_password":"Forgot your password?","no_email_error":"Email is not linked to this account","password_recovery":"New password","reset_password":"Reset password","reset_password_button":"Reset","sent_instructions":"<p>Please check your inbox <strong></strong></p>"},"verify":{"check":"Please check your inbox","success":"Email successfully resent"}},"signup":{"birthcontrol":{"sex":{"female":"Female","male":"Male","unspecified":"Unspecified"}},"with_phone":"via Phone"}},"banners":{"announcement":{"promoted":"Promoted"},"follow_banner":{"channel_coubs":"%{count} followers","channel_coubs_multi":"%{count} followers","channel_coubs_one":" follower","count_followers":"%{count} followers"},"weekly":{"heading":"Best coubs of the week"}},"best2012":{"banner_text1":"years of coub!","banner_text2":"собрали лучшие коубы пятилетней давности :) <br/><br/>best of 2012","en":{"logo_dropdown":"we’ve decided to show you the coubs that ruled 2012","meta_description":"as coub turns 5, we’ve decided to show you the coubs that ruled 2012 — the year it all began","text1":"years of coub!","text2":"as coub turns 5, we’ve decided to show you the coubs that ruled 2012 — the year it all began <br/> <br/>best of 2012","title":"Best Coubs 2012"},"mailer":"Best Coubs of 2012","ru":{"logo_dropdown":"собрали лучшие коубы пятилетней давности :)","meta_description":"выяснилось, что мы не делали подборку лучших коубов в год запуска, поэтому в честь дня рождения собрали популярные коубы пятилетней давности :)","text1":"years of coub!","text2":"выяснилось, что мы не делали подборку лучших коубов в год запуска, поэтому в честь дня рождения собрали популярные коубы пятилетней давности :) <br/> <br/>best of 2012","title":"Best Coubs 2012"}},"best_coub_page":{"best_coubs2014":{"section":{"hidden_gems":"Hidden gems","most_likes":"Most liked","popular_tags":"Popular tags","year_in_coubs":"Year in coubs"}},"best_description":"It’s time to look back at the best coubs of the past year. Check out the most popular coubs and our selection of hidden gems and memes from 2013. Enjoy! Happy New Year!","best_mems":{"boom":{"description":"Kiss Me Im Gutter by Gutter Brothers<br/>check more on <a href='coub.com'>Boom! channel</a>","title":"Boom!"},"drive":{"description":"Nightcall by Kavinsky.<br>Go to the <a href=\"http://coub.com/drivenightcall\">Drive channel</a> for more.","title":"Drive"},"god_damn":{"description":"Palace by A$AP Rocky.<br/>Go to the <a href='http://coub.com/howrealisthis'>God Damn channel</a> for more.","title":"God damn"},"gta":{"description":"Grand Theft Auto IV loading screen theme.","title":"GTA"},"hypnotized":{"description":"Hypnotized by Oliver Koletzki<br/>Go to the <a href='http://coub.com/hypnotized'>Hypnotized channel</a> for more.","title":"Hypnotized"},"my_dick":{"description":"My dick by Mickey Avalon.<br/>Go to the <a href='http://coub.com/mydickisbigger'>My Dick channel</a> for more.","title":"My dick"},"optimism":{"description":"Optimism by Honor & B.A.N.G.<br/>Go to the <a href='http://coub.com/optimism'>Optimism channel</a> for more.","title":"Optimism"},"radio":{"description":"Multiple tracks strung together.<br/>Go to the <a href='http://coub.com/radiocoubs'>Radio channel</a> for more.","title":"Radio"},"summertime_sadness":{"description":"Summertime sadness by<br>Lana Del Rey. Go to the<br><a href=\"http://coub.com/summertimesadness\">Summertime channel</a> for more.","title":"Summertime sadness"}},"best_title":"Coubs of the year","footer":{"check":"Check out more","or":" and"},"pages":{"best_mems":"Best mems","hidden_gems":"Hidden gems","popular":"Popular"}},"best_coubs2014":{"footer":{"share":"Share with friends:"},"header":{"powered_by":"Powered by 4G","share":"Share with friends"},"promo_column":{"banner_text":"В честь этого события избранные коуберы подготовили коубы на тему сверхбыстрого интернета. Подключайте 4G «Билайн»<br>и смотрите лучшие коубы года на бешеной скорости.","banner_title":"Coub и &laquo;Билайн&raquo; подвели итоги 2014 года."},"section":{"hidden_gems":"Hidden gems","most_likes":"Most liked","popular_tags":"Popular tags","year_in_coubs":"Year in coubs"},"title":"Coubs of the year 2014","titles":{"hidden_gems":"A selection of coubs you might have missed","most_likes":"The year’s most popular coubs","popular_tags":"What our community recommends watching"}},"best_coubs2015":{"header":{"best_coubs":"Best coubs 2015","hidden_gems":"Hidden gems 2015","memes_of":"Memes of 2015","mybest":"My Best of 2015","users-best":"Users’ Picks"},"mybest":{"body":{"h1":"%{title}’s","sub":"BEST OF 2015"},"rules":{"header":"COUB и &laquo;Билайн&raquo; дают тебе возможность собрать <br />собственную подборку из самых любимых коубов года <br />и выиграть один из призов.","p1":"На каждой карточке коуба этого года есть кнопка, которая<br />\r\nотправит его в вашу подборку.","p3":"Авторы трёх самых крутых подборок по числу голосов<br />\r\nполучат новые iPhone 6s от «Билайн»."},"top":{"h2":"&laquo;Билайн&raquo; дает вам возможность делать свои <br />подборки лучших коубов этого года"}},"users_best":{"followings":"Вы подписаны"}},"best_coubs2016":{"countdown":{"button":"Get notified","desc":"Be the first to see the coubs that ruled Coub in 2016!","success":"Thank you! We will notify you."},"header":{"buttons":{"hidden-gems":{"desc":"Excellent coubs that you may not have seen the first time round","title":"Hidden Gems"},"likes":{"desc":"The finest coubs of the year!","title":"Best Coubs"},"memes":{"desc":"The Coub community’s funniest inside jokes and memes","title":"Coub Memes"},"share":"Share","watch":"Watch"}},"og":{"description":"Time to celebrate the year in coubs! We've gathered the most popular coubs of 2016, and made a selection of the best hidden gems and memes. Enjoy!","hidden-gems_title":"Hidden Gems 2016","likes_title":"Coubs of The Year 2016","memes_title":"Coub Memes 2016"}},"best_coubs2017":{"bottom_title":"Don’t  Stop!<br />More  Awesome<br />Coubs  are  Here:","og":{"hidden-gems_title":"Hidden Gems 2017","likes_title":"Coubs of The Year 2017","memes_title":"Coub Memes 2017"},"titles":{"hidden-gems":"<span>Hidden </span>Gems","likes":"<span>Most </span>Popular","memes":"Memes"}},"best_coubs2018":{"og_descriptions":{"gems":"Excellent coubs that you may not have seen the first time round.","likes":"Time to celebrate the year in coubs! We've gathered the most popular coubs of 2018, and made a selection of the best hidden gems and memes. Enjoy!","memes":"The Coub community's funniest inside jokes and memes."},"og_titles":{"gems":"Hidden Gems 2018","likes":"Coubs of The Year 2018","memes":"Coub Memes 2018"},"titles":{"gems":"Hidden gems","likes":"Most popular","memes":"Best memes"}},"best_coubs2019":{"og_descriptions":{"hidden_gems":"Excellent coubs that you may not have seen the first time round.","memes":"The Coub community's funniest inside jokes and memes.","popular":"Time to celebrate the year in coubs! We've gathered the most popular coubs of 2019, and made a selection of the best hidden gems and memes. Enjoy!"},"og_titles":{"hidden_gems":"Hidden Gems 2019","memes":"Coub Memes 2019","popular":"Coubs of The Year 2019"},"titles":{"hidden_gems":"Hidden gems","memes":"Best memes","popular":"Most popular"}},"best_mems_descriptions":{"boom":"Kiss Me Im Gutter by Gutter Brothers<br/>check more on <a href='coub.com'>Boom! channel</a>","drive":"Nightcall by Kavinsky.<br>Go to the <a href=\"http://coub.com/drivenightcall\">Drive channel</a> for more.","god_damn":"Palace by A$AP Rocky<br/>check more on <a href='coub.com'>God damn channel</a>","gta":"check more on <a href=\"coub.com\">GTA channel</a>","hypnotized":"Hypnotized by Oliver Koletzki<br/>check more on <a href='coub.com'>Hypnotized channel</a>","my_dick":"My dick by Mickey Avalon<br/>check more on <a href='coub.com'>My dick channel</a>","optimism":"Optimism by Honor & B.A.N.G<br/>check more on <a href='coub.com'>Optimism channel</a>","radio":"Сool coubs with radio effect<br/>check more on <a href='coub.com'>Radio channel</a>","summertime_sadness":"Summertime sadness by<br>Lana Del Rey check more on<br>check more on <a href=\"coub.com\">Summertime sadness channel</a>"},"best_mems_titles":{"boom":"Boom!","drive":"Drive","god_damn":"God damn","gta":"GTA","hypnotized":"Hypnotized","my_dick":"My dick","optimism":"Optimism","radio":"Radio","summertime_sadness":"Summertime sadness"},"channel":{"coubs_count":{"one":"%{count} Coub","other":"%{count} Coubs"},"errors":{"not_allowed_to_post":"You are not allowed to %{action} from this channel","not_found":"Channel's not found","provider_not_found":"Given channel has no such provider","unspecified_channel":"Unable to find channel","wrong_avatar_format":"Given format is not supported"},"no_coubs":"No coubs yet","recoubs_count":{"one":"%{count} Repost","other":"%{count} Reposts"}},"channel_recommendation":{"recommend":"Recommend a channel to your followers","recommendation_limit_reached":"Channel has reached the limit of recommendations","run_by_me":"My channel (Hide the mark in settings)","run_by_someone":"This channel is run by %{name}","with_channels_title":"Recommended by %{title}"},"channel_recommendations":{"add_btn":"Add","create":{"cant_recommend_to_same_channel":"Sorry, a channel can't recommend itself","channel_already_recommended":"This channel has already been added","channel_not_found":"No channel found"}},"channels":{"add_new":"Add new channel","attached_channel_popup":{"button":"Okay","sub":"Your channel <strong>%{title}</strong> has been successfully attached to your account.","title":"Hooray!"},"create_new":"New channel","create_popup":{"cancel_button":"Cancel","create_button":"Create","link_button":"Attach existing channel","permalink_placeholder":"URL coub.com/","title_placeholder":"Title"},"featured":"Featured channels","link_popup":{"button":"Link account","cancel":"Cancel","sub":"If you have another account on Coub you can link it to this account so you don't have to relogin every time.","title":"Link account"},"more_channels":"We feature channels here. More coming soon.","oauth_api_errors":{"channel_deletion":"You are not allowed to delete this channel"},"view_more":"View More"},"chat":{"header_prompt":"Chat","message_button":"Message"},"clearance":{"models":{"clearance_mailer":{"change_password":"Change your password"}}},"clearance_mailer":{"change_password":{"closing":"If you didn't request this, ignore this email. Your password has not been changed.","link_text":"Change my password","opening":"Someone, hopefully you, requested we send you a link to change your password:"}},"community_description":{"about":"About community","cancel":"Cancel","description":"Description","edit":"Edit","edit_rule":"Edit Rule","markdown_hint":"You can use **<strong>Bold</strong>** and [<em>Link</em>](https://example.com)","move_down":"Move down","move_up":"Move up","new_rule":"New Rule","rule_info":"These are rules that visitors have to follow to participate. Rules can be used as reasons to remove coubs or ban users. Communities can have a maximum of 15 rules.","rules":"Rules","save":"Save","settings":"Settings","title":"Title"},"coub":{"abuse":{"header":"Flag this coub as inappropriate","popup":{"close_popup":"Cancel","submit":"Submit"},"reasons":{"adult_content":"Adult content","offensive":"Offensive","other":"Other","sex":"Pornography","spam":"Spam","violence":"Violence"},"sub":"Please select the reason that reflects your concern about this coub, so we can review it.","title":"Flag"},"auto_post":{"message":"%{title} @coub %{url}","message_with_author":"%{title} @%{author} @coub %{url}","twitter_message":"%{title} #coub %{url}"},"buttons":{"download":"Download","edit":{"add_category":"Add to community","add_sharing_picture":"Add sharing picture","change_category":"Change community","copy":"Copy coub","copy_link":"Copy link","delete":"Delete coub","download_audio":"Download Audio","download_video":"Download Video","heading":"Edit coub","in_progress_sharing_picture":"In progress...","info":"Edit info","open_in_editor":"Open in editor","remove_sharing_picture":"Clear sharing picture"},"embed":"Embed"},"by":"Created by %{name}","by_small_card":"%{name}","copyright_claim":{"audio":"Due to a claim by a copyright holder ‘<strong>%{holder}</strong>’, the audio track has been removed from this video."},"cotd":"Coub of the day","dash":"&mdash;","dot":"・","embed":{"add_community":"Add to community","back":"Back","by":"by %{link}","change_community":"Change community","copy_link":{"copied":"Copied!","copy":"Copy link","failed_to_copy":"Can't copy:(","press_cmd_c":"Press Cmd+C","press_ctrl_c":"Press Ctrl+C"},"delete_coub":"Delete coub","disabled":"Sorry, embed is disabled on this coub","download_loops":"Download loops","edit_coub":"Edit coub","edit_info":"Edit info","from":"from %{link}","get_app":"Get app","get_app_ru":"Скачать приложение","hd":"HD","heading":"Coub works best with the app","in_app":"Open coub in app","in_app_new":"Open in app","in_app_ru":"Открыть в приложении","open_on_coub":"Open on Coub","promote_coub":"Promote coub","restart":"Restart","share":"Share coub","share_ru":"Поделиться","sharing":{"download":"Download","facebook":"Facebook","loading":"Loading...","more":"More...","twitter":"Twitter","vkontakte":"VKontakte"},"site_name":"Coub","tooltips":{"audio_failed":"MP3 is not supported","coub_it":"Coub it!","favourites_add":"Bookmark","favourites_remove":"Bookmarked","fullscreen":"Fullscreen","fullscreen_off":"Exit fullscreen","fullscreen_on":"Fullscreen","hd_off":"Turn HD off","hd_on":"Turn HD on","logo":"Watch on coub.com","settings":"Settings","share":"Share","share_ru":"Поделиться"},"unmute":"Click to Unmute","unmute_ru":"Включить звук","video_source":"Original video","views":"views","views_count":"%{count} views","views_double_ru":"просмотра","views_plural_ru":"просмотров","views_singular_ru":"просмотр","watch_more":"Watch more"},"embed_dropdown":{"autostart":{"header":"Autoplay"},"get_coub_link":"Coub Link","get_embed_code":"Embed Code","mute":{"header":"Start muted"},"size":{"custom_size":{"header":"Custom size","height":"Height","width":"Width"},"given_size":{"original_size":"Original size "},"header":"Size"},"startwithhd":{"header":"Start with HD"}},"explore":{"best":"Best Of The Year","channels":"Channels","coub_of_the_day":"Coub of the day","coub_picks":"Coub picks","coubs":"Coubs","fresh":"Fresh","home":"Home","hot":"Hot","hotness":"Hotness","new-hot":"New Hot","new-rising":"New Rising","newest":"Fresh","period":{"daily":"Daily","halfofyear":"Six months","monthly":"Monthly","quarterly":"Quarterly","weekly":"Weekly"},"popular":"Popular","random":"Random","recent":"Recent","rising":"Rising","show_less":"Show less","show_more":"Show more...","stories":"Stories","title_for_header":"Featured","top":"Top","top_of_the_month":"Top of the Month","undervalued":"Undervalued","views":"Views count","views_count":"Views count","weekly":"Weekly","weekly_menu":"Best of the week"},"external_download":{"link":" from <a target='_blank' class='description__stamp__source' href='%{url}'>%{type}</a>","providers":{"android":"Android","iphone":"iPhone","youtube":"YouTube"}},"featured":"Featured Coubs","featured_badge":"Featured","follow_heading":"Follow to","from_mobile_app":" from <a href=%{url} class='description__stamp__source' target=%{target}>%{os}</a>","gifv":{"made_by":"<a href='%{coub_url}' target='_blank'>%{coub_title}</a> by <a href='%{channel_url}' target='_blank'>%{channel_title}</a>","try_original":"Whops! Looks like script did not work for you. Try the <a href='%{link}' target='_blank'>original link</a>."},"liked_by":"Liked by ","logo_prompt":"Coub","make_another":"Coub it","media_block":{"hide_button":"Hide","more_coubs_from_this_video":"More coubs from this video","original_video":"ORIGINAL VIDEO","recoubed_from":"RECOUBED FROM","show_less":"Show less","show_more":"Show more","source":"SOURCE","video_source":"Source video"},"original_by":"<a href=%{source} target=_blank>Recoubed</a> by %{original}","original_by_small_card":"%{original}","profile":{"sort_by":{"likes_count":"Most liked","newest":"Most recent","oldest":"Oldest","random":"Random","views_count":"Most viewed"}},"recoub_by":"reposted by %{name}","redo":"Reconvert this coub","stubs":{"age_restricted":{"button":"Yes, I am 18 or older","header":"This coub is not appropriate for minors. Please confirm that you are an adult.","title":"NSFW"},"no_permission":{"header":"Access Denied"}},"stubs_new":{"no_permission":{"header":"This coub is unavailable for you","sub":"It's either set to private or banned"},"processing":{"header":"Coub is being processed","sub":"Feel free to roam the site while you wait."},"temp_coub":{"header":"Temp coub heading","sub":"Temp coub sub"}},"suggest_stats":{"traffic":"Traffic"},"timeline":{"prompts":{"list":"List view","mosaic":"Mosaic view"},"sort_by":{"followers_count":"Top followers","most_liked":"Most liked","most_viewed":"Most viewed","newest":"Newest","newest_all":"Most recent","newest_popular":"Recently popular","oldest":"Oldest","relevance":"Relevance"}},"views_count":{"one":"view","other":"views"},"visibility":{"banned":"Banned","draft":"Draft","friends":"Friends","private":"Private","public":"Public","unlisted":"Unlisted"},"visibility_description":{"banned":"Only you can see this coub","friends":"Visible to users you follow","nsfw":"This coub is marked as adult content","private":"Visible to you","public":"Visible to everyone","unlisted":"Available via permalink"}},"countries":{"ad":"Andorra","ae":"United Arab Emirates","af":"Afghanistan","ag":"Antigua and Barbuda","ai":"Anguilla","al":"Albania","am":"Armenia","ao":"Angola","aq":"Antarctica","ar":"Argentina","as":"American Samoa","at":"Austria","au":"Australia","aw":"Aruba","ax":"Aland Islands","az":"Azerbaijan","ba":"Bosnia and Herzegovina","bb":"Barbados","bd":"Bangladesh","be":"Belgium","bf":"Burkina Faso","bg":"Bulgaria","bh":"Bahrain","bi":"Burundi","bj":"Benin","bl":"Saint Barthelemy","bm":"Bermuda","bn":"Brunei Darussalam","bo":"Bolivia","bq":"Bonaire, Sint Eustatius and Saba","br":"Brazil","bs":"Bahamas","bt":"Bhutan","bv":"Bouvet Island","bw":"Botswana","by":"Belarus","bz":"Belize","ca":"Canada","cc":"Cocos (Keeling) Islands","cd":"Congo, the Democratic Republic of the","cf":"Central African Republic","cg":"Congo","ch":"Switzerland","ci":"Cote D'Ivoire","ck":"Cook Islands","cl":"Chile","cm":"Cameroon","cn":"China","co":"Colombia","cr":"Costa Rica","cu":"Cuba","cv":"Cape Verde","cw":"Curacao","cx":"Christmas Island","cy":"Cyprus","cz":"Czech Republic","de":"Germany","dj":"Djibouti","dk":"Denmark","dm":"Dominica","do":"Dominican Republic","dz":"Algeria","ec":"Ecuador","ee":"Estonia","eg":"Egypt","eh":"Western Sahara","er":"Eritrea","es":"Spain","et":"Ethiopia","fi":"Finland","fj":"Fiji","fk":"Falkland Islands (Malvinas)","fm":"Micronesia, Federated States of","fo":"Faroe Islands","fr":"France","ga":"Gabon","gb":"United Kingdom","gd":"Grenada","ge":"Georgia","gf":"French Guiana","gg":"Guernsey","gh":"Ghana","gi":"Gibraltar","gl":"Greenland","gm":"Gambia","gn":"Guinea","gp":"Guadeloupe","gq":"Equatorial Guinea","gr":"Greece","gs":"South Georgia and the South Sandwich Islands","gt":"Guatemala","gu":"Guam","gw":"Guinea-Bissau","gy":"Guyana","hk":"Hong Kong","hm":"Heard Island and McDonald Islands","hn":"Honduras","hr":"Croatia","ht":"Haiti","hu":"Hungary","id":"Indonesia","ie":"Ireland","il":"Israel","im":"Isle of Man","in":"India","io":"British Indian Ocean Territory","iq":"Iraq","ir":"Iran, Islamic Republic of","is":"Iceland","it":"Italy","je":"Jersey","jm":"Jamaica","jo":"Jordan","jp":"Japan","ke":"Kenya","kg":"Kyrgyzstan","kh":"Cambodia","ki":"Kiribati","km":"Comoros","kn":"Saint Kitts and Nevis","kp":"Korea, Democratic People's Republic of","kr":"Korea, Republic of","kw":"Kuwait","ky":"Cayman Islands","kz":"Kazakhstan","la":"Lao People's Democratic Republic","lb":"Lebanon","lc":"Saint Lucia","li":"Liechtenstein","lk":"Sri Lanka","lr":"Liberia","ls":"Lesotho","lt":"Lithuania","lu":"Luxembourg","lv":"Latvia","ly":"Libyan Arab Jamahiriya","ma":"Morocco","mc":"Monaco","md":"Moldova, Republic of","me":"Montenegro","mf":"Saint Martin","mg":"Madagascar","mh":"Marshall Islands","mk":"Macedonia, the Former Yugoslav Republic of","ml":"Mali","mm":"Myanmar","mn":"Mongolia","mo":"Macau","mp":"Northern Mariana Islands","mq":"Martinique","mr":"Mauritania","ms":"Montserrat","mt":"Malta","mu":"Mauritius","mv":"Maldives","mw":"Malawi","mx":"Mexico","my":"Malaysia","mz":"Mozambique","na":"Namibia","nc":"New Caledonia","ne":"Niger","nf":"Norfolk Island","ng":"Nigeria","ni":"Nicaragua","nl":"Netherlands","no":"Norway","np":"Nepal","nr":"Nauru","nu":"Niue","nz":"New Zealand","om":"Oman","pa":"Panama","pe":"Peru","pf":"French Polynesia","pg":"Papua New Guinea","ph":"Philippines","pk":"Pakistan","pl":"Poland","pm":"Saint Pierre and Miquelon","pn":"Pitcairn","pr":"Puerto Rico","ps":"Palestinian Territory, Occupied","pt":"Portugal","pw":"Palau","py":"Paraguay","qa":"Qatar","re":"Reunion","ro":"Romania","rs":"Serbia","ru":"Russian Federation","rw":"Rwanda","sa":"Saudi Arabia","sb":"Solomon Islands","sc":"Seychelles","sd":"Sudan","se":"Sweden","sg":"Singapore","sh":"Saint Helena","si":"Slovenia","sj":"Svalbard and Jan Mayen","sk":"Slovakia","sl":"Sierra Leone","sm":"San Marino","sn":"Senegal","so":"Somalia","sr":"Suriname","ss":"South Sudan","st":"Sao Tome and Principe","sv":"El Salvador","sx":"Sint Maarten","sy":"Syrian Arab Republic","sz":"Swaziland","tc":"Turks and Caicos Islands","td":"Chad","tf":"French Southern Territories","tg":"Togo","th":"Thailand","tj":"Tajikistan","tk":"Tokelau","tl":"Timor-Leste","tm":"Turkmenistan","tn":"Tunisia","to":"Tonga","tr":"Turkey","tt":"Trinidad and Tobago","tv":"Tuvalu","tw":"Taiwan, Province of China","tz":"Tanzania, United Republic of","ua":"Ukraine","ug":"Uganda","um":"United States Minor Outlying Islands","us":"United States","uy":"Uruguay","uz":"Uzbekistan","va":"Holy See (Vatican City State)","vc":"Saint Vincent and the Grenadines","ve":"Venezuela","vg":"Virgin Islands, British","vi":"Virgin Islands, U.S.","vn":"Viet Nam","vu":"Vanuatu","wf":"Wallis and Futuna","ws":"Samoa","ye":"Yemen","yt":"Mayotte","za":"South Africa","zm":"Zambia","zw":"Zimbabwe"},"country_selector":{"title":"Region: <i class='flag-icon flag-icon-%{country_code}'></i> <span>%{country_title}</span>"},"create":{"add_music":{"external":"Paste a link","external_placeholder":"Paste coub or youtube link"},"add_segment":{"cancel":"Cancel","coub_link":"Coub link","coub_link_note":"Paste coub link to make yours more awesome","coub_link_placeholder":"Paste coub link","duplicate":"Duplicate this video","duplicate_video":"Duplicate video","error_while_downloading":"Error","upload_audio":"Upload","upload_video":"Upload video","video_link":"Video link","video_link_note":"Paste youtube or vimeo link to make yours more awesome","video_link_placeholder":"Paste youtube or vimeo link"},"audio_upload_errors":{"cant_read":"We could not read this audio file.","wrong_permalink":"Wrong coub permalink."},"delete_segment":{"delete_button":"Delete segment"},"edit":{"heavily_modified_popup":{"post_as_new":"Post as new.","reasons":{"audio":"You have changed the audio","playback":"You have changed a playback type","segment_added":"You have added a segment","segment_changed_too_much":"You have changed a segment very much","segment_removed":"You have removed a segment"},"title":"You've made significant changes to your coub."}},"exit_signals":{"on_editing":"You are exiting during editing","on_uploading":"You are exiting during upload"},"extended":"Extended","external":{"header":"Paste a video link","sub":"Use a Vimeo or YouTube video. Max: 20 min.<br />\r\nPlease respect copyright laws."},"frames":{"colon":":","dot":".","first_frame":"First frame:","last_frame":"Last frame:","player_first_frame":"First frame","player_last_frame":"Last frame"},"help":{"another_video":{"header":"Add another video","sub":"Add more videos to your coub by clicking the plus button. Yes, the possibilities are staggering."},"caption":{"header":"Use caption and tags","sub":"Describe your coub so it appears in searches and alongside related coubs."},"length":{"header":"10 seconds max","sub":"You can take a maximum of 10 seconds of your video for a coub."},"low_quality":{"header":"Low quality in editor","sub":"The video quality in the editor will be lower than the coub. This speeds up the creation process."},"mute":{"header":"Mute","sub":"If your sound does not loop, and also does not work in reverse, mute it to keep the full effect."},"restricted":{"header":"Restricted content","sub":"Coubs that include pornography and extreme violence will be banned."},"reverse":{"header":"Reverse","sub":"If you can't loop your coub perfectly, try reversing it. You might be surprised by the results."},"shadow_button":{"header":"Shadow button","sub":"To make a smooth transition between the first and last frames use the Shadow button.","tutorial":"Watch tutorial"},"soundtrack":{"header":"Soundtrack","sub":"You can upload MP3 files to create soundtracks for your coubs. The maximum file size is 20 MB."},"video":{"header":"How to create a coub","sub":""}},"messages":{"add_segment_with_wrong_aspect_ration":{"message":"Trying to add segment with wrong aspect ratio","title":"You cannot mix vertical and horizontal video sources"},"audio_too_heavy_error":{"message":"Sorry, the audio is too heavy. You can upload up to 20 MB.","title":"Upload failed"},"audio_upload_error":{"message":"Audio upload error","title":"Upload error"},"cancel":"Cancel","converting":"Converting","coub_will_be_saved_as_new":"Your coub will be saved as new coub.","delete":"Delete","delete_segment":"Do you really want to delete video segment?","downloading":"Downloading","error":"Error","error_coub_not_found":"Coub not found","recording":"Recording","save_button":{"music_is_uploading":"Music is uploading","overall_time_exceeded_error":"Overall time exceeded","video_is_processing":"Please wait, the video is processing"},"save_error":{"message":"Error while saving occurred. Try to reload editor.","title":"Error while saving!"},"save_success":{"message":"Your coub saved successfuly","title":"Saved!"},"saving_while_music_uploading":{"message":"Music upload in progress.","title":"Error while saving!"},"stand_by":"Stand by","unexpected_error":{"message":"Unexpected error occurred. Please try again and email us contact@coub.com if it does not work.","title":"Unexpected error"},"unknown_error":"Unknown error","uploaded":"Uploaded","uploading":"Uploading","video_too_heavy_error":{"message":"Sorry, the video is too heavy. You can upload up to 400 MB.","title":"Upload failed"}},"options":{"description_placeholder":"Caption","upload_music":"Add Music"},"pastable_forms":{"errors":{"empty_url":"You have pasted empty URL","wrong_coub_url":"Wrong coub URL"}},"placeholder":"http://","player":{"be_patient":"Please wait","loading_previous":"Loading previous selection","loading_video":"Loading video","toggle_flash_html5":"HTML5 Editor <span>β</span>"},"popup":{"heading":"Select a coub part you want to insert"},"prompts":{"backloop":"Back Loop","default":"Loop","delete_music":"Delete music","next_frame":"Next frame","prev_frame":"Prev frame","privacy":"Privacy","reactions":"Random Reactions","redo":"Redo","reverse_off":"Ping pong loop off","reverse_on":"Ping-Pong","segment":"Add segment","sound":"Sound","soundtrack":"Add music","splices":"Splices","undo":"Undo"},"remix":{"cant_post_because_dont_changed":{"description":"You have to change sound, choose another frames, or use this coub for montage","title":"You can't post this coub because we already have the same one"}},"safari_stub":{"sub":"Safari not supported, please use another browser (Chrome, Firefox, Opera etc.)"},"save":{"done":"Done","next":"Next"},"segment_popup":{"delete":"Delete","duplicate":"Duplicate segment","mute":"Mute","time_reverse":"Time reverse"},"segments":{"errors":{"coub_is_not_done":"Coub is processing, please try again later"}},"shadow_button":{"title":"Shadow button","tooltip":"Shadow Frame"},"stripes":{"content":{"after":"After","before":"Before","cancel":"Cancel","remove_stripes":"Remove black stripes","return_stripes":"Return black stripes"},"text":{"removed":"Black stripes were removed from this video.","returned":"Black stripes were added to this video."},"text_button":"Cancel"},"sub":"YouTube, Vimeo, Coub, Twitch, Instagram etc.","switch":{"new":"Switch to new editor","old":"Switch to old editor"},"upload":{"be_patient":"Please wait","converting_file":"<strong>Converting: </strong> %{file_name}","downloading_file":"<strong>Downloading: </strong> %{file_name}","header":"Upload a video","reconverting_header":"The video is being reconverted","states":{"converting":"Converting video file","uploading":"Uploading video file"},"sub":"Upload and trim your video. Max: 400 MB and 20 min. Coub supports most video formats.","uploading_file":"<strong>Uploading: </strong> %{file_name}"},"upload_title":"Coub Loop Machine: %{title}","video_upload_errors":{"cant_read":"We could not read this file.","empty_file":"File is empty","exceeds_duration":"Videos must be 20 minutes or shorter.","exceeds_loop_duration":"Videos longer than 10 seconds are not allowed.","falls_short_min_duration":"Video duration is too short","gif_is_too_small":"Gif files should be at least 401x226","no_data":"No data received","unacceptable_file_type":"We don't accept this file type","video_resolution_is_too_big":"Video file resolution is too big","video_resolution_is_too_small":"Video files should be at least 300x100"},"webcam":{"header":"Web camera","reshoot":"Reshoot","sub":"For those moments when your bedroom’s more interesting than the Internet"}},"create_a_coub":"Create","create_a_coub_ext":"Create Coub","customize_popup":{"after_create":{"buttons":{"advanced":"Advanced","back":"Back","clear_tags":"Clear tags","next":"Next","publish":"Publish","publish_and_stay":"Publish & stay in editor","save":"Save"},"heading":"Describe your coub","message_placeholder":"Write something to accompany your post","share_heading":"Share","share_opts":{"adult":{"description":"Mark the coub if there is nudity or violent images. We will require viewers to confirm their age.","label":"Your content will be invisible for users who are not logged in and for those who's age is under 18."},"age_restricted":{"description":"Check this box if your coub contains violence or nudity. Viewers will be asked to confirm that they are over 18.","label":"Mark as adult content"},"allow_reuse":{"description":"Check this box to allow other users to create coubs from your video. Make sure it doesn't contain anything you'd prefer to keep private.","label":"Let others use your video"},"another_coub":{"description":"Check this box to remain in the editor while we process your current coub.","label":"Make another coub from this video"},"cutter":{"description":"We don't cut off black stripes on the coub if enabled. May be useful if your video is dark.","label":"Cut off black stripes"},"dont_crop":{"description":"Check this box to keep the horizontal or vertical black bars around your coub. Otherwise, they'll be automatically cropped out.","label":"Disable auto crop"},"normalize_sound":{"label":"Normalize sound"},"publish_on":{"label":"Publish on"},"user_video":{"label":"Allow to use your video"}},"tags_placeholder":"Use comma or press Enter to separate tags"},"error_messages":{"title_required":"Please write a caption for your coub.","title_too_long":"You've exceeded the 140 character limit."},"select_categories":"Choose community to post","simple_edit":{"buttons":{"cancel":"Cancel","publish":"Save"},"heading":"Edit info","message_after_save":{"header":"Done!","message":"The changes have been saved."}}},"date":{"abbr_day_names":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"abbr_month_names":[null,"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"day_names":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"formats":{"cotd":"%d %B","default":"%Y-%m-%d","long":"%B %d, %Y","short":"%b %d"},"month_names":[null,"January","February","March","April","May","June","July","August","September","October","November","December"],"order":["year","month","day"]},"datetime":{"distance_in_words":{"about_x_hours":{"one":"about 1 hour","other":"about %{count} hours"},"about_x_months":{"one":"about 1 month","other":"about %{count} months"},"about_x_years":{"one":"about 1 year","other":"about %{count} years"},"almost_x_years":{"one":"almost 1 year","other":"almost %{count} years"},"half_a_minute":"half a minute","less_than_x_minutes":{"one":"less than a minute","other":"less than %{count} minutes"},"less_than_x_seconds":{"one":"less than 1 second","other":"less than %{count} seconds"},"over_x_years":{"one":"over 1 year","other":"over %{count} years"},"x_days":{"one":"1 day","other":"%{count} days"},"x_minutes":{"one":"1 minute","other":"%{count} minutes"},"x_months":{"one":"1 month","other":"%{count} months"},"x_seconds":{"one":"1 second","other":"%{count} seconds"}},"prompts":{"day":"Day","hour":"Hour","minute":"Minute","month":"Month","second":"Seconds","year":"Year"}},"dev":{"applications":{"blocks":{"application_settings":{"description":"Your application's id and Secret are used to authenticate requests to the Coub.","labels":{"authorize":"Authorize app","callback":"Callback URL","id":"Application Id","request_token":"Request access token","revoke_token":"Revoke access token","secret":"Secret"},"title":"Application Settings"},"organization":{"description":"Information about the organization or company associated with your application. This information is optional.","labels":{"organization":"Organization","website":"Organization website"},"title":"Organization"}},"buttons":{"add_new_application":"Add application","create_new_application":"Create","delete":{"cancel":"Cancel","label":"<i></i>Delete application","ok":"Ok"},"menu":{"details":"Details","settings":"Settings"},"oauth":{"cancel":"Cancel","ok":"Okay"},"update_application_settings":"Update settings","upload_avatar":"<i></i><br>Add your app icon"},"delete_description":"Are you sure you want to delete this application? This action cannot be undone!","form":{"agreement_checkbox":"Creating this application I agree to the <a href=\"/api-terms\" class=\"-color--blue-ribbon\">Terms of Service</a>","agreement_error":"You cannot create an application without agreeing to the terms of service","descriptions":{"callback":"Where should we return after successfully authenticating?","description":"Your application description, which will be shown in user-facing authorization screens.","image":"JPG, GIF, PNG","name":"Your application name, which will be shown in user-facing authorization screens.","organization_name":"The organization or company behind this application, if any.","organization_website":"The organization or company behind this application's web page, if any.","website":"Your application's publicly accessible home page, where users can go to download, make use of, or find out more information about your application."},"error":"This field is invalid","labels":{"android_url_scheme":"Android app scheme","app_store_url":"App Store link","callback":"Callback URL","channel_url":"Coub channel link","description":"Description","google_play_url":"Google Play link","image":"Application icon","ios_url_scheme":"IOS app scheme","name":"Name","organization_name":"Name","organization_website":"Website","website":"Website"}},"headers":{"application":"Application","applications":"Applications","delete_popup":"Delete application","new_application":"New application","oauth_popup":"Authorize required"},"oauth":{"description":"<b>%{app_name}</b> will receive your coub account info and:"},"titles":{"new_application":"Add new application"}},"docs":{"header":"API Documentation","search":{"label":"Search docs","nothing_found":"Oops, nothing found","title":"Search"}}},"doorkeeper":{"applications":{"buttons":{"authorize":"Authorize","cancel":"Cancel","destroy":"Destroy","edit":"Edit","submit":"Submit"},"confirmations":{"destroy":"Are you sure?"},"edit":{"title":"Edit application"},"form":{"error":"Whoops! Check your form for possible errors"},"help":{"native_redirect_uri":"Use %{native_redirect_uri} for local tests","redirect_uri":"Use one line per URI"},"index":{"callback_url":"Callback URL","name":"Name","new":"New Application","title":"Your applications"},"new":{"title":"New Application"},"show":{"actions":"Actions","application_id":"Application Id","callback_urls":"Callback urls","secret":"Secret","title":"Application: %{name}"}},"authorizations":{"buttons":{"authorize":"Authorize","deny":"Deny"},"error":{"title":"An error has occurred"},"new":{"able_to":"This application will be able to","prompt":"Authorize %{client_name} to use your account?","title":"Authorize required"},"show":{"title":"Authorization code"}},"authorized_applications":{"buttons":{"revoke":"Revoke"},"confirmations":{"revoke":"Are you sure?"},"index":{"application":"Application","created_at":"Created At","date_format":"%Y-%m-%d %H:%M:%S","title":"Your authorized applications"}},"errors":{"messages":{"access_denied":"The resource owner or authorization server denied the request.","credential_flow_not_configured":"Resource Owner Password Credentials flow failed due to Doorkeeper.configure.resource_owner_from_credentials being unconfigured.","invalid_client":"Client authentication failed due to unknown client, no client authentication included, or unsupported authentication method.","invalid_grant":"The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client.","invalid_redirect_uri":"The redirect uri included is not valid.","invalid_request":"The request is missing a required parameter, includes an unsupported parameter value, or is otherwise malformed.","invalid_resource_owner":"The provided resource owner credentials are not valid, or resource owner cannot be found","invalid_scope":"The requested scope is invalid, unknown, or malformed.","invalid_token":{"expired":"The access token expired","revoked":"The access token was revoked","unknown":"The access token is invalid"},"resource_owner_authenticator_not_configured":"Resource Owner find failed due to Doorkeeper.configure.resource_owner_authenticator being unconfiged.","server_error":"The authorization server encountered an unexpected condition which prevented it from fulfilling the request.","temporarily_unavailable":"The authorization server is currently unable to handle the request due to a temporary overloading or maintenance of the server.","unauthorized_client":"The client is not authorized to perform this request using this method.","unsupported_grant_type":"The authorization grant type is not supported by the authorization server.","unsupported_response_type":"The authorization server does not support this response type."}},"flash":{"applications":{"create":{"notice":"Application created."},"destroy":{"notice":"Application deleted."},"update":{"notice":"Application updated."}},"authorized_applications":{"destroy":{"notice":"Application revoked."}}},"layouts":{"admin":{"nav":{"applications":"Applications","oauth2_provider":"OAuth2 Provider"}},"application":{"title":"OAuth authorize required"}},"scopes":{"channel_edit":"Edit your channels","coub_create":"Create coubs","create":"Create coubs","follow":"Follow channels","logged_in":"View your channels info","recoub":"Recoub"}},"editor":{"avatar_moderation":"Avatar Moderation","background_moderation":"Background moderation","channel_stats":{"queue_count":"(%{count})","queue_header":"Recoubs queue for <a href='%{url}'>%{name}</a>","queue_title":"Recoubs queue"},"channels_stats":"Channels Stats","cotd":{"header":"Coub of the day"},"coubs":{"age_restricted":"18+","all":"All","banned":"Banned","bookmarked":"Bookmarked","channels":"Channels","coubs_by_countries":"Coubs by countries","coubs_from_source":"Coubs from source","created_in_us_ca_au_gb":"Created in US, CA, AU, GB","edited":"Edited","flagged":"Flagged","hot":"Hot","ios_moderated":"iOS Moderated","ios_recent":"iOS Recent","likes_count":"Likes Count","moderated":"Moderated","popular_banned":"Popular Banned","recent":"Recent","suggestions":"Suggestions","users":"Users","views_count":"Views Count"},"editors_stats":"Editors stats","explore_queue":"Explore queue","featured_channels":"Featured Channels","flags_list":{"ads_disabled":"No ads","age_restricted":"18+","age_restricted_by_admin":"18+","banned":"Ban","copyright_banned":"Copyright","no_category":"No, thanks","not_safe_for_work":"NSFW","popular_banned":"Unhot","visible_on_explore_root":"Explore"},"global_safe":"Global safe","global_stats":{"heading":"Global Coubs Stats"},"moderated_button":"Moderated","pane":"Editor Control Pane","recouber":{"delayed":"Delayed publish","publish_now":"Publish now"},"remove_tag_from_coub":{"confirmation":"Are you sure you want to remove tags <<%{tags}>> from coub","hint":"Remove tag from coub"},"saved_users":"Saved users","search_tags_pane":"Search Tags Pane","suggest_stats":{"header":"Suggest stats (Pairs total: %{suggestions})","pair_shows":"Shows: %{shows_count}"},"timeline_controls":{"order":{"new":"New","old":"Old","top_likes":"Top likes","top_views":"Top views"}},"weekly_digest":{"archive_weekly":"Archive","content":"Content","control":"Control","current_weekly":"Archive weekly","date":"Date","date_title":"Digest from %{from} to %{to}","from":"Date from","status":"Status","test":"Test","title":"Weekly Digest","title_channels":"Channels","title_coubs":"Coubs","to":"Date to","will_be_sent":"Deadline"},"weekly_digests":"Weekly Digests"},"elements":{"followers":{"one":"Follower","other":"Followers"},"followings":"Following"},"embed_errors":{"403":{"heading":"Sorry, an unexpected error occurred."},"404":{"heading":"This coub had been removed by the user."},"500":{"heading":"This coub is unavailable due to the user's privacy settings."},"bottom":"You can use %{link} to find coubs with same title.","e_403":{"heading":"This coub is unavailable due to the user's privacy settings."},"e_404":{"heading":"This coub had been removed by the user."},"e_500":{"heading":"Sorry, an unexpected error occurred."},"link":"search on coub.com"},"errors":{"access_denied":{"header":"You do not have permission to view this page."},"auth_failed":{"header":"Authorization failed","sub":"It seems, that you cancelled authorization process. Please, try again."},"authentication_error":{"header":"An error has occurred","sub":"An authentication error has occurred"},"deleted_user":{"header":"User has been deleted","sub":"This user is no longer exists"},"format":"%{attribute} %{message}","internal_server_error":{"header":"Sorry, this page cannot be shown at this time.","sub":"An unexpected error occurred.","try_again":"We are working to solve this issue.<br />Please try again later."},"messages":{"accepted":"must be accepted","blank":"can't be blank","confirmation":"doesn't match %{attribute}","empty":"can't be empty","equal_to":"must be equal to %{count}","even":"must be even","exclusion":"is reserved","greater_than":"must be greater than %{count}","greater_than_or_equal_to":"must be greater than or equal to %{count}","inclusion":"is not included in the list","invalid":"is invalid","less_than":"must be less than %{count}","less_than_or_equal_to":"must be less than or equal to %{count}","not_a_number":"is not a number","not_an_integer":"must be an integer","odd":"must be odd","other_than":"must be other than %{count}","present":"must be blank","taken":"has already been taken","too_long":{"one":"is too long (maximum is 1 character)","other":"is too long (maximum is %{count} characters)"},"too_short":{"one":"is too short (minimum is 1 character)","other":"is too short (minimum is %{count} characters)"},"wrong_length":{"one":"is the wrong length (should be 1 character)","other":"is the wrong length (should be %{count} characters)"}},"not_found":{"check_coubs":"While you're here, check out these coubs:","header":"Sorry, that page doesn't exist.","show_others":"Show me more","sub":"Please check the URL address or use the search function."},"oauth_token_restrictions":{"too_many_requests":"Request limit exceeded"},"required":{"bug_report":"This fields are required"},"too_fast":{"follow":"You are following too fast","like":"You are liking too fast","recoub":"You are reposting too fast","slow_down":"Please slow down"}},"explore_page":{"description":"Newest and featured coubs to discover. ","hot":{"description":"Trending coubs."}},"external_download":{"errors":{"access_denied":"Access to this video is denied by the owner.","cant_download_this_file":"Videos bigger than 400MB are not allowed.","exceeds_duration":"Videos must be 20 minutes or shorter.","external_service_error":"External service might be not accessible. Please try again later.","file_is_too_big":"Videos bigger than 400MB are not allowed.","instagram_not_video":"Not Instagram video","internal_server_error":"An error occurred during the upload. Our support team has automatically been notified. Please try again later.","invalid_carambatv_video":"Url provided is not CarambaTV video.","invalid_dailymotion_video":"Url provided is not Dailymotion video.","invalid_live_leak_video":"Url provided is not Live Leak video.","invalid_odnoklassniki_video":"Url provided is not Odnoklassniki video.","invalid_twitter_video":"Url provided is not Twitter video.","invalid_url":"URL is invalid","invalid_vk_video":"Url provided is not Vk video.","invalid_wimp_video":"Can't download this file","no_meta":"No video could be found. This might be due to a copyright issue.","not_found":"No video could be found. Please check if the link is correct.","rate_limit":"Hit rate limit. Please try again later.","service_not_available":"External service is not available, please try again later","video_not_available":"The video is is not available. We can't download it. Sorry.","vk_auth_required":"The video is not public. We can't download it. Sorry."}},"find_friends":{"banners":{"facebook":{"button":"Connect Facebook","heading":"Coub is better with friends","text":"Connect Facebook to find your friends on Coub."},"google":{"button":"Import now","heading":"Coub is better with friends!","text":"Import contacts from <strong>%{email}</strong> to find your friends on Coub."},"twitter":{"button":"Connect Twitter","heading":"Coub is better with friends","text":"Connect Twitter to find your friends on Coub."}},"errors":{"friends_not_found":"Friends from provider not found"},"from_facebook":"From Facebook","from_google":"From Gmail","from_twitter":"From Twitter","from_vkontakte":"From Vkontakte","invite":{"facebook":{"invite_message":"Join Coub, man"}},"page":{"connect":"Connect your social networks to find<br />your friends channels on Coub.","errors":{"invalid_emails":"Invalid emails: ","invitations_already_sent_to":"Invintations already sent to: ","invites_sent_to":"Invitations sent to: "},"follow_all":"Follow all","heading":"Find friends on Coub","invintation_sent":"Invitation sent.","invite_all":"Invite All","invite_missing":"Invite whoever's missing","invite_missing_tip":"Ask your friends to join you on Coub.","invite_via_email":"Invite friends via email","invite_via_email_placeholder":"Invite friends to coub via email","invite_via_email_tip":"Separate multiple email addreses with commas.","no_friends_found":"No friends found :(","no_friends_found_tip":"Ask your friends to join you on Coub and have fun!","no_social":"No friends—no fun. Find them!","no_social_tip":"Connect to social networks to invite. Or invite by email.","registered_filter_placeholder":"Search using full name, or channel name","send_more":"Send a new one?","unregistered_filter_placeholder":"Filter","who_to_follow":"Who to follow"}},"flash":{"actions":{"create":{"notice":"%{resource_name} was successfully created."},"destroy":{"alert":"%{resource_name} could not be destroyed.","notice":"%{resource_name} was successfully destroyed."},"update":{"notice":"%{resource_name} was successfully updated."}}},"flashes":{"failure_after_create":"Bad email or password.","failure_after_update":"Password can't be blank.","failure_when_forbidden":"Please double check the URL or try submitting the form again.","failure_when_not_signed_in":"Please sign in to continue."},"follow_confirmation":{"confirm":"Confirm channel following"},"footer":{"acrcloud":"Audio recognition by <a href=\"https://www.acrcloud.com\" target=\"_blank\">ACRCloud</a>.","copyright":"&copy;&nbsp;%{years}&nbsp;Coub.","menu":{"about":"About","advertise":"Advertise","apps":"Apps","blog":"Blog","brand_assets":"Brand","developers":"Developers","dmca":"DMCA","faq":"Help","privacy":"Privacy","terms":"Terms"},"selectel":"Hosted on <a href=\"http://selectel.com\" target=\"_blank\">Selectel</a>."},"footer_ios":{"menu":{"about":"About","explore":"Explore","terms":"Terms"}},"footer_mainpage":{"menu":{"about":"About","brand_assets":"Brand","developers":"Developers","faq":"Help","media":"Media","terms":"Terms"}},"growl_errors":{"channels":{"change":{"title":"Change channel"}},"coub_abuse_dropdown":{"error_empty":"Your complaint is empty. Please describe the reason that reflects your concern about this coub.","error_while_delete":"Error occured while deleting your complaint. Please try again later.","error_while_send":"Error occured while sending your complaint. Please try again later.","header":"Flag"},"like":{"error_when_set":"Error occured. Please, try again later.","header":"Like"},"recoub":{"error_when_set":"Error occured. Please, try again later.","header":"Repost"},"reload":{"error":"Please reload this page","header":"Page error"},"save_error":"Save error","unlike":{"error_when_set":"Error occured. Please, try again later.","header":"Unlike"},"unrecoub":{"error_when_set":"Error occured. Please, try again later.","header":"Undo repost"}},"guide":{"button":"Got it!","simple_helper":{"hide_owner_helper":"This shows that you run the channel. If you'd prefer to keep this private, you can remove the crowns in settings.","hide_owner_helper_title":"Crown sign"}},"headers":{"signup_from_invite_title":"Coub"},"helpers":{"button":{"create":"Create %{model}","submit":"Save %{model}","update":"Update %{model}"},"label":{"password":{"email":"Email address"},"password_reset":{"password":"Choose password"}},"page_entries_info":{"entry":{"one":"entry","other":"entries","zero":"entries"},"more_pages":{"display_entries":"Displaying %{entry_name} <b>%{first}&nbsp;-&nbsp;%{last}</b> of <b>%{total}</b> in total"},"one_page":{"display_entries":{"one":"Displaying <b>1</b> %{entry_name}","other":"Displaying <b>all %{count}</b> %{entry_name}","zero":"No %{entry_name} found"}}},"select":{"prompt":"Please select"},"submit":{"application":{"create":"Create Application","update":"Update Application"},"audio_track":{"create":"Create Audio track"},"create":"Create %{model}","developer_application":{"update":"Update Application"},"embedded_overlay":{"create":"Create Embedded overlay","update":"Update Embedded overlay"},"emoji":{"create":"Create Emoji"},"http://coub":{"dev/editor/search_tags":{"submit":"Save Http://coub.dev/editor/search tags"}},"invitation":{"create":"Create Invitation"},"media_block":{"create":"Create Media block","update":"Update Media block"},"password":{"submit":"Reset password"},"password_reset":{"submit":"Save this password"},"promo_rules":{"create":"Create Promo rules"},"saved_user":{"create":"Create Saved user"},"session":{"submit":"Sign in"},"submit":"Save %{model}","update":"Update %{model}","user":{"create":"Sign up","update":"Update User"}}},"hints":{"profile":{"avatar_upload":{"content":"If there's no picture here your channel won't be featured. 300x300 or larger looks best.","heading":"Upload your picture"},"cover_upload":{"content":"Use HD coub or really big image to make your channel awesome","heading":"Upload channel cover"},"liked_by":{"heading":{"many":"You liked %{count} coubs created by <strong>%{title}</strong>","one":"You liked %{count} coub created by <strong>%{title}</strong>"}}}},"i18n":{"transliterate":{"rule":{"Ё":"Yo","А":"A","Б":"B","В":"V","Г":"G","Д":"D","Е":"E","Ж":"Zh","З":"Z","И":"I","Й":"Y","К":"K","Л":"L","М":"M","Н":"N","О":"O","П":"P","Р":"R","С":"S","Т":"T","У":"U","Ф":"F","Х":"H","Ц":"Ts","Ч":"Ch","Ш":"Sh","Щ":"Sch","Ъ":"","Ы":"Y","Ь":"'","Э":"E","Ю":"Yu","Я":"Ya","а":"a","б":"b","в":"v","г":"g","д":"d","е":"e","ж":"zh","з":"z","и":"i","й":"y","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"h","ц":"ts","ч":"ch","ш":"sh","щ":"sch","ъ":"","ы":"y","ь":"'","э":"e","ю":"yu","я":"ya","ё":"yo","ა":"a","ბ":"b","გ":"g","დ":"d","ე":"e","ვ":"v","ზ":"z","თ":"t","ი":"i","კ":"k'","ლ":"l","მ":"m","ნ":"n","ო":"o","პ":"p'","ჟ":"zh","რ":"r","ს":"s","ტ":"t'","უ":"u","ფ":"p","ქ":"k","ღ":"gh","ყ":"q'","შ":"sh","ჩ":"ch","ც":"ts","ძ":"dz","წ":"ts'","ჭ":"ch'","ხ":"kh","ჯ":"j","ჰ":"h"}}},"image_for_sharing":{"stories":{"coubs_count":{"one":"%{count} coub","other":"%{count} coubs"},"story":"Story"}},"invite_friends":{"messages":{"common":"%{name} invited you to join Coub. Invite is non-transferable. Go check out what's on the plate. %{invite_link}"},"timeline":{"buttons":{"invite":"Invite"}}},"layouts":{"application":{"sign_in":"Sign in","sign_out":"Sign out"}},"likes_page":{"heading":"MY LIKES"},"locale_selector":{"language":"English","selected":"Language: <span>English</span>"},"logout":"Logout","mail_registration_form":{"have_an_account":"<span data-dialog-change=\"sign_in\">Have an account? <b>Log in</b></span>","legal_note":"By creating account, you agree and understand our <a href=\"#{terms_of_service_page_path}\" target=\"_blank\">Terms of Service</a> and <a href=\"#{terms_of_service_policy_page_path}\" target=\"_blank\">Privacy Policy</a>.","legal_note_1":"By creating account, you agree and understand our <a href=\"%{tos_url}\" target=\"_blank\">Terms of Service</a> and <a href=\"%{privacy_policy_url}\" target=\"_blank\">Privacy Policy</a>.","popup_title":"<b>New to Coub?</b><br/>Sign up","sign_up_btn":"Sign up"},"mailer":{"android_promo":{"body":"Meet our new-born native application for Android. Watch, explore and create coubs on the go.","title":"Yay! Coub is on Android!"},"app_release":{"press":{"coubs_heading":"Check out the most-liked coubs of 2013","desc_heading":"The Coub iPhone app is here!","desc_sub_one":"The app lets users watch and create short, looped videos with full-length audio tracks.","desc_sub_three":"Make your friends laugh, share your creativity, and get inspired!","desc_sub_two":"Coubs are funny, exciting, and moving, and with almost a quarter million videos already on the service, there’s something for everybody to discover.","heading":"We have two awesome news for you!","unsubscribe":"<a href=\"%{url}\">Unsubscribe</a> if you do not want to receive these messages.","visitors_contact":"For more information, contact Igor Gladkoborodov at +1 (415) 688-9129 or <a href='mailto:igor@coub.com'>igor@coub.com</a>.     ","visitors_heading":"Over 28 million unique visitors per month reached","visitors_sub_one":"<a href=\"http://coub.com/\">Coub.com</a> was founded in Russia in April 2012. It began to gather steam in early 2013 thanks to viral content, attracting 28 million unique visitors last month, 70 percent of whom live in Eastern Europe.","visitors_sub_two":"Watch and collect coubs created by others.&nbsp;Funny, exciting, beautiful, moving — coubs come in all shapes and sizes. Make your friends laugh, share&nbsp;your vision&nbsp;with 28 million monthly viewers, get inspired. Coub!"},"title":"Coub have two awesome news for you!","users":{"desc":"Coub is a place for creativity and discovery. Make short looped videos, adding an optional soundtrack, and share them with friends, family and fellow coubists.","heading":"Coub is now on the iPhone!"}},"best_2015_beeline_mail":{"button_beeline":"Узнать больше","button_collection":"Сделать свою подборку","description":"И выиграй один из-3х iPhone 6s!","from":"Coub <best2015@coub.com>","note":"Так же у «Билайн» сейчас проходит акция","title":"Best coubs 2015","title_1":"Собери свою подборку лучших коубов "},"best_2015_mail":{"button":"Check it out","description":"The coubs that ruled Coub in 2015","from":"Coub <best2015@coub.com>","title":"Best coubs 2015"},"best_2015_memes_mail":{"button":"Check it out","from":"Coub <best2015@coub.com>","title_1":"Best Coub Memes 2015"},"best_2016_mail":{"header":"Best Coubs 2016","subject":"Best coubs of 2016","text":"Look no further for the finest<br />and funniest coubs of the year.","watch":"Watch"},"best__2015__mail":{"description":"The coubs that ruled Coub in 2015."},"best_coubs":{"title":"Best coubs of 2013"},"best_coubs_2014":{"body":"The most liked coubs of the year, hidden gems and popular tags.","button":"Check it out","title":"Best coubs of 2014"},"bug_report":{"profile":"Profile: <a href='%{profile}'>%{profile}</a>","referrer":"<a href='%{ref}'>%{ref}</a>","user_email":"<a href='mailto:%{email}'>%{email}</a>"},"channels":{"channel_accept":{"body":"<span></span> channel approved your submit coub <span>%{title}</span>","button":"Check it"},"channel_invite":{"body":"Your Facebook friend %{sender} invited you to take part in channel "},"channel_request":{"body":"<span>%{name}</span> submitted coub %{title} to your channel <span></span>","button":"Check it"}},"daily_digest":{"and_more":"%{number} more","and_more_recoub":"%{number} more","and_one_more":"%{number} more","and_one_more_recoubed":"%{number} more","title":"Daily Digest!"},"editor_reminder":{"button":"Make a coub","title":"Your video <span>%{title}</span> finished uploading. </br>\r\nClick the button to make a coub out of it."},"editor_reminder_mail":{"subject":"Editor reminder mail"},"feedback":{"from":"Feedback from:","message":"Feedback message","profile":"%{name}","title":"Feedback from “%{email}”","type":"Feedback type"},"follow_mail":{"title":"You have new followers on Coub","title_multi":"You have new followers on Coub","title_single":"You have a new follower on Coub"},"footer":{"fake":"You can <a href='%{unsubscribe_link}''>unsubscribe</a> from all messages from Coub. Please do not reply to this email; it was sent from an unmonitored address. For support, contact, <a href='mailto:support@coub.com'>support@coub.com</a>.","regular":"You can <a href='%{unsubscribe_link}'>unsubscribe</a> from all messages from Coub. Please do not reply to this email; it was sent from an unmonitored address. For support, contact <a href='mailto:support@coub.com'>support@coub.com</a>.","system":"Do not reply to this email; it was sent from an unmonitored address. For support, contact <a href='mailto:support@coub.com'>support@coub.com</a>.","unsubscribe":"If you do not want to receive these messages, change your <a href='%{settings_link}'>email preferences</a>. You can also <a href='%{unsubscribe_link}'>unsubscribe</a> from all messages from Coub. Please do not reply to this email; it was sent from an unmonitored address. For support, contact <a href='mailto:support@coub.com'>support@coub.com</a>.","unsubscribe-btn":"Unsubscribe","weekly":"You can <a href='%{unsubscribe_link}'>unsubscribe</a> from messages from Weekly Digest. Please do not reply to this email; it was sent from an unmonitored address. For support, contact, <a href=\"mailto:support@coub.com\">support@coub.com</a>."},"header":"","header_invite":"You have been invited to join Coub (What the fuck is coub?)","invite":{"coubs_title":"Check out these awesome coubs to get started.","description":"You should join Coub, it's awesome!","title":"<strong>%{name}</strong> has invited you to join Coub","title_mail":"You've been invited to join Coub"},"invite_friend_mail":{"subject":"Invite friend mail"},"like_mail":{"title":"Your coubs got liked","title_multi":"Your coubs got liked","title_single":"Your coub got liked"},"new_category_mail":{"title":"Your coubs featured","title_multi":"Your coubs have been featured","title_single":"Your coub has been featured"},"new_editor":{"body":"New coub editor is perfect for quickly looping and remixing videos. Now you can create video mashups with up to 10 video sources!","title":"New editor","video":"Watch this short video:"},"new_follower":{"button":"Follow","followers":"%{total_count} followers","following":"%{total_count} following ・ ","mutual":{"one":"%{name} is also following %{count} person you know.","other":"%{name} is also following %{count} people you know."},"started":"is now following you on Coub!","sub_heading":"Hey %{name}, you have a new follower!","title":"%{sender} is now following you!"},"new_ios_editor":{"button":"Try it now!","desc":"Meet The Whole New iPhone Editor","header":"Create coubs like a boss","step1":{"desc":"Create coubs from YouTube, Vine, Instagram, Facebook and loads more.","title":"Use any video"},"step2":{"desc":"Use up to 10 parts, mash them up whatever way you want.","title":"Multiple parts"},"step3":{"desc":"Complete and publish your masterpieces later.","title":"Save as drafts"},"title":"New iOS editor","video":"Watch our short video:"},"new_like":{"partial_title":"%{title} was liked by","partial_title_single":"%{title} was liked by %{name}","title":"%{name} liked “%{title}”"},"new_recoub":{"no_followers":"%{name} has reposted “%{title}”","partial_title":"%{title} has been reposted by","partial_title_single":"%{title} has been reposted by %{name}","recoub":{"one":"%{name} has reposted “%{title}” to %{count} follower","other":"%{name} has reposted “%{title}” to %{count} followers"},"recoubed_by":"Your coub %{title} has been reposted by %{name}","started":"has reposted you","title":"%{name} has reposted your coub"},"recoub_mail":{"title":"Your coubs got reposted","title_multi":"Your coubs got reposted","title_single":"Your coub got reposted"},"regular_update":{"like":"%{name} likes your coub “%{title}”","title":"%{name} likes your coub","title_2":"Daily activity"},"reset_password":{"body":"<p>Click the button to reset the password<br/> for your Coub account.</p>","btn_alt":"Reset password","button":"Reset password","heading":"Hi %{name},","link":"Please click the button to create a new password for your Coub account.","title":"Reset your Coub password"},"sub_titles":{"cotd_mail":"Your coub got featured <br/>in Coub Of The Day.","daily_likes":"Daily likes","invite_email":"Hey!","invite_mail":"You have been invited to join Coub. (<a href='http://coub.com/about'>Wait, what the hell is Coub?</a>)","new_follower":"Hey %{name}, you have a new follower!","share_coub":"Hey %{name}!","share_coub_not_user":"Hey! Coub has been recommended for you"},"system_notification":{"banned":{"body":"It has been set to Private and can't be reset to Public. For more information about Coub content rules, check out the %{community_guidelines}, or contact <a href='mailto:support@coub.com'>our team</a> with any questions.","header":"Your coub %{title} has been banned from public view.","title":"Your coub has been banned from public view"},"copyright_ban":{"body":"We’ve received a claim on intellectual property used in this Coub. It has been set to Private and can't be reset to Public. For more information about Coub content rules, check out the %{community_guidelines}, or contact <a href='mailto:support@coub.com' style=\"color: #0433ff;\">our team</a> with any questions.\r\n","body_long":"This email correspondence is provided as formal notice to you as the User of Coub Services that your Contribution of User Generated Content provided through the Coub Services, including on the Coub Website has been removed due to a claim of copyright infringement in a DMCA Copyright Notice.<br><br>This action has been taken by Coub Ltd. (the “Company”) as an online service provider in accordance with Section 512 of the Digital Millennium Copyright Act (“DMCA”) and the terms and conditions you agreed to under the Terms of Service Agreement (“Agreement”) when you registered as a User for the Coub Services.&nbsp; Under the notice procedures related to the Company’s Copyright Policy in Section 9 of the Agreement, if you receive a notification that your Contribution of User Generated Content provided through the Coub Services, including on the Website has been removed due to a claim of copyright infringement in a DMCA Copyright Notice, it means that the Co ntribution’s content has been deleted from the Coub Services at the request of the content's owner.<br><br>If you believe that the User Generated Content comprising your Contribution was removed in error, you have the option to file a counter-notice (“Counter-Notice”) by following the steps provided pursuant to the Agreement (“Procedures”) which may be accessed <a href=\"http://coub.com/dmca\">here</a>.<br><br>Please review carefully the requirements for a valid Counter-Notice provided in the Procedures at the link and be sure you are able to demonstrate legitimate copyright ownership in the works comprising your Contribution as such term is defined in the Agreement. Upon receipt of a valid Counter-Notice from you as the identified User, we will forward a copy of the Counter-Notice to the person who filed the original DMCA Copyright Notice. If we do not receive notice within 10 business days thereafter that the submitter of the original claims in their DMCA Copyright Notice is seeking a court order to prevent further infringement of the content at issue, we will remove the claim and the DMCA Copyright Notice from your account's record, and we may, but are not obligated to, replace your Contribution of User Generated Content that was removed.<br><br>Please Note: There are legal and financial consequences for fraudulent and/or bad faith submissions. Before submitting a Counter-Notice, be sure that you are the actual rights holder of the removed content or that you have a good faith belief that the material was removed in error, and understand the repercussions of submitting a false claim. This information is provided for informational purposes only and should not be considered legal advice. Users are urged to consult legal counsel if they believe their rights have been violated. Please consult the Procedures and Agreement and if you have any further questions relating to the Procedures we may be contacted at <a href=\"mailto:support@coub.com\">support@coub.com</a>.","header":"Your coub %{title} has been removed due to DMCA copyright notice from copyright owner.","mail_header":"Notice of removal of Coub user generated<br>content based on DMCA copyright notice from copyright owner","title":"Your coub has been removed due to DMCA copyright notice from copyright owner"},"cotd":{"body":"%{title}","header":"You Rock!","title":"%{recipient}, you rock!"},"editor_reminder":{"button":"Make a coub","header":"%{title}","title":"Your video has been uploaded"},"marked_18":{"body":"Your coub will only be visible to users over the age of 18. For more information about Coub content rules, check out the %{community_guidelines}, or contact <a href='mailto:support@coub.com' style=\"color: 0433ff;\">our team</a> with any questions.\r\n","header":"Your coub %{title} has been marked as 18+ for adult content","title":"Your coub has been marked as 18+"},"new_category":{"body":"This means we like your coub so much, it is now under %{explore}. Now more people will get to enjoy it!","header":"Your coub %{title} has been featured","title":"Your coub has been featured!"}},"unsubscribe":"Turn off notifications for this coub","verify_email":{"body":"Hey <span>%{recipient}</span>, we want to make sure that this is your email address. <br>\r\nTo start using Coub, click this button.","button":"Verify email","heading":"Welcome to Coub!","link":"If you don't see the button above, ","link_text":"click here","title":"Verify your email"},"weekly_digest":{"best_channels":"Featured channels to follow","best_coubs":"Best coubs of the week","follow_btn":"Follow","follow_button":"Follow","n_dash":"&#8212;","title":"Watch all the week's best coubs","view_full":"Watch All"}},"meta":{"channels":{"index":{"description":"We feature channels here."}},"coub":{"description":"%{title} by %{author}","og_description":"by %{author}","tags":" · %{tags}","vk_title":"%{title} · #coub, #коуб"},"default_title":"Coub","description":"Coub is YouTube for video loops. You can take any video, trim the best part, combine with other videos, add soundtrack. It might be a funny scene, movie quote, animation, meme or a mashup of multiple sources.","developers":{"docs":{"description":"Coub API documentation","main":{"title":"Api documentation"}}},"image":"og/coub_og_image.png","keywords":"coub, video, loop, gif, animation, social, media, mashups, living photo, animated gif, gifs, gif, cinemagraph, gifsound, perfect loop, vine alternative, migrate from vine, video, video editor","pages":{"about":{"description":"Coubs are a new media format. Text, sound, video and photos are forms of media. Imagine Coub in between video and photos, with sound.","title":"What is Coub?"},"best_coubs2013":{"description":"It’s time to look back at the best coubs of the past year. Check out the most popular coubs and our selection of hidden gems and memes from 2013. Enjoy! Happy New Year!","image":"og/best_2013_og_image.jpg","title":"Coubs of the year 2013"},"best_coubs2014":{"description":"It’s time to look back at the best coubs of the past year. Check out the most popular coubs and our selection of hidden gems and tags from 2014. Enjoy! Happy New Year!","title":"Coubs of the year 2014"},"best_coubs2015":{"title":"Coubs of the year 2015"},"channels":{"description":"How to organize your Coub experience","image":"og/channels_og_image.jpg","title":"Channels"},"docs":{"show":{"description":"Coub - API documentation"}},"index":{"description":"Coub is a living photograph. A short moment looped infinitely. Coub is a XXI century family photobook, and a new media for presenting an impressive portfolio or to cover a breaking news story."},"media":{"description":"Coub for Media: how to use Coub if you work in media.","title":"Media"},"new_editor":{"description":"Coub is perfect for quickly looping and remixing videos without the fuss of professional software.","title":"Create a coub"},"tos":{"description":"The rules."},"weekly":{"description":"New channels to follow. Best coubs to watch.","image":"og/weekly_og_image.png","title":"Coub Weekly"}},"posts":{"description":"Tips, news, ideas."},"raw_videos":{"new":{"description":"Online video editor that works in your browser. Take any video, trim the best part, combine with other videos or add a soundtrack.","image":"og/editor_og_image.png"}},"site_name":"Coub","startpage":{"index":{"title":"Coub: In Loops We Trust"}},"title":"Coub - The Biggest Video Meme Platform","weekly_digests":{"index":{"description":"New channels to follow. Best coubs to watch."}}},"mobile":{"coub":"Coub","coub_page":{"like":"Like","no_access":{"banned":"This coub has been banned.","channel_title":"Someone","copyright_banned":"This coub has been removed due to DMCA copyright notice from copyright owner.","date":"Some day","friends_only":"This coub is friends only. It is visible only to those who follow the creator.","private":"This coub is private. It is visible only to the creator."},"open_in_app":"Open in app","recoub":"Recoub","share":"Share","source":"from <a href=\"%{url}\">%{name}</a> · ","suggestions":"suggestions","views":{"one":"view","other":"views"}},"get_app":"Get Coub App","header":{"chats":"Chats","create":"Create","home":"Home","hot":"Popular"},"install":"Install","open_in_app":"Open in App","sharing__button_facebook":"Facebook","sharing__button_imessage":"iMessage","sharing__button_kik":"kik","sharing__button_messenger":"Messenger","sharing__button_telegram":"Telegram","sharing__button_tumblr":"Tumblr","sharing__button_twitter":"Twitter","sharing__button_whatsapp":"WhatsApp","story_page":{"like":"Like","repost":"Repost"},"stub":{"add_to_bookmarks":"Please Use Coub App to&nbsp;Add Coubs to Bookmarks","base":"Please Use Coub App to&nbsp;","best2018_gems":"%{base}Watch Hidden Gems of 2018","best2018_likes":"%{base}Watch Best Coubs of 2018","best2018_memes":"%{base}Watch Memes of 2018","best2019_gems":"%{base}Watch Hidden Gems of 2019","best2019_likes":"%{base}Watch Best Coubs of 2019","best2019_memes":"%{base}Watch Memes of 2019","bookmarks":"%{base}Watch Your Bookmarks","channel":"%{base}Watch More Coubs from %{channel}","chat":"%{base}Chat","community":"%{base}Watch More Coubs from %{community}","community_follow":"Please Use Coub App to&nbsp;Follow Communities","create":"%{base}Create Coubs","default":"%{base}Watch This Page","description":"Enjoy the full Coub experience with our fast and free app","featured":"%{base}Watch More Featured Coubs","feed":"%{base}Watch Your Feed","follow":"Please Use Coub App to&nbsp;Follow","hot":"%{base}Watch More Hot Coubs","like":"Please Use Coub App to&nbsp;Like","likes":"%{base}Watch Your Likes","message":"Please Use Coub App to&nbsp;Send a Message","random":"%{base}Watch More Random Coubs","repost":"Please Use Coub App to&nbsp;Repost","stories":"%{base}Watch Stories","stories_feed":"%{base}Watch Stories Feed","tag":"%{base}Watch More #%{tag} Coubs","weekly":"%{base}Watch More Best Coubs of the Week"}},"mongo_mapper":{"attributes":{"doorkeeper/application":{"name":"Name","redirect_uri":"Redirect URI"}},"errors":{"models":{"application":{"attributes":{"redirect_uri":{"fragment_present":"cannot contain a fragment.","invalid_uri":"must be a valid URI.","relative_uri":"must be an absolute URI."}}},"doorkeeper/application":{"attributes":{"redirect_uri":{"fragment_present":"cannot contain a fragment.","invalid_uri":"must be a valid URI.","relative_uri":"must be an absolute URI.","secured_uri":"must be an HTTPS/SSL URI."}}}}}},"mongoid":{"attributes":{"doorkeeper/application":{"name":"Name","redirect_uri":"Redirect URI"}},"errors":{"models":{"application":{"attributes":{"redirect_uri":{"fragment_present":"cannot contain a fragment.","invalid_uri":"must be a valid URI.","relative_uri":"must be an absolute URI."}}},"doorkeeper/application":{"attributes":{"redirect_uri":{"fragment_present":"cannot contain a fragment.","invalid_uri":"must be a valid URI.","relative_uri":"must be an absolute URI.","secured_uri":"must be an HTTPS/SSL URI."}}}}}},"my_likes":{"filter_all_channels":"All channels"},"no_flash":{"get":"Download Adobe Flash Player","sub":"You need the recent version of Adobe Flash Player to make coubs."},"notifications":{"background_ban":{"mine":"Your cover has been banned"},"banned":{"mine":"Your coub has been blocked"},"copyright_ban":{"mine":"Your coub has been blocked due to a copyright issue"},"cotd":{"mine":"Your coub is the %{cotd_link}"},"famous_follow":{"mine":"%{sender} is now following you!"},"favorite_follow":{"mine":"%{sender} is now following you!"},"follow":{"follow_back_suffix":"followed you back","foreign":{"one":"%{sender} is now following %{recipient}","other":"%{sender} are now following %{recipient}"},"is_now_following_suffix":"is now following you","mine":"%{sender} is now following you!"},"follow_back":{"mine":"%{sender} has followed you back"},"friend_cotd":{"mine":"Your friend %{sender} got Coub Of The Day!"},"friends":{"prompt":"Followers"},"hot":{"mine":"Your coub got Hot status"},"like":{"foreign":{"one":"%{sender} likes %{someone}’s coub","other":"%{sender} like %{someone}’s coub"},"mine":{"one":"%{sender} likes your coub","other":"%{sender} like your coub"}},"like_recoub":{"foreign":{"one":"%{sender} likes %{someone}’s repost","other":"%{sender} like %{someone}’s repost"},"mine":{"one":"%{sender} likes your repost","other":"%{sender} like your repost"}},"marked_18":{"mine":"Your coub has been marked as adult content"},"new_category":{"mine":"Your coub has been featured"},"prompt":"Notifications","raw_video":{"title":"Your video <span>%{video_title}</span> has been uploaded"},"recoub":{"foreign":{"many":"reposted by %{sender}","one":"reposted by %{sender}","other":"reposted by %{sender}"},"mine":{"one":"%{sender} has reposted your coub","other":"%{sender} have reposted your coub"}},"sn_friend_cotd":{"mine":"Your friend %{sender} got Coub Of The Day!"},"sn_friend_follow":{"mine":"Your friend %{sender} from %{meta} has followed you!"},"sn_friend_registered":{"mine":"Your friend %{sender} from %{meta} has registered"},"userpic_ban":{"mine":"Your user picture has been banned. Please upload a new one."}},"notifications_button":{"disable":"Stop getting notified about new coubs","enable":"Get notified about new coubs","pushes_tip":{"button":"Got it!","heading":"Please turn on Notifications in your browser"}},"notifications_popup":{"all_channels":"All channels","empty":"Nothing there...","find_friends":"Find friends","new_followers":"New followers","see_more":"See more","who_to_follow":"Who to follow"},"number":{"currency":{"format":{"delimiter":",","format":"%u%n","precision":2,"separator":".","significant":false,"strip_insignificant_zeros":false,"unit":"$"}},"format":{"delimiter":",","precision":3,"separator":".","significant":false,"strip_insignificant_zeros":false},"human":{"decimal_units":{"format":"%n %u","units":{"billion":"Billion","million":"Million","quadrillion":"Quadrillion","thousand":"Thousand","trillion":"Trillion","unit":""}},"format":{"delimiter":"","precision":3,"significant":true,"strip_insignificant_zeros":true},"storage_units":{"format":"%n %u","units":{"byte":{"one":"Byte","other":"Bytes"},"gb":"GB","kb":"KB","mb":"MB","tb":"TB"}}},"percentage":{"format":{"delimiter":"","format":"%n%"}},"precision":{"format":{"delimiter":""}}},"objects_group_pluralizer":{"and":"and","many_with_dropdown":"%{first} and %{dropdown}","others_text":{"one":"%{count}&nbsp;other","other":"%{count}&nbsp;others"},"two":"%{first} and %{second}"},"passwords":{"create":{"description":"You will receive an email within the next few minutes. It contains instructions for changing your password."},"edit":{"description":"Your password has been reset. Choose a new password below.","title":"Change your password"},"new":{"description":"To be emailed a link to reset your password, please enter your email address.","title":"Reset your password"}},"profile":{"add_cover":"Edit cover","background":{"coub_doesnt_exist":"Coub doesn't exist","coub_is_age_restricted":"Age-restricted coubs can't be used as covers.","coub_is_not_public":"Only public and unlisted coubs can be used as covers.","coub_is_too_small":"Coub resolution is too small","coub_width_is_too_small_for_cover":"Coub width is too small for cover","image_is_not_jpg":"Only jpg images are supported","image_is_too_small":"Image resolution is too small","invalid_url":"Coub url is not valid","no_coub_or_image_given":"No coub or image given"},"banners":{"leeco":{"h2":"Конкурс завершён.<br>Всем спасибо за участие!","intro":"LeEco представляет смартфоны Le2 и Le Max2 с мощной начинкой и крутой камерой.","rules":"Поздравляем победителей! Авторы лучших коубов стали обладателями телефонов LeEco:<br><a href=\"http://coub.com/dvrectenup\" target=\"_blank\">Алексей Ящер</a> выиграл LeEco LeMax2<br><a href=\"http://coub.com/1967none\" target=\"_blank\">RUSSR</a> выиграл LeEco Le2<br><a href=\"http://s.storage.akamai.coub.com/get/b20/p/promo_rule/cw_text_file/4b1a5a4f860/f4a5f3af7f3f68568153b/1474470045_____________________LeEco.pdf\" target=\"_blank\">Остальные победители</a> получают яркие наушники LeMe"},"lenovo":{"heading":"Новый планшет <strong>Lenovo Yoga Tablet 2</strong> совмещает в себе сразу 4 режима.","ptwo":"Прими участие в конкурсе: сделай коуб про то, что еще можно использовать в четырех разных режимах или просто сделай смешной коуб из официальных роликов Lenovo Yoga Tablet 2.<br><br>Добавь свой коуб в коллекцию, поставь хэштэг <a class=\"lenovo-hash\" href=\"http://ads.adfox.ru/214153/goLink?p1=brkor&amp;p2=v&amp;p5=coxkb&amp;pr=44615\">#lenovoyoga</a>,&nbsp;собери тучу лайков и выиграй Lenovo Yoga Tablet 2.<br /><br><span style=\"font-size: 13px; line-height: 18.2000007629395px; background-color: rgb(255, 255, 255);\"><b><i>Конкурс завершён, всем спасибо за участие. С победителем свяжутся в ближайшее время.</i></b></span>","rules":"Правила участия в конкурсе"},"micromax":{"rules":"Знакомо ощущение, когда телефон разряжается в&nbsp;самый ответственный момент? С новым <em><a href='//ads.adfox.ru/214153/goLink?p1=brkor&p2=v&p5=dyhyd&pr=538291' target='_blank'>Micromax Canvas Juice&nbsp;4 (Q465)</a></em> и&nbsp;его по-настоящему выносливым аккумулятором об&nbsp;этом можно забыть. <br />Спасибо всем за&nbsp;участие в&nbsp;конкурсе! Победителями стали: <em> <a href='//coub.com/view/f6d6s'>Insight</a></em>, <em><a href='//coub.com/view/f5ie5'>Dragov</a></em>, <em><a href='//coub.com/view/f79s0'>COUB</a></em>."}},"change_channel":"Change channel","change_channel_userpic":"Change Your Channel Pic","cover":{"popups":{"cover_positioner":"Drag to reposition","error":"The picture is too small. Upload one that's at least 1000 x 400 pixels.","hd_mark":"HD only","placeholder":"Paste coub URL","remove":"Remove","remove_cover":{"coub":"Are you sure?","photo":"Are you sure?"},"tip":"To determine whether a coub is high-definition, hover your mouse over it. If an SD/HD switch appears in the lower right-hand corner, you're good to go."}},"edit":{"account_settings":{"add_new_channel":"New channel","date_of_birth":"Date of birth","delete_account_button":"Delete account","delete_account_heading":"Delete account","delete_account_sub":"Are you sure you want to delete your account?","delete_channel_button":"Delete channel","delete_channel_heading":"Delete channel","delete_channel_sub":"Are you sure you want to delete this channel?","email":"Email","gender":"Gender","link_phone_number":"Link","locale":"Locale","password":"Password","phone_number":"Phone number","title":"Account settings","unlink_phone_number":"Unlink"},"change_pass":"Change password","confirm_pass":"Confirm password","edit":"Settings","email_settings":{"mails":{"mail_digest":"Daily updates","mail_newsletter":"Newsletter","mail_weekly":"Weekly digest","system_mail":"System mails"},"sub":"You may change notification settings for each channel individually.","title":"Email settings"},"hide_owner":"<strong>Run this channel anonymously.</strong> You won't be listed as the channel's creator in social networks, recommended channels and search results","profile_settings":{"autopost_to_social":{"coub":"Share coubs to %{social}","recoub":"Share reposts to %{social}"},"description":"Description","social_networks":"Channel social networks","textarea_sub":"characters left","title":"Title","username":"Username","username_rules":"You can change username only ones. Only latin letters, numbers, dots and dashes are allowed"},"save_settings":"Save changes","saved_successfull":{"header":"Done!","message":"The changes have been saved."},"strong_pass":"Strong","weak_pass":"Weak"},"errors":{"auth_error":"Wrong email or password","auth_taken":"This authentication has been taken","email_is_invalid":"Incorrect email","email_is_registered":"This email is already registered","empty_fields":"These fields are required","not_found":"Channel not found","password_incorrect":"The password is incorrect","permalink_ends_with_dot":"URL must not end with the dot symbol","permalink_invalid":"Use only a-z, 0-9, period (.), or hyphen (-)","permalink_is_required":"Permalink field is required","permalink_too_short":"The URL must be at least 8 characters long","permalink_unavailable":"This URL is unavailable","phone_unlink_error":"Please link your email address before unlinking your phone number","title_is_required":"Title filed is required","title_is_too_long":"The title is limited to 255 characters"},"feed":"Feed","find_friends":"Find friends","follow":"Follow","following":"Following","home":"Home","my_coubs":"My coubs","my_favourites":"Bookmarks","my_likes":"My likes","no_coubs_available":"%{user} has no coubs","no_favourites_user":"You have no bookmarks","no_likes_available":"%{user} has no likes","no_likes_user":"You have no likes","no_stories_available":"%{user} has no stories","save":"Save","settings":"Settings","stories":"Stories feed","timeline":{"friendships_block":{"followers_title_more":" followers","followers_title_one":" follower","heading":"Who to follow"},"types":{"all_coubs":"Home","coubs":"Coubs","likes":"Likes","recoubs":"Reposts","stories":"Stories"}},"unfollow":"Unfollow","views":"views","who_to_follow":"Who to follow"},"promo":{"about_new":{"bottom_block":{"header":"How to create a coub?","sub":"Choose a video and extract the best part with our online editor. Voilà!"},"create_coub":"Create a coub","header":"A <span>coub</span> is a looped video up to 10 seconds long","main_coub":{"header":"A <span>coub</span> is a looped video up to 10 seconds long","sub":"What can you do with it? All sorts of things:"},"share_block":{"header":"Sharing","sub":"Share your coubs with friends on Facebook, Tumblr, etc. and get likes!"}},"api_term":{"navigation":{"confidentiality":"Confidentiality","disclaimer":"Disclaimer","indemnification":"Indemnification","license":"License","limitation_of_liability":"Limitation of Liability","miscellanous":"Miscellaneous","modifications":"Modifications","privacy":"Privacy","representatives_and_warranties":"Representations and Warranties","restrictions":"Restrictions","support":"Support","term_and_termination":"Term and Termination; Survival","trademarks":"Licensed Materials and Trademarks"}},"api_terms":{"confidentiality":"Confidentiality","confidentiality_desc":"<p>You may from time to time, gain access to proprietary information, technical data, trade secrets or know-how, including, but not limited to, source code, research, product plans, products, services, customers, customer lists, markets, software, developments, inventions, processes, formulas, technology, designs, drawings, engineering, hardware configuration information, marketing, finances, or other business information that is either marked as “confidential” or disclosed in such a manner that it would be reasonably apparent it should be treated confidentially (“<strong>Confidential Information</strong>”). You may use Confidential Information only to the extent necessary to exercise your rights under this Agreement. You may not disclose Confidential Information to a third party without the prior express consent of Coub, provided in writing or by email. You agree that you will protect Confidential Information from unauthorized use, access, or disclosure in the same manner that you would use to protect its own confidential and proprietary information of a similar nature and in any event with no less than a reasonable degree of care.</p>","disclaimer":"Disclaimer","disclaimer_desc":"<p>The Coub Services and the Licensed Materials are provided “as is” without warranty of any kind. Coub disclaims all warranties, whether express, implied or statutory, regarding the Licensed Materials and the Coub Services, including without limitation any and all implied warranties of merchantability, accuracy, results of use, reliability, fitness for a particular purpose, title, interference with quiet enjoyment, non-infringement of third-party rights and any warranties or conditions arising out of course of dealing or usage of trade. Further, Coub disclaims any warranty that your use of the Licensed Materials or the Coub Services will meet any or all of your requirements or that such use will be uninterrupted, error-free, virus-free, or secure. Some states do not allow the exclusion or limitation of implied warranties, so the above limitations and exclusions may not apply to you.</p>","header":"Coub API License Agreement","indemnification":"Indemnification","indemnification_desc":"<p>You will indemnify and hold Coub, its subsidiaries, affiliates, (i.e., any other persons or entities that directly or indirectly control, or are under common control with, or are directly or indirectly controlled by, Coub) officers, employees, and agents harmless from any and all claims, damages, losses, liabilities, actions, judgments, costs, and expenses brought by a third party arising out of or in connection with: (i) any act or omission by you in connection with your use of the Coub Services or the Licensed Materials; (ii) your use of the Coub Services or the Licensed Materials, including but not limited to other than as expressly allowed by this Agreement; (iii) your breach of this Agreement, including but not limited to your representations and warranties herein; or (iv) any Licensee Application.</p>","license":"License","license_desc":"<p>License. Subject to the terms and conditions, and only during the term of, this Agreement “Term”), Coub grants you a limited, nonexclusive, revocable, non-transferable, non-sublicensable, worldwide, right and license during the Term solely to: (a) develop, test, display, distribute and execute your software applications, services or products (the “<strong>Applications</strong>”); (b) access and display in your Application the Content obtained through the Coub Service; (c) allow others to access your Application and (d) use and display the Coub Marks only to identify that the Licensed Materials originate from the Coub Services. Applications do not include those applications that use or access the Coub API or Coub Services in order to monitor the availability, performance, or functionality of any of the Coub API or Coub Services, or for any other benchmarking or other competitive purposes.</p>","limitation_of_liability":"Limitation of Liability","limitation_of_liability_desc":"<p>In no event shall Coub be liable to you for any special, incidental, indirect, direct, exemplary, punitive, compensatory, or consequential damages (including loss of use, data, business or profits) arising out of or in connection with this Agreement, whether such liability arises from any claim based upon contract, warranty, tort (including negligence), strict liability or otherwise, and whether or not Coub has been advised of the possibility of such loss or damage. Any claim arising our of or relating to this Agreement must be brought within one (1) year. In any case, Coub’s aggregate liability under this Agreement will not exceed fifty U.S. dollars (US$50.00). The foregoing limitations will survive and apply even if any limited remedy specified in this agreement is found to have failed of its essential purpose. Some states do not allow the exclusion or limitation of incidental or consequential damages, so the above limitations and exclusions may not apply to you.</p>","miscellaneous":"Miscellaneous","miscellaneous_desc":"<p>This Agreement constitutes the entire agreement among the parties with respect to the subject matter of this Agreement and supersedes and merges all prior proposals, understandings, and contemporaneous communications, whether oral, written or electronic. If any provision of this Agreement is found to be unenforceable or invalid, that provision will be limited or eliminated to the minimum extent necessary so that this Agreement will otherwise remain in full force and effect and enforceable. Any modification of or changes to this Agreement must be in a writing duly authorized by an authorized representative of Coub or pursuant to the Section titled “<strong>Modifications</strong>”. You may not assign any of the rights or obligations granted under this Agreement, voluntarily or by operation of law (including without limitation in connection with a merger, acquisition, or sale of assets) except with the express written consent of Coub, and any attempted assignment in violation of this paragraph is void. Coub may assign, transfer or delegate any of its rights and obligations hereunder without notice or consent. No agency, partnership, joint venture, or employment relationship is created as a result of this Agreement and neither party has any authority of any kind to bind the other in any respect. This Agreement shall be governed by and construed in accordance with the laws of the State of New York, including its conflicts of law rules, and the United States of America. You agree that any dispute arising from or relating to the subject matter of this Agreement shall be governed by the exclusive jurisdiction and venue of the state and federal courts of New York County, New York. You agree that any claim you may have arising out of or related to this Agreement and/or your use of the Licensed Materials must be filed within one year after such claim arose; otherwise, your claim is permanently barred.  The section and paragraph headings in this Agreement, along with all provided annotations, are for convenience only and shall not affect the interpretation of this Agreement. The failure of Coub to enforce any part of this Agreement shall not constitute a waiver of its right to later enforce that or any other part of this Agreement. Waiver of compliance in any particular instance does not mean that Coub will waive compliance in the future. In order for any waiver of any covenant or right under this Agreement to be binding, such waiver must be memorialized in a writing duly authorized by Coub. Unless otherwise specified, all notices under this Agreement will be in writing and will be deemed to have been duly given when received, if personally delivered or sent by certified or registered mail, return receipt requested; when receipt is electronically confirmed, if transmitted by facsimile or e-mail; or the day after it is sent, if sent for next day delivery by recognized overnight delivery service. All notices to Coub shall be sent to <a href=\"mailto:legal@coub.com\" class=\"-undr--full\">legal@coub.com</a>. All notices to you shall be sent to the location or email address specified in your Coub API access registration information.</p>","modifications":"Modifications","modifications_1":"<p><strong>Proprietary Rights.</strong>  Coub and its licensors, particularly its users, retain all worldwide right, title and interest in and to the Licensed Materials, including but not limited to all worldwide intellectual property rights therein. As between you and Coub, Coub retains all right, title and interest, including without limitation all intellectual property rights, in and to (i) the Coub API and any and all elements and components thereof, including content, technology, software, code, user interfaces and any derivative works and/or compilations thereof; (ii) the Coubs Marks, as defined in this Agreement and (iii) any feedback (“<strong>Feedback</strong>”) (including suggestions comments, improvements, ideas, etc.), about the Coub Service, the Content, the Coub API, or any applications Coub may be developing, and any derivative works or enhancements thereof. You agree not to act in any manner inconsistent with such ownership. Any of Coub’s rights not expressly granted under this Agreement are withheld. As between you and Coub, you retain all worldwide right, title and interest in and to the Applications, excluding the Coub Services, the Licensed Materials, the Coub Marks, and any derivative works or enhancements thereof, including but not limited to all intellectual property rights therein.</p>","modifications_desc":"<p>Modifications. You acknowledge and agree that Coub may modify (including but not limited updating) this Agreement, the Coub Services, the Licensed Materials, and the Coub Policies from time to time (a “<strong>Modification</strong>”). Except for modifications of the Coub Services, you will generally be notified about Modifications through notifications or posts on the <a href=\"/dev/docs\" class=\"-undr--full\">Developer Website</a> or through a form of direct communication from Coub to you, including but not limited to e-mail or notifications provided through the Coub Services. A Modification to this Agreement will become effective fourteen days after we have posted the Modification and provided you notification of the Modification. You otherwise acknowledge and agree that the Coub Services and the Licensed Materials may be modified at any time and without any notice to you. You will, within thirty (30) days from the date of first notice of any Modification(s) (or such shorter period of time specified in the notice of the Modification(s)) comply with such modification(s) by implementing and using the most current version of the Licensed Materials and making any changes to Applications that may be required as a result of such Modification(s). You acknowledge that a Modification may have an adverse effect on your Applications, including but not limited to changing the manner in which those Applications communicate with the Coub Services and display Content. Your sole recourse for such adverse effects is to terminate this Agreement pursuant to the Section titled “<strong>Termination</strong>”. Your continued access to or use of the Coub Services or any Licensed Materials following such thirty (30) day period shall constitute binding acceptance of the applicable Modification(s). Coub will attempt, but is not obligated, to provide thirty (30) days notice of any Modification that is not backwards compatible or that Coub reasonably believes will remove or materially alter significant functionality of the Coub API. We often have to modify our services and APIs, and also may have to modify this agreement, so here we reserve that right. We’ll give you as much notice as we can, but you need to comply with the modifications within 30 days or your access to Coub and/or our APIs may be revoked.</p>","preview":"<p>Thank you for your interest in Coub and our API! We invite you to download and use the API (as defined below), including the associated documentation which is also provided, but please note that our invitation is subject to your review and agreement with this API License Agreement and certain other terms and conditions.</p> <p>This API License Agreement (the “<strong>Agreement</strong>”), effective as of the date of acceptance of this Agreement (the “<strong>Effective Date</strong>”), is by and between Coub Limited (“<strong>Coub</strong>”, “we” and sometimes “us”) and you, or the individual, company or other entity that you represent (“<strong>Licensee</strong>” or “<strong>you</strong>”).  If you are entering into this Agreement on behalf of a company or other entity, you represent and warrant that you have authority to bind such company or other entity to this Agreement.</p> <p>By building applications that interact with Coub’s products and services (the “<strong>Coub Services</strong>”) or by using the Coub API (as defined below), including but not limited to requesting authentication credentials or making calls to the Coub API, you unconditionally consent and agree to be bound by and a party to this Agreement. IF YOU DISAGREE WITH ANY OF THE TERMS OF THIS AGREEMENT, COUB DOES NOT GRANT YOU A LICENSE TO USE THE API.<br /> This Agreement sets forth the rules around use of the Coub Services, the Coub API, and content shared on Coub that is accessible (through the Coub API or otherwise) for application development.  If you feel that we should make changes to this Agreement, or if you seek a waiver from certain provisions herein, please contact us at <a href=\"mailto:api@coub.com\" class=\"-undr--full\">api@coub.com</a>.</p> <p>You may wish to save a copy of this License Agreement for your records. In any event, be sure to regularly check this License Agreement for any updates or other changes, which shall be legally binding upon you when we post them (superseding any prior rights and obligations that may apply with respect to the API), whether or not we provide you any other notice of such changes. The currently applicable License Agreement will be posted at <a href=\"/api-terms\" class=\"-undr--full\">http://coub.com/api-terms</a>, and we will indicate the date of each update at the end of the License Agreement. Your continued use of the API after any update will be deemed to confirm your consent to be bound by, and agreement with, the terms of the new License Agreement. If you disagree with the terms of any new License Agreement, you will need to cease use of the API; in such event we would welcome your comments on the terms you found unacceptable.</p>","privacy":"Privacy","privacy_1":"<p><strong>Coub User Information.</strong> To the extent you have access to and are permitted to use Coub User Information through the Licensed Materials for a specific Licensee Application, that access and use shall be in accordance with the then-current <a href=\"/privacy\" class=\"-undr--full\">Coub Privacy Policy</a>.</p>","privacy_2":"<p><strong>Licensee User Information.</strong> You may choose to collect information relating to users of your Applications (“<strong>Application User Information</strong>”). If you collect Application User Information, you will provide to users an applicable privacy policy that clearly discloses your information collection, storage, and sharing practices, including the extent to which such Application User Information is disclosed to third parties like Coub.</p>","representatives_and_warranties":"Representatives and Warranties","representatives_and_warranties_desc":"<p>You represent and warrant that: (i) you have the necessary power and authority to enter into this Agreement, and that the performance of your obligations will not constitute a breach or otherwise violate any other Agreement or the rights of any third party arising therefrom; (ii) you will maintain, throughout the Term, all required rights and licenses related to the Applications and the Applications shall not infringe or otherwise violate any third party rights, including but not limited to third party intellectual property rights; and (iii) your uses of the Licensed Materials do and shall comply with all applicable foreign, federal, state and local laws, rules, and regulations.</p>","restrictions":"Restrictions","restrictions_1":"<p><strong>Compliance with this Agreement and Coub’s Policies and Guidelines.</strong> You must comply this Agreement, the <a href=\"/tos\" class=\"-undr--full\">Coub Terms of Service</a>, and the <a href=\"/privacy\" class=\"-undr--full\">Coub Privacy Policy</a> (together, the “<strong>Coub Policies</strong>”) in all uses of the Licensed Materials. If Coub believes, in its sole discretion, that you have violated or attempted to violate any term, condition, or the spirit of this Agreement, you’re license to and ability to use and access the Licensed Materials may be temporarily or permanently revoked, with or without notice. If you’re concerned about whether or not your violating this Agreement, or any of our other policies or guidelines, please e-mail us at <a href=\"mailto:api@coub.com\" class=\"-undr--full\">api@coub.com</a></p>","restrictions_10":"<p><strong>Reporting Security Flaws and Unauthorized Access.</strong> You will immediately report to Coub security flaws you discover in any of the Coub Services or the Licensed Materials. Coub reserves the right, in its sole discretion, to determine what constitutes a security flaw. You will also immediately report any actual or suspected unauthorized access to the Coub API using your credentials. Failure to report such flaws or unauthorized accesses, particularly prior to public disclosure, shall be considered a material breach of this Agreement.</p>","restrictions_11":"<p><strong>No Phishing. No Spamming.</strong> Spamming. You will not publish or link to malicious content intended to disrupt, compromise, or exploit a user’s browser, computer, mobile (or other) device, or Coub account or to compromise a user’s privacy in any manner. In addition, you won’t collect, or try to collect, a user’s Coub credentials, including but not limited to usernames or passwords. You won’t use the Coub Services, or Coub API, and won’t create Applications, for the purpose of “spamming.” Coub reserves the right, in its sole discretion, to determine what actions constitute “spamming”.</p>","restrictions_12":"<p><strong>Usage Limitations.</strong> Limitations. Coub may limit the number of network calls that your Application may make the  Coub API, and/or the maximum file size, and/or the maximum Content that may be accessed, or anything else about the Coub API and the Content it accesses as Coub deems appropriate, in its sole discretion; these limitations may on occasion be without notice. In addition, Coub may post usage limitations at the Developer Website, and change such usage limits at any time. In addition to its other rights under this Agreement, Coub may utilize technical measures to prevent over-usage and/or stop usage of the Coub API by an Application after any usage limitations are exceeded.</p>","restrictions_13":"<p><strong>No Content Modifications.</strong> Unless you are legally permitted to do so, you won’t use the Materials to make any modifications to any Content, other than to modify the formatting of such Content in order to display it in a manner appropriate for the pertinent Applications.</p>","restrictions_14":"<p><strong>No Circumvention or Reverse Engineering; Maintenance of Proprietary Notices.</strong> Notices. You and won’t attempt to: (i) interfere with, modify or disable any features or functionality of the Coub Services, or Coub API, including, without limitation, any mechanisms used to restrict or control the Coub Services, or Coub API, such as anti-circumvention measures; (ii) translate, reverse engineer, decompile, disassemble or derive source code, underlying ideas, algorithms, structure or organizational form from the Coub Services or the Licensed Materials; (iii) defeat, avoid, bypass, remove, deactivate or otherwise circumvent any protection mechanisms for the Coub Services or the Licensed Materials; or (iv) remove or modify any proprietary notices, attribution or marks from or delivered as part of the Coub Services or the Licensed Materials.</p>","restrictions_15":"<p><strong>Genuine Actions.</strong> You won’t create Applications with capabilities that do not reflect explicit, expressions of user intent and permission. For example, Applications should not automatically follow channels, should not like, recoub, or reply to Content without explicit user direction to do so, and should not post coubs to the Coub Services without user’s permission. In addition, a Licensee Application should not require a user to generate a coub as a prerequisite to using the application or a feature of the application.</p>","restrictions_16":"<p><strong>Indicating Use of the Coub Services and the Licensed Materials.</strong> In a prominent location in Applications, you should, to the extent reasonable based on the nature of the Licensee Application, indicate that the application has been created using the Coub Services and/or the Licensed</p>","restrictions_17":"<p><strong>Use of Coub Marks.</strong> You won’t, under any circumstances: (i) include in or use the Coub Marks, any marks that are confusingly similar to or derivative of the Coub Marks (“<strong>Confusing Marks</strong>”), as part of your trade name (registered or otherwise), logos, or other identifiers; (ii) include in or use the Coub Marks or any Confusing Marks as part of any names, domain names, logos, or other identifiers of Applications; or (iii) use the Coub Marks or Confusing Marks in a manner that creates or may create a sense of endorsement, sponsorship, or association with Coub, unless expressly permitted by Coub, in writing, to do so. All use of the Coub Marks, and any goodwill arising out of such use, shall inure to the benefit of Coub. You may freely state and disclose that you are using the Coub Services, or Coub API, as long as you adhere to all restrictions on the use of the Coub Marks stated</p>","restrictions_18":"<p><strong>Monitoring.</strong> Coub reserves the right to monitor your use of the Licensed Materials for any reason no reason, including to ensure your compliance with the terms and conditions of this Agreement. You will ensure that all Applications properly and accurately use all reporting functionality that is made available through aspects of the Coub API that are used by such Applications.</p>","restrictions_19":"<p><strong>Attribution.</strong> You agree to maintain proper attribution for all pieces of Content to (1) the channels that posted such Content (the “<strong>Posting Channel</strong>”) and (2) the source of the Content, if such source was provided in the Licensed Materials (the “<strong>Source</strong>”). At no time will you falsely attribute Content. For the sake of clarity, this means that your Applications won’t display any Content without attribution to the Posting Channel and Source (if available), as delivered in the Licensed Materials. In addition, you and your Applications won’t modify or remove any proprietary notices, attribution or marks from the Licensed Materials.</p>","restrictions_2":"<p><strong>Obtaining and Maintaining an API Key.</strong> In order to use the Coub API, you must obtain API credentials (an “<strong>API Key</strong>”) via registration on the Developer Website. You will not share your API Key, will keep your API Key secure, and will use it as your sole means of accessing the Coub API. You are fully responsible for all activities that occur using your API Keys, regardless of whether such activities are undertaken by you or a third party. You are responsible for maintaining up-to-date and accurate information (including a current email address and other required contact information) for your account. Coub may discontinue your access to the API Key if such contact information is not up-to-date and/or you do not respond to communications directed to such coordinates.</p>","restrictions_3":"<p><strong>User Login and Account Creation.</strong> Applications must present users with the ability to log into the Coub Services through the Coub API via the OAuth protocol. Users without an account on the Coub Services must be presented with an opportunity to create an account.</p>","restrictions_4":"<p><strong>No Substantial Replication.</strong> You will not substantially replicate products or services offered by Coub, but are explicitly permitted to create specialized versions or extensions of such products or services. For example, you aren’t permitted to fully replicate the Coub web site or Coub mobile applications, but may create specialized views of Content from channels followed by a user. In addition, you won’t use the Licensed Materials or other information collected from users of Applications to create or maintain a separate videosharing platform, social or media network, or other similar product or service.</p>","restrictions_5":"<p><strong>No Modification of Coub Timeline.</strong> You shall not remove or insert Content when displaying user’s Coub Dashboard or other streams of Content, including but not limited to (i) removing or inserting any advertisements or other sponsored material or (ii) removing other Content inserted by Coub. You shall further not reorder Content in a user’s Coub Timeline and shall present that Content in the order provided by the Coub API. In addition, your advertisements or sponsored material cannot replicate the look and feel of, or reasonably be confused by users as, a piece of Content and should be clearly separated from Content.</p>","restrictions_6":"<p><strong>No Syndication or Distribution.</strong> Applications are strictly prohibited from syndicating or Content in any manner, public or private, including but not limited to public redisplay of any Content.</p>","restrictions_7":"<p><strong>No In-Network Promotions.</strong> Applications may not promote any Content to or within the network (“<strong>In-Network Promotions</strong>”), including if payment is received for such In-Network Promotions. For example, Applications may not create ranking systems or directories for Coub channels or coubs and promote those rankings or directories within or outside of the Coub Services.</p>","restrictions_8":"<p><strong>No Export for the Purpose of Replication, Repackaging or Resale.</strong> Resale. You won’t, under circumstances, export Content to a datastore intended to replicate, in whole or in part, Coub’s datastore, nor will you repackage and/or resell the Licensed Materials, including any Content, in any manner, including but not limited to by offering access to the Licensed Materials through your own API. For the sake of clarity, this restriction is not intended to apply to Applications that may, at the request of a user, export such user’s Content for the purposes of data portability.</p>","restrictions_9":"<p><strong>No Compromising Coub Security.</strong> You aren’t permitted to use the Licensed Materials in manner that does or could potentially undermine the security of the Coub Services or the Licensed Materials. In addition, you won’t, and won’t attempt to, (i) interfere with, modify or disable any features, functionality or security controls of the Coub Services, or Coub API, (ii) defeat, avoid, bypass, remove, deactivate or otherwise circumvent any protection mechanisms for the Licensed Materials, or (iii) reverse engineer, decompile, disassemble or derive source code, underlying ideas, algorithms, structure or organizational form from the Coub Services, or Coub API.</p>","restrictions_desc":"<p>The licenses granted in the Section titled “<strong>License</strong>” are explicitly conditioned on adherence to the following restrictions.</p>","support":"Support","support_desc":"<p>This Agreement does not entitle you to any support for the Licensed Materials, unless you make separate arrangements with Coub. Any such support provided by Coub shall be subject to the terms of this Agreement as modified by a separate support agreement. You are solely responsible for providing all support and technical assistance to end users of your Applications. You acknowledge and agree that Coub has no obligation to provide support or technical assistance directly to your end users and you shall not represent to any of your end users that Coub is available to provide such support. We’ll do our best, but we can’t guarantee any support for you or your Applications. We also can’t support your users. You promise that you’ll do your best to support your own applications.</p>","term_and_termination":"Term and Termination; Survival.","term_and_termination_desc":"<p>This Agreement shall commence on the Effective Date and will remain in effect until terminated pursuant to this Section. Either party may terminate this Agreement at any time, for any reason, or for no reason including, but not limited to, if you violate any provision of this Agreement. Any termination of this Agreement shall also terminate the licenses granted hereunder. Upon termination of this Agreement for any reason, you will stop using, and either return to Coub, or destroy and remove from all computers, hard drives, networks, and other storage media, all copies of the Licensed Materials and any Confidential Information in your possession, and shall certify to Coub that such actions have occurred. The Sections titled “<strong>Restrictions</strong>”, “<strong>Ownership</strong>”, “<strong>Support</strong>”, “<strong>Confidentiality</strong>”, “<strong>Representations and Warranties</strong>”, “<strong>Indemnification</strong>”, “<strong>Disclaimer</strong>”, “<strong>Limitation of Liability</strong>”, and “<strong>Miscellaneous</strong>” shall survive termination of this Agreement.</p>","trademarks":"Licensed Materials and Trademarks","trademarks_1":"<p><strong>Licensed Materials</strong>. This Agreement governs your use of the following, all of which collectively the “<strong>Licensed Materials</strong>”, to develop applications: (a) Coub’s programming interface (“<strong>API</strong>”) and any accompanying or related documentation, source code, executable applications and other materials (collectively, the “<strong>Coub API</strong>”), including, but not limited to, as made available through <a href=\"/dev/docs\" class=\"-undr--full\">Coub’s developer website</a> (the “<strong>Developer Website</strong>”), as modified from time to time; (b)  Coub user account information (“<strong>Coub User Information</strong>”); and (c) any content posted to the Coub Services or material made available through the Coub API, including but not limited to Coub actions such as Coub likes and recoubs (collectively with the Coub User Information, the “<strong>Content</strong>”).</p>","trademarks_2":"<p><strong>Coub Marks</strong>. This Agreement also governs your use, and restrictions on such use, of Coub’s trademarks, service marks, logos, and other branding made available for use in connection with the Licensed Materials (the “<strong>Coub Marks</strong>”).</p>"},"brand_assets":{"files":{"app_icon":"App icon","c_rounded":"“C” icon","icon_like":"Like icon","logo_circle":"Circle logo","logo_main":"Logo","logo_main_blue":"Also a logo"},"header":"Brand assets","title":"Brand assets"},"channels":{"build_feed":{"tip":"Find the channels that suit your interests. Interested in Parkour or skateboarding? Follow the <a href=\"/extremesports\" target=\"_blank\">Extreme Sports channel</a>. Looking for Game of Thrones or House of Cards coubs? Follow the <a href=\"/tvseries\" target=\"_blank\">TV Series channel</a>. New channels are appearing all the time.","title":"Build your feed"},"create":{"step_1":"Click the “Add New Channel” Button","step_1_tip":"Find it by clicking the triangular button beside your profile pic, at the top-right of the screen.","step_2":"Name your channel and choose a URL","step_2_tip":"Give your channel a name that lets people know what the channel’s all about — they’ll be more likely to follow it. By default, the URL of your channel will be the same as your channel’s name. Change it if you want.","step_3":"Choose a channel photo and a cover","step_3_tip_1":"Pick some images that are relevant to the topic of your channel. Find a coub to be your cover. You may use coubs from somebody’s channels too. You can only use a HD coub or Hi-Res image for your cover.<br /><br />","step_3_tip_2":"To make sure the coub is HD, check the icon in the coub’s lower-right corner.","tip":"You can create as many channels as you want. Here’s how to do it.","title":"How to create a new channel"},"get_started":{"create_channel":"Create a new channel","tip":"Whatever your passion, join up and start creating your channels","title":"Get started"},"organize":{"draft":"Draft","draft_desc":"Feeling unsure about a coub you've made? Got an idea for a coub but no time to perfect it?  Leave them on a separate channel and work on them later.","sample_channel_1":"Fan of custom bikes? Collect them all.","sample_channel_2":"Never had a place to put all your favorite inspirational quotes? Now you do.","sample_channel_3":"Unsatisfied with existing Anime channel? Set up your own.","sample_channel_4":"Working on a design or animation project? Gather all your work<br />in one place.","sample_channel_5":"Inspired by a particular cartoon series or character? Share your passion<br />with your followers.","sample_channel_6":"Are there stars you obsess over, or scenes you can’t stop watching? Build a gallery for them.","sort":"Sort","sort_desc":"Do you have a passion for both 3D animation and Ryan Gosling’s TV appearances? Well that’s a fairly obscure combination of interests. Create separate channels for each subject and you’ll get more followers.","tip":"A channel is a place where you can organize coubs by theme or topic.<br />\r\nCheck out some examples.","title":"Organize your coubs,<br />cultivate your passions"},"social":{"step_1":"Like","step_1_tip":"When you like a coub, it will be liked by the channel you’re logged into. Changing channel does not reload the page. So you can simply change channel and like from the relevant account.","step_2":"Recoub","step_2_tip":"Click the recoub button. You’ll get a menu with all your channels. Now click on the channels that you’d like to recoub to.","step_3":"Choose channel to credit","step_3_tip_1":"When you create a coub, you choose which channel it’s posted in.","step_3_tip_2":"You can change the channel at any time, no matter which one you’re logged into. Click the settings button under your coub, choose Edit info. You’ll be given a list of your channels. Choose the channel you’d like to post a coub in.","step_3_tip_3":"You won’t lose any of your likes and recoubs by changing channels.","step_4":"Follow","step_4_tip":"When you click follow, you'll get a drop-down with all your channels. Just click on the channels you'd like to follow with and it's done.","tip":"Bring content to your channel and like what others create.","title":"Start liking and recoubing"},"title":"Channels"},"copyright":{"annotation":"All defined terms used herein, unless otherwise defined herein are as&nbsp;defined in&nbsp;the COUB&trade; Terms of&nbsp;Service Agreement to&nbsp;which this Procedures for Copyright Infringement Notice is&nbsp;linked and incorporated herein by&nbsp;reference.","date":"Last modified: April 19, 2014","descr_1":"If&nbsp;you are a&nbsp;copyright owner or&nbsp;the legal agent of&nbsp;a&nbsp;copyright owner, and you believe that any User&rsquo;s Contribution or&nbsp;User Generated Content or&nbsp;other materials provided through the Coub Services, including content on&nbsp;the Website, infringes upon your copyrights, you may submit a&nbsp;notification pursuant to&nbsp;the Digital Millennium Copyright Act (&ldquo;DMCA&rdquo;), a&nbsp;copy of&nbsp;which Act may be&nbsp;found&nbsp;at:","descr_2":"<a href=\"http://www.copyright.gov/legislation/dmca.pdf\">http://www.copyright.gov/legislation/dmca.pdf.</a>","descr_3":"Based on&nbsp;the Act, your notice to&nbsp;the Company (&ldquo;DMCA Copyright Notice&rdquo;) should contain the items set forth below in&nbsp;an&nbsp;email to&nbsp;<a href=\"mailto:support@coub.com\">support@coub.com</a>.","header":"Coub Ltd. <br>Procedures Under DMCA Section 512 <br>\r\nFor Notice Of Copyright Infringement","introduction":{"_1":"On the Coub Services","_2":"In e-mail, text and other electronic messages when you use the Coub Services.","_3":"When you interact with our authorized technical support partner(s) and any information and applications on third-party websites and services.","_4":"us offline or through any other means, including on any other website operated by us or any third party; or","_5":"any third party, including through any application or content that may link to or be accessible from the Coub Services or on a Website.","descr":"At&nbsp;Coub Ltd., a&nbsp;corporation organized under the laws of&nbsp;the country of&nbsp;Cyprus (<strong>&ldquo;Company&rdquo;</strong> or&nbsp;<strong>&ldquo;we&rdquo;</strong>) we&nbsp;respect your privacy and are committed to&nbsp;protecting it&nbsp;through our compliance with this Privacy Policy. This Privacy Policy describes the types of&nbsp;information we&nbsp;may collect from you or&nbsp;that you may provide to&nbsp;us when you sign up&nbsp;to&nbsp;use our services, including our website, Coub.com (the &ldquo;Website&rdquo;), our mobile applications, features or&nbsp;functionality and software (collectively, the &ldquo;Coub Services&rdquo;) and describes our practices for collecting, using, maintaining, protecting and disclosing that information.","descr_2":"This Privacy Policy applies to information we collect:","descr_3":"It does not apply to information collected by:","descr_4":"Please read this Privacy Policy carefully to understand our policies and practices regarding your information and how we will treat it. If you do not agree with our policies and practices, your choice is not to use the Coub Services or visit the Website. By registering for or accessing our Coub Services or using the Website, you agree to this Privacy Policy. This Privacy Policy may change from time to time. Your continued use of the Coub Services or the Website after we make changes is deemed to be acceptance of those changes, so please check this Privacy Policy periodically for updates."},"section_1":{"_1":"Identify the material comprising your copyrighted work that you claim has been infringed; if&nbsp;multiple copyrighted works are covered by&nbsp;this DMCA Copyright Notice&nbsp;&mdash; you may attach a&nbsp;representative list of&nbsp;each copyrighted work that you claim has been infringed.","_2":"Identify (a) the material that you claim is&nbsp;infringing (or&nbsp;is&nbsp;the subject of&nbsp;infringing activity) and that you are asking the Company to&nbsp;remove by&nbsp;this Notice or&nbsp;access to&nbsp;which you are asking the Company to&nbsp;disable, and a&nbsp;link, screen shot or&nbsp;other reasonably sufficient information to&nbsp;permit the Company to&nbsp;find the material on&nbsp;the Coub Services, including at&nbsp;a&nbsp;minimum, if&nbsp;applicable, the URL of&nbsp;the link shown on&nbsp;the Website or&nbsp;mobile application where such material may be&nbsp;found, and (b) the reference or&nbsp;link, to&nbsp;the material or&nbsp;activity that you claim to&nbsp;be&nbsp;infringing, that is&nbsp;to&nbsp;be&nbsp;removed or&nbsp;access to&nbsp;which is&nbsp;to&nbsp;be&nbsp;disabled, and reasonably sufficient information to&nbsp;permit&nbsp;us to&nbsp;locate that reference or&nbsp;link.","_3":"Provide your contact information: mailing address, telephone number, and email address.","_4":"Include both of the following statements as the last two paragraphs of the text of the Notice:","_5":"Provide your full legal name and your electronic or physical signature, as the person authorized to act on behalf of the owner of an exclusive right that is allegedly infringed.","_6":"Deliver this Notice, with all items completed, to the Coub Copyright Agent:","_7":"Coub Copyright Agent","_8":"Email: <a href=\"mailto:support@coub.com\">support@coub.com</a>","add_1":"\"I hereby state that I have a good faith belief that the disputed use of the copyrighted material or reference or link to such material is not authorized by the copyright owner, its agent, or the law (e.g., as a fair use).\"","add_2":"\"I hereby state that the information in this Notice is accurate and, under penalty of perjury, that I am the owner, or authorized to act on behalf of the owner, of the copyright or of an exclusive intellectual property right under the copyright that is allegedly infringed.\"","additional_1":"&ldquo;I&nbsp;hereby state that&nbsp;I have a&nbsp;good faith belief that the disputed use of&nbsp;the copyrighted material or&nbsp;reference or&nbsp;link to&nbsp;such material is&nbsp;not authorized by&nbsp;the copyright owner, its agent, or&nbsp;the law (e.g., as&nbsp;a&nbsp;fair use).&rdquo;","additional_2":"&ldquo;I&nbsp;hereby state that the information in&nbsp;this Notice is&nbsp;accurate and, under penalty of&nbsp;perjury, that I&nbsp;am the owner, or&nbsp;authorized to&nbsp;act on&nbsp;behalf of&nbsp;the owner, of&nbsp;the copyright or&nbsp;of&nbsp;an&nbsp;exclusive intellectual property right under the copyright that is&nbsp;allegedly infringed.&rdquo;","inner_1":"\"I hereby state that I have a good faith belief that the disputed use of the copyrighted material or reference or link to such material is not authorized by the copyright owner, its agent, or the law (e.g., as a fair use).\"","inner_2":"\"I hereby state that the information in this Notice is accurate and, under penalty of perjury, that I am the owner, or authorized to act on behalf of the owner, of the copyright or of an exclusive intellectual property right under the copyright that is allegedly infringed.\"","title":"Notice of&nbsp;Alleged Copyright Infringement Pursuant to&nbsp;DMCA &sect;&nbsp;512 <br>(17&nbsp;U.S.C.S. &sect;&nbsp;512 (1998))"},"section_2":{"_1":"If you receive a notification that your Contribution or User Generated Content provided through the Coub Services, including on the Website has been removed due to a claim of copyright infringement in a DMCA Copyright Notice, it means that the Contribution’s content has been deleted from the Coub Services at the request of the content's owner. If your account receives too many copyright complaints, you may lose the ability to post new content on the Coub Services, and your account may be disabled completely.","_2":"If you believe User Generated Content, comprising your Contribution was removed in error, you have the option to file a counter-notice (“Counter-Notice”) by following the steps below. Upon receipt of a valid Counter-Notice, we will forward a copy to the person who filed the original DMCA Copyright Notice. If we do not receive notice within 10 business days that the submitter of the original claims in their DMCA Copyright Notice is seeking a court order to prevent further infringement of the content at issue, we will remove the claim and the DMCA Copyright Notice from your account's record, and we may, but are not obligated to, replace the Contribution that was removed.","_3":"Note: There are legal and financial consequences for fraudulent and/or bad faith submissions. Before submitting a Counter-Notice, be sure that you are the actual rights holder of the removed content or that you have a good faith belief that the material was removed in error, and understand the repercussions of submitting a false claim.","title":"Counter-Notice"},"section_3":{"_1":"Email your Counter-Notice to <a href=\"mailto:support@coub.com\">support@coub.com</a>.","_2":"Include ALL of the following:","_3":"Your name, address, and telephone number.","_4":"DMCA ID printed at the bottom of the DMCA Copyright Notice email.","_5":"Copy and paste the link in the DMCA Copyright Notice email, to provide the source address of the Contribution that was removed.","_6":"A statement under penalty of perjury that you have a good faith belief that the Contribution was removed in error.","_7":"A statement that you consent to the jurisdiction of Federal District Court for the judicial district in which the address is located, or if your address is outside of the United States, for any judicial district in which COUB LTD. may be found, and that you will accept service of process from the person who provided the original complaint under DMCA Copyright Notice or an agent of such person.","_8":"A physical or electronic signature (for example, typing your full name).","title":"How to File a Counter-Notice"}},"copyright_terms":{"navigation":{"counter":"COUNTER-NOTICE","how_to":"How to File a Counter-Notice","notice":"Notice of Alleged Copyright Infringement Pursuant to DMCA"}},"deadpool":{"rules":"С 11 февраля смотри в кино историю о засранце<br>в трико – Дэдпуле. Дерзкий и резкий, он спасет тебя от скуки. Не мни булки и участвуй<br> в конкурсе коубов: покажи, что можно делать, если твоя суперспособность – сарказм. <br>Поставь теги <a href=\"http://ads.adfox.ru/214153/goLink?p1=brkor&amp;p2=v&amp;p5=dkewy&amp;pr=123123\" target=\"_blank\">#deadpoolmovie</a> и <a href=\"http://ads.adfox.ru/214153/goLink?p1=brkor&amp;p2=v&amp;p5=dkexa&amp;pr=123123\" target=\"_blank\">#дэдпулвкино</a>. Победителей ждут <u><a href=\"http://storage.akamai.coub.com/get/bucket:22.31/p/promo_rule/cw_text_file/fab28211b7e/b1f13d618ade1fa0860b3/1456931667_Deadpool___________.pdf\" target=\"_blank\">призы</a></u>. Успей до 11 февраля 2016 года или Дэдпул надерет тебе зад.<br><br>Используй эти видео для создания коубов:"},"faq":{"categories":{"ban_age_restrictions":"Ban & age restrictions","ban_age_restrictions_tip":"18+","channels_account":"Channels & account","channels_account_tip":"Registration & channel tuning","community":"Community","community_tip":"Build your followers & be part of the community","create":"Create coub","create_tip":"Editor & upload","first_steps":"First steps","first_steps_tip":"Coub basics","mobile":"Mobile","mobile_tip":"iOS & Android apps","sharing_embedding":"Saring & embedding","sharing_embedding_tip":"Coub on external sites"},"feedback":{"cancel":"Cancel","email_label":"Your email","feedback_label":"Enter feedback","send_another":"Send another one","submit":"Send","thank_you":"Your feedback has been sent, thank you.","title":"Send Feedback"},"promoted_tip":"Frequently asked questions","promoted_title":"FAQ","question_form":{"ask_label":"Ask your question","email_label":"Your email","send_another":"Send another one","submit":"Ask","thank_you":"Your question has been sent.","thank_you1":"If you have any questions left or a feedback to share, please write our support <a href=\"mailto:support@coub.com\">support@coub.com</a>.","title":"Can’t find the answer?","title_2":"We got your question and will respond soon.","title_sent":"We got your question and will respond soon."},"search":{"label":"Search the help center","nothing_found":"Oops, nothing found","title":"Search"},"title":"Help"},"klm":{"rules1":"<a href=\"http://coub.com/coub.of.the.day.mood\" target=\"_blank\">COUB OF THE DAY MOOD</a> стал обладателем билетов в город своей мечты.","rules2":"<a href=\"http://coub.com/neoncoub\" target=\"_blank\">Neon</a> отправится в прекрасный Амстердам с KLM Airlines.","rules3":"<a href=\"http://s.storage.akamai.coub.com/get/b122/p/promo_rule/cw_text_file/747c7c3a5e2/d2d33a8af899d2ea3e414/1474469453_____________________KLM.pdf\" target=\"_blank\">Авторы</a> следующих коубов выиграли поощрительные призы от KLM.","text":"Привет, друзья!<br>Меня зовут Аделина Сотникова. С детства я увлекалась фигурным катанием и мечтала стать олимпийской чемпионкой. Я шла к своей мечте и смогла её осуществить благодаря упорству и стараниям.<br>Поздравляю победителей конкурса, теперь они смогут отправиться в путешествие вместе с KLM!"},"lays":{"action_comment":"Гибридами можно обрушить Карточный Домик в Гравити Фолз, провести Рика и Морти на лекцию Хайзенберга, пригласить Ганнибала к Пенни после Большого взрыва или познакомить Хауса с Шерлоком через историческую хронику Шекспира. И еще. И еще.","action_title":"Боевик","comedy_comment":"Хороший гибрид - это тот магический момент, когда из двух видео получается третий новый сюжет. Высший пилотаж - перевернуть настроение, то есть из серьезного сделать смешное и наоборот. Подумайте и попробуйте вспомнить, в каких фильмах есть похожее место действия или персонажи, или может быть действие из одного фильма могло бы вызвать последствия в другом. Вот, например, пара связей, которые работают всегда - телефонные разговоры, перестрелки и погони. Любите кино и дерзайте.","comedy_title":"Комедия","comment_header":"Комментарий популярного коубера:","header":{"desc_text":"Lay’s MAXX завершил съемки собственного<br>фильма. Спасибо всем за участие в конкурсе, <br>список победителей можно посмотреть <a href=\"http://storage.akamai.coub.com/get/b11/p/promo_rule/cw_text_file/f9d0ef81a89/cd09db85cb69e95650634/1455705647_______________________________Lay_s_CINEMAXX.pdf\" target=\"_blank\">здесь</a>.","desc_title":"Любишь кино так же сильно,<br>как супер рифленые Lay’s MAXX?","support":"при поддержке"},"horror_comment":"Если вы любите кино, то несомненно способны сделать хороший кино-коуб. Смешной, зрелищный, страшный — зависит только от вас, ведь коуб дает возможность самому решить, что будет происходить, нужно просто дать волю фантазии. Не бойтесь экспериментов и попробуйте.","horror_title":"Хоррор","rotator":{"desc":"Вместе с участниками группы Lay’s<br/>MAXX твой ролик будет оценивать<br/>Стас Давыдов, так что сделай его<br/>Horosho!"},"rules":{"desc":"Возможно, именно твоя идея ляжет<br>\u0003в основу блокбастера Lay’s MAXX.<br> Кроме десяти секунд славы ты<br>\u0003сможешь выиграть внушительный<br>запас чипсов и другие призы.","desc1":"Возможно, именно твоя идея ляжет<br/>\u0003в основу блокбастера Lay’s MAXX.<br/> Кроме десяти секунд славы ты<br/>\u0003сможешь выиграть внушительный<br/>запас чипсов и другие призы.","descr":"Возможно, именно твоя идея ляжет<br/>\u0003в основу блокбастера Lay’s MAXX.<br/> Кроме десяти секунд славы ты<br/>\u0003сможешь выиграть внушительный<br/>запас чипсов и другие призы.","header":"Хоррор? Комедия?<br/>\u0003А может боевик?<br/>\u0003Давай решать вместе. ","name":"Правила конкурса","p1":"Посмотри ролик <a href=\"http://www.youtube.com/watch?v=XuIoG5cVDMQ\" target=\"_blank\" auto-init=\"true\" type=\"embedPopup\" source=\"/sources/1856389\">Lay’s MAXX</a>, выбери<br>\u0003в нем понравившийся фрагмент.","p2":"Совмести его с любым видео, чтобы<br/>\u0003получился лихой сюжетный поворот<br/>\u0003и сделай из этого коуб.","p3":"Чтобы принять участие в конкурсе, опубли-<br>куй свой коуб и не забудь про хештеги<br><a href=\"http://ads.adfox.ru/214153/goLink?p1=brkor&p2=v&p5=dgcuk&pr=123\" target=\"_blank\">#cinemaxx</a> и <a href=\"http://ads.adfox.ru/214153/goLink?p1=brkor&p2=v&p5=dgcun&pr=456\" target=\"_blank\">#laysmaxx</a>.","p4":"Подпишись на группу <a href=\"http://ads.adfox.ru/214153/goLink?p1=brkor&p2=v&p5=dgcup&pr=123\" target=\"_blank\">Lay’s MAXX в VK</a><br>\u0003и жди новостей!","rules_link":"<a href=\"/promo/rules/lays.pdf\" target=\"_blank\">Полные правила конкурса</a>","rules_link_2":"Полные правила конкурса"},"share":"Поделиться проектом","slideshow":{"header":"Изучи все жанры!","text":"Кажется, все коубы в этом разделе закончились.<br/>\u0003Воспользуйся этим! Просмотри все ролики соперников<br/>и заткни всех за пояс."},"timeline":{"sharing_title":"Lays","title":"Коубы участников конкурса"}},"media":{"carousel":{"title":"And some more examples:"},"footer":{"description":"It only takes a minute to get started with Coub. Just join up and start exploring, creating and sharing.","title":"Simple to use, but limitless possibilities"},"join":"Join Coub","main_title":"Media","menu":{"business":"For buisness","channels":"Multiple channels","media":"Coub in media","pros":"For pros"},"section":{"description":{"audience":"Find new fans, follow popular creators and promote yourself within Coub community.","content":"Remember those living portraits in Harry Potter? With Coub, you can make them real – no magic required. Take a short snippet of a fashion shoot, scenery or landscape, and loop even a slight movement together with soundtrack to change the impression completely.","curate":"Whether you’re watching Louisiana State or the State of the Union, showcase the big moments with coubs. Quickly loop and embed the big play, complete with audio – or just grab the clip from one of our millions of users.","discover":"Writing about the latest Michael Bay movie and in need of a few good explosions? Or are you looking for 23 reasons to love J-Law? Whatever you’re after, use the Coub community to find great examples, fresh memes, and epic moments.","mem":{"mem_1":"There’s a link to the source video in our embed — a handy tool to promote your video.","mem_2":"Source video is also shown under each coub on a coub page along with a button that allows other users to create coubs from this source. Yet another way to promote your content. "},"text":"How it actually works for media:"},"description_title":{"audience":"<span>Create channel</span> – join the club","content":"<span>Illustrate</span> – a coub is worth a thousand pictures","curate":"<span>Create</span> – coub the <br/>best, leave the rest","discover":"<span>Discover</span> – you want it, we’ve coubed it","mem":"<span>Go viral</span> – meme a little meme"},"indent_title":{"audience":"55 million","audience_fix":"people watch coubs monthly"},"titles":{"audience":"Find a new audience","content":"Enlarge your content"}},"title":"IN MEDIA"},"megafon2015":{"announcements_block":{"rules":"Полные правила конкурса.","text":"Конкурс кобов с самым неожиданным сюжетным поворотом закончился, всем спасибо за участие. Поздравляем победителей, ими стали авторы следующих конкурсных работ:<br />\r\n\r\nPaul Rock'n'Roll<br />\r\n<a href=\"http://coub.com/view/52dl6\" class=\"-color--blue-ribbon -undr\">http://coub.com/view/52dl6</a><br />\r\n\r\nKosai Noriaki<br />\r\n<a href=\"http://coub.com/view/543ml\" class=\"-color--blue-ribbon -undr\">http://coub.com/view/543ml</a><br />\r\n\r\nBoris Isaev<br />\r\n<a href=\"http://coub.com/view/5appv\" class=\"-color--blue-ribbon -undr\">http://coub.com/view/5appv</a><br />\r\n\r\njouke<br />\r\n<a href=\"http://coub.com/view/53f0k\" class=\"-color--blue-ribbon -undr\">http://coub.com/view/53f0k</a><br />\r\n\r\nMDK<br /><a href=\"http://coub.com/view/54n9d\" class=\"-color--blue-ribbon -undr\">http://coub.com/view/54n9d</a><br />\r\n\r\nYaroslav Kharitonov<br /><a href=\"http://coub.com/view/58zzv\" class=\"-color--blue-ribbon -undr\">http://coub.com/view/58zzv</a><br />\r\n\r\nВиктория Титова<br /><a href=\"http://coub.com/view/5h2v7\" class=\"-color--blue-ribbon -undr\">http://coub.com/view/5h2v7</a><br />\r\n\r\nBaba Tanya<br /><a href=\"http://coub.com/view/551zm\" class=\"-color--blue-ribbon -undr\">http://coub.com/view/551zm</a><br />\r\n\r\nДля вручения приза с вами свяжутся в ближайшее время.","video_heading":"Видео от МегаФона"}},"new_editor":{"another_video":{"desc":"Click the gray film strip with a plus sign. Use another video from the web or your hard-drive, paste a coub link, or duplicate your first video. You can trim each part independently.","header":"Add another video"},"hero_title":"Create coub","how_it_works":{"desc":"Upload a video from your computer or YouTube. Choose the best part. It’s that simple. Take a look:","header":"How it works"},"make_first_button":"Make a Coub","more":{"desc":"By using multiple video sources, you can create viral mashups and reaction videos in a matter of minutes. Here are just a few examples of what you can accomplish.","header":"Check out these examples"},"music":{"desc":"Pick a soundtrack that fits, from your computer or from another coub.","header":"And now add some music"},"notes":{"audio":"Add audio track","film":"Create video mashups with<br>up to 10 video sources","upload":"Take a video from YouTube<br>or other sources"},"p_big":"Coub is perfect for quickly looping and remixing videos without the fuss of professional software. Watch this short video:"},"privacy_terms":{"accessing":{"descr_1":"You can review and change your personal information by&nbsp;logging into our Coub Services and visiting your User Account page on&nbsp;your mobile device.","descr_2":"You may also send&nbsp;us an&nbsp;e-mail at&nbsp;<a href=\"mailto:support@coub.com\">support@coub.com</a> to&nbsp;request access&nbsp;to, correct or&nbsp;delete any personal information that you have provided to&nbsp;us. We&nbsp;cannot delete your personal information except by&nbsp;also deleting your User Account. We&nbsp;may not accommodate a&nbsp;request to&nbsp;change information if&nbsp;we&nbsp;believe the change would violate any law or&nbsp;legal requirement or&nbsp;cause the information to&nbsp;be&nbsp;incorrect.","descr_3":"If&nbsp;you delete your User Generated Content from our Coub Services, copies of&nbsp;your User Generated Content may remain viewable in&nbsp;cached and archived pages, or&nbsp;might have been copied or&nbsp;stored by&nbsp;other users of&nbsp;our Coub Services. Proper access and use of&nbsp;information provided through the Coub Services, including User Generated Content, is&nbsp;governed by&nbsp;our terms of&nbsp;service in&nbsp;the COUB&trade; Terms of&nbsp;Service Agreement."},"annotation":"All Terms Used In&nbsp;this COUB&trade; Privacy Policy (&ldquo;Privacy Policy&rdquo;) unless otherwise defined herein are as&nbsp;defined in&nbsp;the COUB&trade; Terms of&nbsp;Service Agreement to&nbsp;which this Privacy Policy is&nbsp;linked and incorporated herein by&nbsp;reference.","california":{"descr_1":"California Civil Code Section 1798.83 permits users of&nbsp;our Coub Services that are California residents to&nbsp;request certain information regarding our disclosure of&nbsp;personal information to&nbsp;third parties for their direct marketing purposes. To&nbsp;make such a&nbsp;request, please send an&nbsp;e-mail to&nbsp;<a href=\"mailto:support@coub.com\">support@coub.com</a>."},"changes":{"descr_1":"It&nbsp;is&nbsp;our policy to&nbsp;post any changes we&nbsp;make to&nbsp;our Privacy Policy on&nbsp;this page. The date the Privacy Policy was last revised is&nbsp;identified at&nbsp;the top of&nbsp;the page. You are responsible for ensuring we&nbsp;have an&nbsp;up-to-date active and deliverable e-mail address for you, and for periodically visiting our Coub&trade; Privacy Policy link on&nbsp;the Website, or&nbsp;the Privacy Policy link in&nbsp;our Coub Services to&nbsp;review this Privacy Policy to&nbsp;check for any changes."},"children":{"descr":"Our Coub Services are not intended for children under 13&nbsp;years of&nbsp;age. No&nbsp;one under age 13&nbsp;may provide any personal information to&nbsp;our Coub Services. We&nbsp;do&nbsp;not knowingly collect personal information from children under 13. If&nbsp;you are under&nbsp;13, do&nbsp;not register for any of&nbsp;our Coub Services or&nbsp;use or&nbsp;provide any information to&nbsp;the Company through our Coub Services, contribute or&nbsp;use any Contributions or&nbsp;other content generated by&nbsp;you as&nbsp;a&nbsp;user on&nbsp;the Coub Services (&ldquo;User Generated Content&rdquo;) , use any of&nbsp;the interactive or&nbsp;public comment features available through the Coub Services or&nbsp;provide any information about yourself to&nbsp;us, including your name, address, telephone number, e-mail address or&nbsp;any screen name or&nbsp;user name you may use. If&nbsp;we&nbsp;learn we&nbsp;have collected or&nbsp;received personal information from a&nbsp;child under 13&nbsp;without verification of&nbsp;parental consent, we&nbsp;will delete that information. If&nbsp;you believe we&nbsp;might have any information from or&nbsp;about a&nbsp;child under&nbsp;13, please contact&nbsp;us at&nbsp;<a href=\"mailto:support@coub.com\">support@coub.com</a>."},"choices":{"_1":"Mobile Device Tracking Technologies and Geolocation Data.","_2":"Your mobile device may have certain settings that relate to&nbsp;the Applications Programming Interface or&nbsp;&ldquo;API&rdquo; that allows mobile applications or&nbsp;&ldquo;apps&rdquo; to&nbsp;access standard categories of&nbsp;content on&nbsp;a&nbsp;mobile device, but also sensitive content such as&nbsp;geolocation information. It&nbsp;is&nbsp;suggested by&nbsp;organizations responsible for the protection of&nbsp;consumer privacy interests, such as&nbsp;the Federal Trade Commission (&ldquo;FTC&rdquo;) that consumers should familiarize themselves with the privacy setting options available on&nbsp;their mobile devices to&nbsp;determine what information may be&nbsp;collected or&nbsp;tracked by&nbsp;certain applications and what steps can be&nbsp;taken to&nbsp;control that access, collection or&nbsp;tracking. These steps may differ depending on&nbsp;whether the mobile device&rsquo;s operating platform is&nbsp;based on&nbsp;the &ldquo;iOS&rdquo; used in&nbsp;most Apple<sup class=\"reg\">&reg;</sup> smartphones or&nbsp;the Android&trade; platforms used in&nbsp;others. Depending on&nbsp;the platform used by&nbsp;your mobile device you should be&nbsp;able review the type of&nbsp;data collected by&nbsp;mobile applications, including the mobile applications provided by&nbsp;the Coub Services, which may vary depending on&nbsp;the privacy settings on&nbsp;your device. For further information about these privacy settings, please contact your device manufacturer, mobile service provider, or&nbsp;the provider of&nbsp;the operating platform installed on&nbsp;your device. For further information on&nbsp;data collected specific to&nbsp;mobile applications used for the Coub Services as&nbsp;provided in&nbsp;this Privacy Policy please contact the Company at&nbsp;<a href=\"mailto:support@coub.com\">support@coub.com</a>.","_3":"Promotional Announcements from the Company.","_4":"If&nbsp;you do&nbsp;not wish to&nbsp;have your contact information used by&nbsp;the Company for our own promotional announcements or&nbsp;events, you can opt-out by&nbsp;sending&nbsp;us an&nbsp;e-mail stating your request to&nbsp;<a href=\"mailto:support@coub.com\">support@coub.com</a>. If&nbsp;we&nbsp;have sent you a&nbsp;promotional or&nbsp;event advisory e-mail, you may send&nbsp;us a&nbsp;return e-mail asking to&nbsp;be&nbsp;omitted from future e-mail distributions.","_5":"We allow third-party companies to collect certain information when you visit our web site. These companies may utilize cookies, pixels or other technologies to collect and use both personally identifiable information (e.g., your name, phone number, physical or electronic address) and non-personally identifiable information (e.g., click stream information, browser type, time and date, subject of advertisements clicked or scrolled over) during your visits to this and other web sites in order to provide advertisements about goods and services likely to be of greater interest to you. To learn more about this behavioral advertising practice or to opt-out of this type of advertising, you can visit the websites of the Digital Advertising Alliance at <a href=\"http://aboutads.info\" target=\"_blank\">www.aboutads.info</a> or Networking Advertising Initiative at <a href=\"http://networkadvertising.org/choices\" target=\"_blank\">www.networkadvertising.org/choices</a>.","_6":"California Civil Code Section 1798.83 permits customers of Company who are California residents to request certain information regarding its disclosure of their personally identifiable information to third parties for their direct marketing purposes. You may request a list of all of the third parties with whom we share your PII by sending an e-mail to <a href=\"mailto:support@coub.com\">support@coub.com</a> and place “California Third Party Disclosure” in the subject line. Please allow up to thirty days for a response.","descr_1":"We&nbsp;strive to&nbsp;provide you with choices regarding the personal information you provide to&nbsp;us. We&nbsp;have created mechanisms to&nbsp;provide you with the following control over your information:"},"contact":{"descr_2":"To&nbsp;ask questions or&nbsp;comment about this Privacy Policy and our privacy practices, contact&nbsp;us at: <a href=\"mailto:support@coub.com\">support@coub.com</a>."},"data_security":{"descr_1":"We&nbsp;have implemented measures designed to&nbsp;secure your personal information from accidental loss and from unauthorized access, use, alteration and disclosure. All information you provide to&nbsp;us is&nbsp;stored on&nbsp;our secure servers behind firewalls. Any User Account information will be&nbsp;encrypted using SSL technology.","descr_2":"The safety and security of&nbsp;your information also depends on&nbsp;you. Where we&nbsp;have given you (or&nbsp;where you have chosen) a&nbsp;password for access to&nbsp;certain parts of&nbsp;the Coub Services, you are responsible for keeping this password confidential. We&nbsp;ask you not to&nbsp;share your password with anyone. Unfortunately, the transmission of&nbsp;information via the Internet is&nbsp;not completely secure. Although we&nbsp;do&nbsp;our best to&nbsp;protect your personal information, we&nbsp;cannot guarantee the security of&nbsp;your personal information transmitted through our Coub Services. Any transmission of&nbsp;personal information is&nbsp;at&nbsp;your own risk. We&nbsp;are not responsible for circumvention of&nbsp;any privacy settings or&nbsp;security measures contained in&nbsp;our Coub Services."},"date":"Last modified: April 19, 2014","disclosure":{"_1":"To&nbsp;contractors, service providers and other third parties we&nbsp;use to&nbsp;support the Coub Services or&nbsp;our Website and who are bound by&nbsp;contractual obligations to&nbsp;keep personal information confidential and use it&nbsp;only for the purposes for which we&nbsp;disclose it&nbsp;to&nbsp;them.","_2":"To&nbsp;a&nbsp;buyer or&nbsp;other successor in&nbsp;the event of&nbsp;a&nbsp;merger, divestiture, restructuring, reorganization, dissolution or&nbsp;other sale or&nbsp;transfer of&nbsp;some or&nbsp;all of&nbsp;the Company&rsquo;s assets, whether as&nbsp;a&nbsp;going concern or&nbsp;as&nbsp;part of&nbsp;bankruptcy, liquidation or&nbsp;similar proceeding, in&nbsp;which personal information held by&nbsp;the Company about our users of&nbsp;Coub Services is&nbsp;among the assets transferred.","_3":"To fulfill the purpose for which you provide it. ","_4":"For any other purpose disclosed by us when you provide the information.","_5":"With your consent.","_6":"To&nbsp;comply with any court order, law or&nbsp;legal process, including to&nbsp;respond to&nbsp;any government or&nbsp;regulatory request.","_7":"To&nbsp;enforce or&nbsp;apply our terms of&nbsp;service as&nbsp;set forth in&nbsp;the COUB&trade; Terms of&nbsp;Service Agreement and other agreements, including for billing and collection purposes to&nbsp;the extent our Services require purchase.","_8":"If&nbsp;we&nbsp;believe disclosure is&nbsp;necessary or&nbsp;appropriate to&nbsp;protect the rights, property, or&nbsp;safety of&nbsp;the Company, and our users . This includes exchanging information with other companies and organizations for the purposes of&nbsp;fraud protection.","descr_1":"We&nbsp;may disclose aggregated information about our users, and information that does not identify any individual, without restriction.","descr_2":"We&nbsp;may disclose personal information that we&nbsp;collect or&nbsp;you provide as&nbsp;described in&nbsp;this Privacy Policy:","descr_3":"We may also disclose your personal information:"},"header":"Coub Privacy Policy","information":{"_1":"By&nbsp;which you may be&nbsp;personally identified, such as&nbsp;name, e-mail address and telephone number (<strong>&ldquo;personally identifiable information&rdquo;);</strong>","_2":"That is&nbsp;about you but individually does not identify you, such as&nbsp;the date of&nbsp;a&nbsp;user&rsquo;s access to&nbsp;the Coub Services, or&nbsp;date of&nbsp;a&nbsp;Contribution of&nbsp;User Generated Content; and/or","_3":"About your internet connection, the equipment you use, and due to&nbsp;the nature of&nbsp;mobile device applications and depending on&nbsp;your device settings, possibly the location of&nbsp;your device to&nbsp;access our Coub Services, and usage details.","_4":"Directly from you when you provide it&nbsp;to&nbsp;us, for example, upon registration for you User Account.","_5":"Automatically as&nbsp;you navigate through the Coub Services. Information collected automatically may include usage details, IP&nbsp;addresses and information collected through cookies, web beacons and other tracking technologies.","_6":"From third parties, for example, other technical support and legal copyright compliance partners.","descr":"We&nbsp;collect several types of&nbsp;information from and about users of&nbsp;our Coub Services, including information:","descr_2":"We collect this information:"},"information_provide":{"_1":"Information that you provide by&nbsp;filling in&nbsp;forms on&nbsp;mobile device applications downloaded from or&nbsp;used to&nbsp;access our Coub Services. This includes information provided at&nbsp;the time of&nbsp;registering to&nbsp;use our Coub Services, subscribing to&nbsp;our COUB&trade; Products or&nbsp;Services, or&nbsp;requesting further services. For example, many of&nbsp;our services require you to&nbsp;sign up&nbsp;for a&nbsp;Coub Services User Account. When you&nbsp;do, we&rsquo;ll ask for personally identifiable information, such&nbsp;as, for example, your name, email address, telephone number. And in&nbsp;order to&nbsp;take full advantage of&nbsp;the dynamic features we&nbsp;offer, we&nbsp;will also ask you to&nbsp;create a&nbsp;publicly visible User Profile, which may include your name and photo. We&nbsp;may also ask you for information when you report a&nbsp;problem with our Services or&nbsp;Website to&nbsp;our User Support Team.","_2":"Records and copies of&nbsp;your correspondence (including e-mail addresses), if&nbsp;you contact&nbsp;us. When you contact the Company, we&nbsp;may keep a&nbsp;record of&nbsp;your communication to&nbsp;help solve any issues you might be&nbsp;facing. We&nbsp;may use your email address to&nbsp;inform you about the Coub Services, such as&nbsp;letting you know about upcoming changes or&nbsp;improvements.","_3":"Your responses to surveys that we might ask you to complete for research purposes.","_4":"Details of&nbsp;ownership or&nbsp;attribution for any User Generated Content, creative works or&nbsp;productions. Currently, you are not required to&nbsp;provide any financial information to&nbsp;the Company before using the Coub Services or&nbsp;accessing our Websites, but we&nbsp;reserve the right to&nbsp;require such information if&nbsp;and when we&nbsp;choose to&nbsp;offer products or&nbsp;services for sale through our Services or&nbsp;Websites.","_5":"Your search queries on the Coub Services.","_6":"From access through the use of&nbsp;a&nbsp;mobile computing devise such as&nbsp;a&nbsp;&ldquo;smart phone&rdquo;, we&nbsp;also may be&nbsp;provided and collect device-specific information (such as&nbsp;your hardware model, operating system version, unique device identifiers, and mobile network information including phone number). This mobile device identifier information includes information such as&nbsp;the International Mobile Station Equipment Identity (IMEI), its WiFi radio (Media Access Control (MAC)) address and/or platform specific identifiers such as&nbsp;Apple<sup class=\"reg\">&reg;</sup>&rsquo;s Advertiser&nbsp;ID (IDFA). Depending on&nbsp;the settings you have made on&nbsp;your mobile device, the Company may be&nbsp;able to&nbsp;associate your device identifiers or&nbsp;phone number with your User Account.","descr":"The information we&nbsp;collect on&nbsp;or&nbsp;through our Coub Services or&nbsp;on&nbsp;a&nbsp;Website may include:","descr_2":"You may contribute User Generated Content, including photos, videos, digital media, graphics, likes or&nbsp;other information to&nbsp;be&nbsp;published or&nbsp;displayed (hereinafter, <strong>&ldquo;posted&rdquo;</strong>) through our Coub Services, or&nbsp;transmitted to&nbsp;other users of&nbsp;the Coub Services or&nbsp;third parties. Your User Generated Content is&nbsp;posted and transmitted to&nbsp;others at&nbsp;your own risk. Although we&nbsp;limit access to&nbsp;our Coub Services, please be&nbsp;aware that no&nbsp;security measures are perfect or&nbsp;impenetrable. Additionally, we&nbsp;cannot control the actions of&nbsp;other users of&nbsp;our Coub Services with whom you may choose to&nbsp;share your User Generated Content. Therefore, we&nbsp;cannot and do&nbsp;not guarantee that your User Generated Content will not be&nbsp;viewed by&nbsp;unauthorized persons."},"introduction":{"_1":"On the Coub Services","_2":"In e-mail, text and other electronic messages when you use the Coub Services.","_3":"When you interact with our authorized technical support partner(s) and any information and applications on&nbsp;third-party websites and services.","_4":"us&nbsp;offline or&nbsp;through any other means, including on&nbsp;any other website operated by&nbsp;us or&nbsp;any third party; or&nbsp;any third party, including through any application or&nbsp;content that may link to&nbsp;or&nbsp;be&nbsp;accessible from the Coub Services or&nbsp;on&nbsp;a&nbsp;Website.","_5":"any third party, including through any application or content that may link to or be accessible from the Coub Services or on a Website.","descr":"At&nbsp;Coub Ltd., a&nbsp;corporation organized under the laws of&nbsp;the country of&nbsp;Cyprus (<strong>&ldquo;Company&rdquo;</strong> or&nbsp;<strong>&ldquo;we&rdquo;</strong>) we&nbsp;respect your privacy and are committed to&nbsp;protecting it&nbsp;through our compliance with this Privacy Policy. This Privacy Policy describes the types of&nbsp;information we&nbsp;may collect from you or&nbsp;that you may provide to&nbsp;us when you sign up&nbsp;to&nbsp;use our services, including our website, Coub.com (the &ldquo;Website&rdquo;), our mobile applications, features or&nbsp;functionality and software (collectively, the &ldquo;Coub Services&rdquo;) and describes our practices for collecting, using, maintaining, protecting and disclosing that information.","descr_2":"This Privacy Policy applies to information we collect:","descr_3":"It does not apply to information collected by:","descr_4":"Please read this Privacy Policy carefully to&nbsp;understand our policies and practices regarding your information and how we&nbsp;will treat&nbsp;it. If&nbsp;you do&nbsp;not agree with our policies and practices, your choice is&nbsp;not to&nbsp;use the Coub Services or&nbsp;visit the Website. By&nbsp;registering for or&nbsp;accessing our Coub Services or&nbsp;using the Website, you agree to&nbsp;this Privacy Policy. This Privacy Policy may change from time to&nbsp;time. Your continued use of&nbsp;the Coub Services or&nbsp;the Website after we&nbsp;make changes is&nbsp;deemed to&nbsp;be&nbsp;acceptance of&nbsp;those changes, so&nbsp;please check this Privacy Policy periodically for updates."},"navigation":{"accessing":"Accessing and Correcting Your Information","california":"Your California Privacy Rights","changes":"Changes to Our Privacy Policy","children":"Children Under the Age of 13","choices":"Choices About How We Use and Disclose Your Information.","contact":"Contact Information","data_security":"Data Security","disclosure":"Disclosure of Your Information","information_collect":"Information We Collect About You and How We Collect It","information_provide":"Information You Provide to Us","introduction":"Introduction","social":"Privacy When Linking To Social Networking Sites","usage_details":"Usage Details, IP Addresses, Cookies and Other Technologies","we_use":"How We Use Your Information"},"social":{"descr_1":"When you associate a&nbsp;Social Networking Site such as&nbsp;Facebook or&nbsp;Twitter (&ldquo;SNS&rdquo;) with the Coub Services during either account registration or&nbsp;account linking, you allow the Company to&nbsp;access certain personal and non-personal information that you provided to&nbsp;each respective SNS, such as&nbsp;your user&nbsp;ID, first and last name, profile picture, email address and associated usage data. By&nbsp;accessing our Coub Services through an&nbsp;SNS, you are authorizing the Company to&nbsp;collect, store and use all information that you agreed the SNS could provide to&nbsp;the Company through the SNS. The Company&rsquo;s collection, storage and use of&nbsp;your information are governed by&nbsp;this Privacy Policy."},"usage_details":{"_1":"Details of&nbsp;your use of&nbsp;the Coub Services, including traffic data, logs and other communication data and the resources that you access and use on&nbsp;the Coub Services.","_2":"Information about your computer and internet connection, including your&nbsp;IP address, operating system and browser type.","_3":"Estimate our audience size and usage patterns.","_4":"Store information about your preferences, allowing us to customize our Coub Services according to your individual interests.","_5":"Recognize you when you return to our Coub Services.","_6":"Mobile Device Identifier’s: International Mobile Station Equipment Identity (IMEI),","_7":"WiFi radio: Media Access Control (MAC)","_8":"Address and/or platform specific identifiers: Apple®’s Advertiser ID (IDFA) ","_9":"Google Analytics (GA)","descr":"As&nbsp;you navigate through and interact with our Coub Services, we&nbsp;may automatically collect certain information about your equipment, browsing actions and patterns, including:","descr_2":"To&nbsp;the extent the information we&nbsp;collect automatically is&nbsp;intended solely to&nbsp;be&nbsp;used as&nbsp;statistical data, it&nbsp;would not be&nbsp;intended to&nbsp;identify any individual. There are instances, however, where data is&nbsp;collected to&nbsp;personalize our Coub Services to&nbsp;your needs, in&nbsp;which case data that would identify you personally could be&nbsp;collected. General statistical data helps&nbsp;us to&nbsp;improve our Coub Services and to&nbsp;deliver a&nbsp;better and more personalized service by&nbsp;enabling&nbsp;us to:","descr_3":"The technologies we use for this automatic data collection may include:"},"we_use":{"_1":"To present our Coub Services and their content to you.","_2":"To provide you with information, products or services that you request from us.","_3":"To fulfill any other purpose for which you provide the information.","_4":"To provide you with notices about your User Account.","_5":"To&nbsp;carry out our obligations and enforce our rights arising from any contracts entered into between you and&nbsp;us.","_6":"To&nbsp;notify you about changes to&nbsp;our Coub Services or&nbsp;any products or&nbsp;services we&nbsp;offer or&nbsp;provide though them.","_7":"To allow you to participate in interactive features in our Coub Services.","_8":"In any other way we may describe when you provide the information.","_9":"For any other purpose with your consent.","descr":"We&nbsp;use information that we&nbsp;collect about those authenticated users accessing our Coub Services using their mobile device, which you provide to&nbsp;us, including any personal information:"}},"profile_page_right":{"complete":"Конкурс завершен. <br /><strong>Всем спасибо</strong>"},"short_startpage":{"header":"A coub is a looped video<br />up to 10 seconds long","small_desc":"Turn your favorite videos into coubs online.<br> Share them with friends and enjoy<br> what others create.","small_desc_1":"Turn your favorite videos into coubs online.","small_desc_2":"Share them with friends and enjoy what others create."},"starwars":{"coubs_en":"<p>Participants' coubs</p>","in_movie_en":"On December 18, the latest episode in the Star Wars saga is released: The Force Awakens. ","share_en":"Share with friends:","text_left_col_en":"Join Star Wars Week on Coub by making coubs from the latest trailers, and try to find the secret emojis.","text_left_col_ru":"Присоединяйся к неделе «Звёздных Войн» на Coub, создавай коубы из трейлеров нового эпизода саги, а также ищи секретные эмодзи.","text_right_col_en":"Tag your coubs with <a href='http://ads.adfox.ru/214153/goLink?p1=brkor&p2=v&p5=diemu&pr=[RANDOM]'>#theforceawakens</a> if you want to be recoubed by our official Star Wars channel.","text_right_col_ru":"Ставь хэштег <a href='http://ads.adfox.ru/214153/goLink?p1=brkor&p2=v&p5=diemn&pr=[RANDOM]'>#пробуждениесилы</a> и попади в официальный канал «Звёздных Войн» на Сoub."},"submenu":{"about":"About","blog":"Blog","community_guidelines":"Community Guidelines","jobs":"Jobs","terms_of_service":"Terms Of Service"},"subscription":{"placeholder":"example@coub.com","private":"Private, secure, spam-free."},"tele2":{"share":{"vkontakte":"Share on Vkontakte"},"sharing":"РАССКАЖИТЕ ПРО КОНКУРС ДРУЗЬЯМ:","sharing_title":"Tele2","support":"При поддержке Tele2","text":"Тele2 предлагает тебе принять участие в конкурсе и выиграть 3G смартфон Tele2 mini на две сим-карты.<br/><br/>Чтобы стать его обладателем, сделай коуб о том, как сильно ты хочешь новый смартфон и используй промо-ролик Tele2 mini.<br/><br/>Поставь к своему коубу хештеги <a href='//ads.adfox.ru/214153/goLink?p1=brkor&p2=v&p5=eeqqt&pr=765432' target='_blank'>#tele2</a> и <a href='//ads.adfox.ru/214153/goLink?p1=brkor&p2=v&p5=eeqrp&pr=759431' target='_blank'>#tele2mini</a> и считай что классный смартфон у тебя в кармане!<br/><br/>","use_video":"Используй этот ролик:"},"terms_of_service":{"additional_terms":{"four":"Severability. If any provision of this Agreement is found to be invalid by a court of competent jurisdiction, you and Coub.com nevertheless agree that the court should endeavor to give effect to the parties' intentions as reflected in the provision, and that the other provisions of this Agreement will remain in full force and effect.","one":"Notices. Any notice to us shall be given by email <a href=\"mailto:coub@coub.com\">coub@coub.com</a>, and any notice to you shall be given to the email address that you provided us during the registration process. Notice shall be considered given Entire Agreement. This Agreement constitutes the entire agreement between you and Coub.com, superseding any prior agreements between you and Coub.com. To the extent that you have previously registered with Coub.com and provided Your Information, this Agreement now governs how Coub.com may use Your Information, whether provided in the past or the future.","three":"Governing Law. This Agreement and the relationship between you and Coub.com shall be governed by the laws of the Republic of Cyprus without regard to its conflict of laws provisions. You and Coub.com agree to submit to the personal and exclusive jurisdiction of the courts located within the Republic of Cyprus.","two":"No Agency. No agency, partnership, joint venture, employee-employer or franchiser-franchisee relationship between you and Coub.com is intended or created by this Agreement."},"agreement":"YOU MUST READ AND AGREE TO&nbsp;THE PRIVACY POLICY AND THESE TERMS GOVERNING YOUR USE OF&nbsp;THE COMPANY&rsquo;S SERVICES, INCLUDING THE COUB.COM WEBSITE (THE &ldquo;WEBSITE&rdquo;), THE MOBILE APPLICATIONS, FEATURES OR&nbsp;FUNCTIONALITY AND SOFTWARE (COLLECTIVELY, THE &ldquo;COUB SERVICES&rdquo;), BEFORE USING THE COUB SERVICES. BY&nbsp;INSTALLING, OR&nbsp;OTHERWISE USING THE COUB SERVICES, YOU AGREE TO&nbsp;THESE TERMS. IF&nbsp;YOU DO&nbsp;NOT AGREE TO&nbsp;THESE TERMS, DO&nbsp;NOT INSTALL&nbsp;OR OTHERWISE USE THE COUB SERVICES.","communications":"You understand and agree that we may send you certain communications, such as Coub.com service announcements and newsletters, and that these communications are considered part of our Platform.","companyright":{"_1":"The Company&rsquo;s Management of&nbsp;the Coub Services. The Company reserves the right but does not have the obligation&nbsp;to: (a) monitor the Coub Services for violations of&nbsp;this Agreement; (b) take appropriate legal action against anyone who, in&nbsp;the Company&rsquo;s sole discretion, violates this Agreement, including without limitation, reporting you to&nbsp;law enforcement authorities;&nbsp;in&nbsp;the Company&rsquo;s sole discretion and without limitation, refuse, restrict access to&nbsp;or&nbsp;availability&nbsp;of, or&nbsp;disable (to&nbsp;the extent technologically feasible) any user&rsquo;s Contribution or&nbsp;any portion thereof that may violate this Agreement or&nbsp;any Company policy; (d) in&nbsp;the Company&rsquo;s sole discretion and without limitation, notice or&nbsp;liability to&nbsp;remove from the Coub Services or&nbsp;otherwise disable all files and content that are excessive in&nbsp;size or&nbsp;are in&nbsp;any way burdensome to&nbsp;the Company&rsquo;s systems; (e) terminate the User Account(s) of&nbsp;repeat infringers; and (f) to&nbsp;otherwise manage the Coub Services in&nbsp;a&nbsp;manner designed to&nbsp;protect the rights and property of&nbsp;the Company and others and to&nbsp;facilitate the proper functioning of&nbsp;the Coub Services.","_2":"The Company’s Right to Terminate Users. WITHOUT LIMITING ANY OTHER PROVISION OF THIS AGREEMENT, THE COMPANY RESERVES THE RIGHT TO, IN THE COMPANY’S SOLE DISCRETION AND WITHOUT NOTICE OR LIABILITY, DENY ACCESS TO AND USE OF THE COUB SERVICES TO, ANY PERSON FOR ANY REASON OR FOR NO REASON AT ALL, INCLUDING WITHOUT LIMITATION FOR BREACH OF ANY REPRESENTATION, WARRANTY OR COVENANT CONTAINED IN THIS AGREEMENT, OR OF ANY APPLICABLE LAW OR REGULATION."},"copyright":{"descr":"We&nbsp;respect the intellectual property rights in&nbsp;creative works and of&nbsp;those who create them, and take violations of&nbsp;those rights seriously and expect when you use Coub Services to&nbsp;do&nbsp;the same. In&nbsp;appropriate circumstances and at&nbsp;the Company&rsquo;s discretion, it&nbsp;is&nbsp;the policy of&nbsp;the Company to&nbsp;disable and/or terminate the User Accounts of&nbsp;users who repeatedly infringe or&nbsp;are repeatedly charged with infringing the copyrights or&nbsp;other intellectual property rights of&nbsp;others. Because the Company takes matters of&nbsp;intellectual property rights violations seriously, we&nbsp;will respond expeditiously to&nbsp;claims of&nbsp;copyright infringement committed using the Coub Services that are reported to&nbsp;Coub&rsquo;s designated copyright agent (&ldquo;Coub Copyright Agent&rdquo;), identified in&nbsp;the notice discussed at&nbsp;<a href='http://coub.com/dmca'>http://coub.com/dmca</a>."},"date":"Effective Date: November 22, 2016","disclaimers":{"descr":"The Company cannot control the nature of&nbsp;the content available through the Coub Services. By&nbsp;providing and operating the Coub Services, The Company does not represent or&nbsp;imply that The Company endorses any comments, Contributions or&nbsp;other content available on&nbsp;or&nbsp;linked to&nbsp;by&nbsp;the Coub Services, including without limitation content hosted on&nbsp;third party Websites, or&nbsp;that The Company believes Contributions, comments or&nbsp;other content to&nbsp;be&nbsp;accurate, useful or&nbsp;nonharmful.","descr_2":"YOU AGREE THAT YOUR USE OF&nbsp;THE COUB SERVICES WILL&nbsp;BE AT&nbsp;YOUR SOLE RISK. TO&nbsp;THE FULLEST EXTENT PERMITTED BY&nbsp;LAW. THE COMPANY, ITS OFFICERS, DIRECTORS, EMPLOYEES, AND AGENTS DISCLAIM&nbsp;ALL&nbsp;WARRANTIES, EXPRESS OR&nbsp;IMPLIED, IN&nbsp;CONNECTION WITH THE COUB SERVICES AND YOUR USE THEREOF. THE COMPANY MAKES NO&nbsp;WARRANTIES OR&nbsp;REPRESENTATIONS ABOUT THE ACCURACY OR&nbsp;COMPLETENESS OF&nbsp;THE WEBSITE&rsquo;S OR&nbsp;COUB SERVICES&rsquo; CONTENT. CONTRIBUTIONS, OR&nbsp;THE CONTENT OF&nbsp;ANY WEBSITES LINKED TO&nbsp;THE WEBSITE OR&nbsp;THE COUB SERVICES AND ASSUMES NO&nbsp;LIABILITY OR&nbsp;RESPONSIBILITY FOR ANY (A) ERRORS, MISTAKES, OR&nbsp;INACCURACIES OF&nbsp;CONTENT AND MATERIALS, (B) PERSONAL INJURY OR&nbsp;PROPERTY DAMAGE, OF&nbsp;ANY NATURE WHATSOEVER, RESULTING FROM YOUR ACCESS TO&nbsp;AND USE OF&nbsp;OUR WEBSITE OR&nbsp;THE COUB SERVICES, &nbsp;ANY UNAUTHORIZED ACCESS TO&nbsp;OR&nbsp;USE OF&nbsp;OUR SECURE SERVERS AND/OR ANY AND ALL&nbsp;PERSONAL INFORMATION AND/OR FINANCIAL INFORMATION STORED THEREIN, (D) ANY INTERRUPTION OR&nbsp;CESSATION OF&nbsp;TRANSMISSION TO&nbsp;OR&nbsp;FROM THE WEBSITE OR&nbsp;THE COUB SERVICES , (E) ANY BUGS, VIRUSES, TROJAN HORSES, OR&nbsp;THE LIKE WHICH MAY BE&nbsp;TRANSMITTED TO&nbsp;OR&nbsp;THROUGH THE WEBSITE OR&nbsp;THE COUB SERVICES BY&nbsp;ANY THIRD PARTY, AND/OR (F) ANY ERRORS OR&nbsp;OMISSIONS IN&nbsp;ANY CONTENT AND MATERIALS OR&nbsp;FOR ANY LOSS OR&nbsp;DAMAGE OF&nbsp;ANY KIND INCURRED AS&nbsp;A&nbsp;RESULT OF&nbsp;THE USE OF&nbsp;ANY CONTENT POSTED, TRANSMITTED, OR&nbsp;OTHERWISE MADE AVAILABLE VIA THE WEBSITE OR&nbsp;THE .COUB SERVICES. THE COMPANY DOES NOT WARRANT, ENDORSE, GUARANTEE, OR&nbsp;ASSUME RESPONSIBILITY FOR ANY PRODUCT OR&nbsp;SERVICE ADVERTISED OR&nbsp;OFFERED BY&nbsp;A&nbsp;THIRD PARTY THROUGH THE WEBSITE OR&nbsp;THE COUB SERVICES OR&nbsp;ANY MOBILE APPLICATION, HYPERLINKED WEBSITE OR&nbsp;FEATURED IN&nbsp;ANY BANNER OR&nbsp;OTHER ADVERTISING, AND THE COMPANY WILL&nbsp;NOT BE&nbsp;A&nbsp;PARTY TO&nbsp;OR&nbsp;IN&nbsp;ANY WAY BE&nbsp;RESPONSIBLE FOR MONITORING ANY TRANSACTION BETWEEN YOU AND THIRD-PARTY PROVIDERS OF&nbsp;PRODUCTS OR&nbsp;SERVICES. AS&nbsp;WITH THE PURCHASE OF&nbsp;A&nbsp;PRODUCT OR&nbsp;SERVICE THROUGH ANY MEDIUM OR&nbsp;IN&nbsp;ANY ENVIRONMENT, YOU SHOULD&nbsp;USE YOUR BEST JUDGMENT AND EXERCISE CAUTION WHERE APPROPRIATE. YOU EXPRESSLY ACKNOWLEDGE AND AGREE THAT USE OF&nbsp;THE COUB SERVICES, EXPRESSLY INCLUDING ANY MOBILE APPLICATIONS OR&nbsp;OTHER SOFTWARE IS&nbsp;AT&nbsp;YOUR SOLE RISK AND THAT THE ENTIRE RISK AS&nbsp;TO&nbsp;SATISFACTORY QUALITY, PERFORMANCE, ACCURACY AND EFFORT IS&nbsp;WITH YOU. TO&nbsp;THE MAXIMUM EXTENT PERMITTED BY&nbsp;APPLICABLE LAW, THE SOFTWARE AND ANY SERVICES PERFORMED OR&nbsp;PROVIDED BY&nbsp;THE SOFTWARE (&ldquo;PERFORMANCE&rdquo;) ARE PROVIDED &ldquo;AS&nbsp;IS&rdquo; AND &ldquo;AS&nbsp;AVAILABLE&rdquo;, WITH ALL&nbsp;FAULTS AND WITHOUT WARRANTY OF&nbsp;ANY KIND, AND THE COMPANY HEREBY DISCLAIMS ALL&nbsp;WARRANTIES AND CONDITIONS WITH RESPECT TO&nbsp;THE PERFORMANCE, EITHER EXPRESS, IMPLIED OR&nbsp;STATUTORY, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES AND/OR CONDITIONS OF&nbsp;MERCHANTABILITY, OF&nbsp;SATISFACTORY QUALITY, OF&nbsp;FITNESS FOR A&nbsp;PARTICULAR PURPOSE, OF&nbsp;ACCURACY, OF&nbsp;QUIET ENJOYMENT, AND NON-INFRINGEMENT OF&nbsp;THIRD PARTY RIGHTS. THE COMPANY DOES NOT WARRANT AGAINST INTERFERENCE WITH YOUR ENJOYMENT OF&nbsp;THE PERFORMANCE, THAT THE FUNCTIONS CONTAINED IN, OR&nbsp;SERVICES PERFORMED OR&nbsp;PROVIDED BY&nbsp;THE PERFORMANCE WILL&nbsp;MEET YOUR REQUIREMENTS, THAT THE OPERATION OF&nbsp;THE PERFORMANCE WILL&nbsp;BE UNINTERRUPTED OR&nbsp;ERROR-FREE, OR&nbsp;THAT DEFECTS IN&nbsp;THE PERFORMANCE WILL&nbsp;BE CORRECTED. NO&nbsp;ORAL OR&nbsp;WRITTEN INFORMATION OR&nbsp;ADVICE GIVEN BY&nbsp;THE COMPANY OR&nbsp;ITS AUTHORIZED REPRESENTATIVE(S) SHALL&nbsp;CREATE A&nbsp;WARRANTY. SOME JURISDICTIONS DO&nbsp;NOT ALLOW THE EXCLUSION OF&nbsp;IMPLIED WARRANTIES OR&nbsp;LIMITATIONS ON&nbsp;APPLICABLE STATUTORY RIGHTS OF&nbsp;A&nbsp;CONSUMER, SO&nbsp;THE ABOVE EXCLUSION AND LIMITATIONS MAY NOT APPLY TO&nbsp;YOU.<br />"},"dispute_resolution":{"one":"Process. The parties will attempt in good faith to resolve through negotiation any dispute, claim or controversy arising out of or relating to this Agreement including the documents it incorporates by reference, your use of our Platform, Your Information and your violation of any law or the rights of a third party. In the event that the dispute, claim or controversy is not resolved by these negotiations, the parties select the Republic of Cyprus as the only forum in which any such dispute shall be litigated.","two":"Negotiation. Either party may initiate negotiations by providing written notice to the other party, setting forth the subject of the dispute and the relief requested. The recipient of such notice will respond in writing within ten (10) business days with a statement of its position on and recommended solution to the dispute. If the dispute is not resolved by this exchange of correspondence, then representatives of each party with full settlement authority will meet in person or otherwise at a mutually agreeable time and place within thirty (30) business days of the date of the initial notice in order to exchange relevant information and perspectives, and to attempt to resolve the dispute."},"disputecompany":{"descr":"ALL&nbsp;DISPUTES ARISING OUT OF&nbsp;OR&nbsp;RELATING TO&nbsp;THIS AGREEMENT (INCLUDING ITS FORMATION, PERFORMANCE, OR&nbsp;ALLEGED BREACH) OR&nbsp;YOUR ACCESS TO&nbsp;OR&nbsp;USE OF&nbsp;THE MATERIALS, CONTRIBUTIONS AND WEBSITE, INCLUDING WITHOUT LIMITATION YOUR OR&nbsp;OTHERS&rsquo; DOWNLOADING OR&nbsp;CONSUMPTION OF&nbsp;MATERIALS OR&nbsp;OTHER MATERIALS AVAILABLE BY&nbsp;MEANS OF&nbsp;THE COUB SERVICES OR&nbsp;THIRD PARTY APPLICATIONS OR&nbsp;WEBSITES, YOUR UPLOADING CONTRIBUTIONS TO&nbsp;THE WEBSITE, OR&nbsp;YOUR PURCHASING OF&nbsp;GOODS OR&nbsp;SERVICES FROM THIRD PARTIES, WILL&nbsp;BE EXCLUSIVELY RESOLVED UNDER CONFIDENTIAL BINDING ARBITRATION HELD&nbsp;IN SAN FRANCISCO, CALIFORNIA BEFORE AND IN&nbsp;ACCORDANCE WITH THE RULES FOR ALTERNATIVE DISPUTE RESOLUTION ESTABLISHED BY&nbsp;THE ALTERNATIVE DISPUTE RESOLUTION FIRM ORIGINALLY KNOWN AS&nbsp;JUDICIAL ARBITRATION AND MEDIATION SERVICES, INC., N/K/A JAMS, THE RESOLUTION EXPERTS (&ldquo;JAMS&rdquo;). NOTWITHSTANDING THE FOREGOING, FOR ANY DISPUTE YOU HAVE WITH THE COMPANY, YOU AGREE TO&nbsp;FIRST CONTACT US&nbsp;AND ATTEMPT TO&nbsp;RESOLVE THE DISPUTE WITH US&nbsp;INFORMALLY AND THE COMPANY WILL&nbsp;HAVE THE RIGHT TO&nbsp;SEEK INJUNCTIVE RELIEF TO&nbsp;ENFORCE THIS AGREEMENT OR&nbsp;TO&nbsp;STOP OR&nbsp;PREVENT AN&nbsp;INFRINGEMENT OF&nbsp;PROPRIETARY OR&nbsp;OTHER THIRD PARTY RIGHTS. IN&nbsp;THE EVENT OF&nbsp;LITIGATION OR&nbsp;TO&nbsp;COMPEL ARBITRATION OR&nbsp;TO&nbsp;ENFORCE AN&nbsp;ARBITRATION AWARD UNDER THIS SECTION, OR&nbsp;TO&nbsp;OBTAIN AN&nbsp;INJUNCTION UNDER THIS SECTION, THE PARTIES HEREBY IRREVOCABLY CONSENT AND SUBMIT TO&nbsp;THE EXCLUSIVE PERSONAL JURISDICTION AND VENUE OF&nbsp;THE STATE AND FEDERAL COURTS LOCATED IN&nbsp;SAN FRANCISCO COUNTY, CALIFORNIA. THIS AGREEMENT WILL&nbsp;BE GOVERNED AND INTERPRETED EXCLUSIVELY UNDER THE LAWS OF&nbsp;THE STATE OF&nbsp;CALIFORNIA."},"disputesusers":{"descr":"You are solely responsible for your conduct. The Company reserves the right, but has no&nbsp;obligation, to&nbsp;monitor disputes between you and other Users."},"eligibility":{"descr":"By&nbsp;using the Coub Services, you represent and warrant that: (a) all registration information you submit is&nbsp;truthful and accurate; (b) you will maintain the accuracy of&nbsp;such information; (c)&nbsp;you are 13&nbsp;years of&nbsp;age or&nbsp;older; and (d) your use of&nbsp;the Coub Services does not violate any applicable law or&nbsp;regulation."},"footer":"Copyright © 2016 Coub Ltd and/or its suppliers and licensors, 5 Themistokli Dervi Street, Elenion Building, 1066 Nicosia, Cyprus. All rights reserved. COUB™ is a trademark of Coub Ltd.","header":"Terms of service","indemnity":{"descr":"You agree to&nbsp;indemnify and hold the Company, its subsidiaries and affiliates, if&nbsp;any, and their respective officers, agents, partners and employees, harmless from any loss, liability, claim or&nbsp;demand, including reasonable attorneys&rsquo; fees, made by&nbsp;any third party due to&nbsp;or&nbsp;arising out of&nbsp;your Contributions, use of&nbsp;the Coub Services in&nbsp;violation of&nbsp;this Agreement and/or arising from a&nbsp;breach of&nbsp;this Agreement and/or any breach of&nbsp;your representations and warranties set forth above and/or if&nbsp;any Contribution that you post on&nbsp;the Website or&nbsp;through the Coub Services causes the Company to&nbsp;be&nbsp;liable to&nbsp;a&nbsp;third party."},"limitation":{"descr":"IN&nbsp;NO&nbsp;EVENT SHALL&nbsp;THE COMPANY BE&nbsp;LIABLE TO&nbsp;YOU OR&nbsp;ANY THIRD PARTY FOR ANY INDIRECT, CONSEQUENTIAL, EXEMPLARY, INCIDENTAL, SPECIAL OR&nbsp;PUNITIVE DAMAGES, INCLUDING LOST PROFIT DAMAGES ARISING FROM YOUR USE OF&nbsp;THE COUB SERVICES, EVEN IF&nbsp;THE COMPANY HAS BEEN ADVISED OF&nbsp;THE POSSIBILITY OF&nbsp;SUCH DAMAGES. NOTWITHSTANDING ANYTHING TO&nbsp;THE CONTRARY CONTAINED HEREIN, THE COMPANY&rsquo;S LIABILITY TO&nbsp;YOU FOR ANY CAUSE WHATSOEVER AND REGARDLESS OF&nbsp;THE FORM OF&nbsp;THE ACTION, WILL&nbsp;AT ALL&nbsp;TIMES BE&nbsp;LIMITED TO&nbsp;THE AMOUNT PAID, IF&nbsp;ANY, BY&nbsp;YOU TO&nbsp;THE COMPANY FOR THE COUB SERVICES DURING THE TERM OF&nbsp;YOUR USE OF&nbsp;THE WEBSITE OR&nbsp;THE COUB SERVICES"},"links":"Third parties may provide links to other websites or resources. Because we have no control over such websites or resources, you acknowledge and agree that we are not responsible for the availability of such websites or resources, and do not endorse and are not responsible or liable for any content, advertising, products, or other materials on or available from such websites or resources. You also acknowledge and agree that Coub.com shall not be responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in connection with the use of or reliance on any such content, goods or services available on or through any such websites or resource.","modifications":{"descr":"The Company may modify this Agreement from time to&nbsp;time, which modifications shall be&nbsp;incorporated into the Agreement and become binding on&nbsp;users in&nbsp;accordance with the introductory text at&nbsp;the beginning of&nbsp;this Agreement. In&nbsp;addition to&nbsp;the notice provided by&nbsp;the change in&nbsp;the Effective Date of&nbsp;this Agreement, the Company may, but is&nbsp;not obligated&nbsp;to, alert all Users with whom it&nbsp;maintains email information, of&nbsp;material modifications by&nbsp;means of&nbsp;sending an&nbsp;email to&nbsp;their most recently provided email address. Any and all changes to&nbsp;or&nbsp;restatements of&nbsp;this Agreement will be&nbsp;reflected on&nbsp;the Website after the words &ldquo;Effective Date&rdquo; at&nbsp;the top of&nbsp;this Agreement. You agree to&nbsp;be&nbsp;bound to&nbsp;any changes to&nbsp;this Agreement when you use the Coub Services after any such modification or&nbsp;Effective Date change is&nbsp;posted. It&nbsp;is&nbsp;therefore important that you regularly review this Agreement and keep your contact information current to&nbsp;ensure you are informed of&nbsp;any changes."},"navigation":{"additional":"Additional Terms","communications":"Communications from Coub.com Staff","companyright":"The Company’s Right to Manage the Coub Services and Terminate Users","copyright":"Copyright Policy","disclaimers":"Disclaimers","disputecompany":"Disputes with the Company","disputesusers":"Disputes between Users","eligibility":"Eligibility","indemnity":"Indemnity","info":"Your Information","limitation":"Limitation on Liability","links":"Links","modifications":"Modifications","no_resale":"No Resale","noncomercial":"Noncommercial Use by Users","notices":"Notices and Contact Information","other":"Other","ownership":"Ownership Rights; License Rights; User Contributions","passwords":"Passwords","platform":"Use of Platform","prohibition":"Prohibited Activities","resolution":"Dispute Resolution","term":"Term","termination":"Termination; Breach","trademarks":"Trademarks; Copyrights; Proprietary Rights","users":"Users and Members","users_and_warranties":"User Representations and Warranties","warranties":"Warranties; Liability"},"no_resale":"You agree not to reproduce, duplicate, copy, sell, resell or exploit for any commercial purposes, any portion of Coub.com's Platform, use of the Platform, or access to the Platform for any sales of goods or services, or promotion of a company, good, or service.","noncomercial":{"descr":"The Coub Services are for the personal use of&nbsp;Users only and may not be&nbsp;used in&nbsp;connection with any commercial endeavors except those that are specifically endorsed or&nbsp;approved by&nbsp;the Company. You shall not do&nbsp;the following without the express written consent of&nbsp;the Company: (a) make any unauthorized use of&nbsp;the Coub Services, including collecting usernames and/or email addresses of&nbsp;users by&nbsp;electronic or&nbsp;other means for the purpose of&nbsp;sending unsolicited email; and (b) engage in&nbsp;unauthorized framing of&nbsp;or&nbsp;linking to&nbsp;the Website without reference or&nbsp;attribution to&nbsp;Coub as&nbsp;the provider of&nbsp;the Coub Services."},"notices":{"descr":"Except as&nbsp;otherwise provided in&nbsp;this Agreement, the Company will give you any notices by&nbsp;posting them on&nbsp;the Website. Since notice of&nbsp;any material change to&nbsp;this Agreement will be&nbsp;posted to&nbsp;the Website for at&nbsp;least 30&nbsp;days, we&nbsp;encourage you to&nbsp;visit the Website at&nbsp;least that often. You also authorize the Company to&nbsp;send notices (including notice of&nbsp;subpoenas or&nbsp;other legal process, if&nbsp;any) via electronic mail to&nbsp;either your User Account or&nbsp;to&nbsp;the email address that we&nbsp;have on&nbsp;record for you. You must check the Website for notices, and you will be&nbsp;considered to&nbsp;have received a&nbsp;notice when it&nbsp;is&nbsp;made available to&nbsp;you by&nbsp;posting on&nbsp;the Website or&nbsp;when sent by&nbsp;the Company to&nbsp;your email address via electronic mail, whether or&nbsp;not received by&nbsp;you. The Company may provide notice to&nbsp;any e-mail or&nbsp;other address that you provide to&nbsp;us. You must keep your address current and any notice sent by&nbsp;the Company to&nbsp;the address that you have most recently provided is&nbsp;effective notice. With the exception of&nbsp;notices related to&nbsp;removal of&nbsp;licensed material and to&nbsp;copyright infringement as&nbsp;described in&nbsp;Sections 9&nbsp;above, you must send&nbsp;us any notice by&nbsp;mailing it&nbsp;to&nbsp;our address for Legal Notices which&nbsp;is: Coub Ltd&nbsp;5 Themistokli Dervi Street, Elenion Building, 1066&nbsp;Nicosia, Cyprus,.Attn: Legal Department."},"other":{"descr":"This Agreement together with our Privacy Policy and any other exhibits or&nbsp;documents linked to&nbsp;it&nbsp;or&nbsp;incorporated into this Agreement by&nbsp;reference, constitutes the entire agreement between you and the Company regarding the use of&nbsp;the Coub Services. The failure of&nbsp;the Company to&nbsp;exercise or&nbsp;enforce any right or&nbsp;provision of&nbsp;this Agreement shall not operate as&nbsp;a&nbsp;waiver of&nbsp;such right or&nbsp;provision. The section titles in&nbsp;this Agreement are for convenience only and have no&nbsp;legal or&nbsp;contractual effect. This Agreement operates to&nbsp;the fullest extent permissible by&nbsp;law. If&nbsp;any provision or&nbsp;part of&nbsp;a&nbsp;provision of&nbsp;this Agreement is&nbsp;unlawful, void or&nbsp;unenforceable, that provision or&nbsp;part of&nbsp;the provision is&nbsp;deemed severable from this Agreement and does not affect the validity and enforceability of&nbsp;any remaining provisions. The terms and conditions contained in&nbsp;this Agreement may not be&nbsp;modified by&nbsp;you except in&nbsp;a&nbsp;writing duly signed by&nbsp;you and an&nbsp;authorized representative of&nbsp;the Company. This Agreement will not be&nbsp;governed by&nbsp;the United Nations Convention on&nbsp;Contracts for the International Sale of&nbsp;Goods, the application of&nbsp;which is&nbsp;hereby expressly excluded."},"ownership":{"_1":"Ownership of&nbsp;Your Contributions. You retain ownership of&nbsp;your rights in&nbsp;any Contribution you post to&nbsp;the Website or&nbsp;through the Coub Services, subject to&nbsp;the non-exclusive rights that you grant to&nbsp;us as&nbsp;described in&nbsp;this Agreement.","_2":"Your License to&nbsp;Coub Ltd. You hereby grant the Company, Coub Ltd, a&nbsp;world-wide, royalty-free, freely transferable, freely sublicensable (through unlimited levels of&nbsp;sublicense), non-exclusive license to&nbsp;use, reproduce, modify, transmit, distribute, publicly perform and display (including in&nbsp;each case by&nbsp;means of&nbsp;a&nbsp;digital video and audio transmission), advertise&nbsp;in, on, and around, and create derivative works of&nbsp;any of&nbsp;your Contributions, in&nbsp;any form, media, or&nbsp;technology now known or&nbsp;later developed. You also hereby waive any moral rights you may have in&nbsp;such Contributions under the laws of&nbsp;any jurisdiction. We&nbsp;may (but are not obligated&nbsp;to) display your Contributions, including your username.","_3":"Your License to&nbsp;Other Users: You further grant all users of&nbsp;the Coub Services permission to&nbsp;view your Contributions for their personal, non-commercial purposes. This includes the right to&nbsp;copy and make derivative works from your Contributions to&nbsp;the extent necessary to&nbsp;view the Contributions or&nbsp;create another COUB from any COUB or&nbsp;Contribution created by&nbsp;you and provided through the Coub Services or&nbsp;posted to&nbsp;the Website. The foregoing licenses are in&nbsp;addition to&nbsp;any license you may decide to&nbsp;grant (e.g., a&nbsp;Creative Commons license).","_4":"Duration of&nbsp;Licenses: The above licenses will continue for each Contribution unless and until you remove the Contribution from the Coub Services or&nbsp;Website, in&nbsp;which case the licenses will terminate within a&nbsp;commercially reasonable period of&nbsp;time. Notwithstanding the foregoing, the license for legal archival/preservation purposes will continue indefinitely. Please note that any removed Contribution may be&nbsp;cached in&nbsp;search engine indices after removal and that the Company has no&nbsp;control over such caching.","_5":"Your Right to&nbsp;Terminate the License. You may remove or&nbsp;modify any Contribution that you post in&nbsp;the Coub Services. If, prior to&nbsp;such removal or&nbsp;modification, the Company has distributed, or&nbsp;developed specific plans to&nbsp;distribute, any electronic, printed, or&nbsp;other materials containing such Contribution (e.g., in&nbsp;advertising, promotion or&nbsp;otherwise), the Company has a&nbsp;limited right to&nbsp;continue to&nbsp;distribute those materials. If&nbsp;you want The Company to&nbsp;stop distributing the materials, simply send&nbsp;us written notice to&nbsp;stop distributing such materials, in&nbsp;which event we&nbsp;will stop distributing the materials within 30&nbsp;days of&nbsp;receipt of&nbsp;your written notice. Your notice must be&nbsp;signed by&nbsp;you, include your telephone number and email address, and be&nbsp;sent by&nbsp;first class mail, postage prepaid, to&nbsp;Coub Ltd&nbsp;5 Themistokli Dervi Street, Elenion Building, 1066&nbsp;Nicosia, Cyprus, Attn: Coub Copyright Agent. In&nbsp;addition, the notice must clearly identify the Contribution at&nbsp;issue, describe the specific use of&nbsp;the Contribution you wish to&nbsp;end, and contain statements that you own or&nbsp;have an&nbsp;exclusive right to&nbsp;the Contribution and that all the information in&nbsp;the notice is&nbsp;true in&nbsp;the same manner as&nbsp;required for the DMCA Copyright Notice in&nbsp;Secton 9&nbsp;below.","_6":"Except for all content created or&nbsp;generated by&nbsp;users as&nbsp;a&nbsp;Contribution, the content provided through the Coub Services or&nbsp;the Website, including without limitation, audio, video, text, visual arts, graphics, sound recordings, animation, music recordings, digital files containing content that can be&nbsp;displayed on&nbsp;the Coub Services, with or&nbsp;without accompanying sound or&nbsp;audio, which content may be&nbsp;fixed, recorded, stored or&nbsp;transmitted in&nbsp;any medium now existing or&nbsp;hereafter developed (&ldquo;Materials&rdquo;) and the trademarks, service marks and logos contained therein (&ldquo;Marks&rdquo;), are owned by&nbsp;or&nbsp;licensed to&nbsp;the Company, subject to&nbsp;copyright and other intellectual property rights under United States and foreign laws and international conventions. All software and mobile applications provided by&nbsp;the Company is&nbsp;protected by&nbsp;the copyright laws of&nbsp;the United States of&nbsp;America and international copyright treaties. Materials provided to&nbsp;you through the Coub Services and on&nbsp;the Website are provided to&nbsp;you AS&nbsp;IS&nbsp;for your information and personal use only and may not be&nbsp;used, copied, reproduced, distributed, transmitted, broadcast, displayed, sold, licensed, or&nbsp;otherwise exploited for any other purposes whatsoever without the prior written consent of&nbsp;the respective owners. The Company reserves all rights not expressly granted in&nbsp;and to&nbsp;the Materials and the Marks. You agree to&nbsp;not engage in&nbsp;the use, copying, or&nbsp;distribution of&nbsp;any of&nbsp;the Materials other than as&nbsp;expressly permitted by&nbsp;the Company, including any use, copying, or&nbsp;distribution of&nbsp;third parties&rsquo; materials obtained through the Coub Services for any commercial purposes. If&nbsp;you download or&nbsp;print a&nbsp;copy of&nbsp;the Materials for personal use, you must retain all copyright and other proprietary notices contained therein. You agree not to&nbsp;circumvent, disable or&nbsp;otherwise interfere with security related features of&nbsp;the Coub Services or&nbsp;features that prevent or&nbsp;restrict use or&nbsp;copying of&nbsp;any Materials or&nbsp;enforce limitations on&nbsp;use of&nbsp;the Coub Services or&nbsp;the Materials therein."},"passwords":{"descr":"When you create an&nbsp;account with the Company &ldquo;User Account&rdquo;), you will be&nbsp;asked to&nbsp;supply a&nbsp;password. You must keep your password confidential, and are responsible for all use of&nbsp;your password and User Account."},"preview":"IMPORTANT&nbsp;&mdash; READ CAREFULLY BEFORE USING THIS SOFTWARE: THESE TERMS OF&nbsp;SERVICE (&ldquo;Terms&rdquo;) AS&nbsp;SET FORTH IN&nbsp;THIS TERMS OF&nbsp;SERVICE AGREEMENT (&ldquo;Agreement&rdquo;), AS&nbsp;AMENDED FROM TIME TO&nbsp;TIME, ARE A&nbsp;BINDING CONTRACT BETWEEN YOU, WHETHER PERSONALLY OR&nbsp;ON&nbsp;BEHALF OF&nbsp;AN&nbsp;ENTITY (&ldquo;you&rdquo;) AND COUB LTD (the &ldquo;Company&rdquo;, or&nbsp;&ldquo;we&rdquo;). COUB LTD IS&nbsp;A&nbsp;COMPANY FORMED UNDER THE LAWS OF&nbsp;THE COUNTRY OF&nbsp;CYPRUS.AND THESE TERMS ARE GOVERNED BY&nbsp;THE LAWS OF&nbsp;THE STATE OF&nbsp;CALIFORNIA.","privacy":"THE COMPANY’S USE OF PERSONAL INFORMATION YOU PROVIDE TO THE COMPANY AND USAGE DATA IS GOVERNED BY THE COUB PRIVACY POLICY (“Privacy Policy”) AT&nbsp;<a href=\"http://coub.com/privacy\">http://coub.com/privacy</a>","prohibition":{"_1":"criminal or&nbsp;tortious activity, including child pornography, fraud, trafficking in&nbsp;obscene material, drug dealing, gambling, harassment, stalking, spamming, copyright infringement, patent infringement, trademark infringement, or&nbsp;theft of&nbsp;trade secrets;","_10":"using any information obtained from the Coub Services in&nbsp;order to&nbsp;harass, abuse, or&nbsp;harm another person;","_11":"displaying an&nbsp;advertisement, or&nbsp;accepting payment or&nbsp;anything of&nbsp;value from a&nbsp;third person in&nbsp;exchange for your performing any commercial activity on&nbsp;or&nbsp;through the Coub Services on&nbsp;behalf of&nbsp;that person, such as&nbsp;posting a&nbsp;Contribution with a&nbsp;commercial purpose; and using the Coub Services in&nbsp;a&nbsp;manner inconsistent with any and all applicable laws and regulations.","_12":"using the Coub Services in a manner inconsistent with any and all applicable laws and regulations.","_2":"advertising&nbsp;to, or&nbsp;solicitation&nbsp;of, any user to&nbsp;buy or&nbsp;sell any products or&nbsp;services;","_3":"transmitting chain letters or junk email to other users;","_4":"using any information obtained from the Coub Services in&nbsp;order to&nbsp;contact, advertise&nbsp;to, solicit, or&nbsp;sell to&nbsp;any user without their prior explicit consent;","_5":"engaging in&nbsp;any automated use of&nbsp;the systems operated by&nbsp;the Coub Services, such as&nbsp;using scripts to&nbsp;add friends or&nbsp;send comments or&nbsp;messages;","_6":"interfering with, disrupting, or&nbsp;creating an&nbsp;undue burden on&nbsp;the Coub Services or&nbsp;the networks or&nbsp;services connected to&nbsp;the Coub Services;","_7":"attempting to impersonate another user or person;","_8":"using the username of another user;","_9":"selling or otherwise transferring your profile;","descr":"You may not access or&nbsp;use the Coub Services for any other purpose other than that for which the Company makes them available. Certain activities, even if&nbsp;legal, may violate the common rules of&nbsp;etiquette governing Contributions, as&nbsp;determined by&nbsp;the Company in&nbsp;the Company&rsquo;s sole discretion. Prohibited activity includes, but is&nbsp;not limited&nbsp;to:"},"term":{"descr":"This Agreement shall remain in&nbsp;full force and effect while you use the Coub Services or&nbsp;have a&nbsp;User Account. You may terminate your use or&nbsp;participation at&nbsp;any time, for any reason. Pursuant to&nbsp;Section&nbsp;6.2&nbsp;above, The Company may terminate your use or&nbsp;participation at&nbsp;any time, without warning. Even after your use and participation is&nbsp;terminated, this Agreement will remain in&nbsp;effect, including sections 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15&nbsp;and&nbsp;16."},"termination":"You agree that we, in our sole discretion, may issue a warning, temporarily suspend, indefinitely suspend, remove content or information you have posted, or terminate your status as a Member or as a participant in an affinity group of Members, or your ability to use all or any portion of our Platform, for any reason, including, without limitation, (a) for lack of use, (b) if we believe that you have violated or acted inconsistently with the letter or spirit of this Agreement or the documents or agreements it incorporates by reference, (c) if we are unable to verify or authenticate any information you provide to us, or (d) if we believe that your actions may cause legal liability for you, our users or us. You agree that any termination of your account or access to all or any portion of the Platform under any provision of this Agreement may be effected without prior notice, and acknowledge and agree that we may immediately deactivate or delete your account and all related information and files in your account and/or bar any further access to such files or our Platform. You also agree that we shall not be liable to you or any third party for any termination of your use of or access to all or any portion of the Platform.","trademarks":{"one":"Coub.com's Trademarks. Coub.com and other trademarks, service marks, and other logos, products and service names as indicated by us, are trademarks of Coub Ltd (the 'Trademarks'). Except as otherwise permitted by law, you agree not to display or use in any manner the Trademarks without the prior written consent of Coub Ltd.","three":"Proprietary Rights. You acknowledge and agree that our Platform contains proprietary and confidential information that is protected by applicable intellectual property and other laws. You also acknowledge and agree that content contained in sponsor advertisements or information presented to you through our Platform or advertisers is protected by copyrights, trademarks, service marks, patents or other proprietary rights and laws. Except as consented to by Coub.com or advertisers in writing, you agree not to modify, rent, lease, loan, sell, distribute or create derivative works based on our Platform, in whole or in part.","two":"Copyrights and Trademarks of Others. Coub.com respects the intellectual property of others, and we ask our Users to do the same. To the extent that you use a trademark that is the property of a third party, you shall provide clear notice that (a) you do not own the trademark and that the trademark is the property of a third party, (b) you have no affiliation, connection or association with that third party, and (c) that third party has not approved or sponsored your use of the trademark in any way. We may, in appropriate circumstances and in our discretion, remove, or disable access to, material that infringes on the rights of others, and terminate access to our Platform to those who may be repeat infringers. If you believe that your work has been copied in a way that constitutes copyright infringement, or your intellectual property rights have been otherwise violated, please provide us the following information: 1.an electronic or physical signature of the person authorized to act on behalf of the owner of the copyright or other intellectual property interest; 2.a description of the copyrighted work or other intellectual property that you claim has been infringed; 3.a description of where the material that you claim is infringing is located on the site; 4.your address, telephone number, and email address; 5.a statement by you that you have a good faith belief that the disputed use is not authorized by the copyright owner, its agent, or the law; 6.a statement by you, made under penalty of perjury, that the above information in your Notice is accurate and that you are the copyright or intellectual property owner or authorized to act on the copyright or intellectual property owner's behalf."},"use_of_platform":{"four":"General Practices Regarding Use of Platform. You acknowledge and agree that we may establish general practices and limits concerning the use of our Platform. You agree that we have no responsibility or liability for the storage or the deletion of, or the failure to store or delete, any of Your Information. You acknowledge that we reserve the right to suspend Members who are inactive for an extended period of time. In addition, you acknowledge that we reserve the right to change these general practices and limits at any time, in our sole discretion, with or without notice.","one":"Responsibility and Control. You, and not Coub.com, are entirely responsible for all of Your Information that you upload, post, email, transmit or otherwise make available via our Platform. We do not control your Public Information or the Information of or posted by other Members and do not guarantee the accuracy, integrity or quality of Your Information or the Information of or posted by other Members. Nor do we endorse any opinions expressed by you or other users. You understand that by using our Platform, you may be exposed to information that is offensive, indecent or objectionable. We do not have any obligation to monitor, nor do we take responsibility for, Your Information, Public Information or information of or posted by other users. You agree that under no circumstances will Coub.com, its directors, officers, shareholders, employees, consultants, agents, advisers, affiliates, subsidiaries or its third-party partners be liable in any way for any information, including, but not limited to, for any errors or omissions in Your Information or the Public Information of or posted by other Members, or for any loss or damage of any kind incurred as a result of the use of Your Information or any Public Information of or by any other Member posted, emailed, transmitted or otherwise made available in connection with our Platform, or for any failure to correct or remove any such information.","three":{"a":"upload, post, email, or otherwise transmit any computer routines, files or programs designed to interrupt, destroy or limit the functionality of any computer software or hardware or telecommunications equipment;","b":"take any action that imposes an unreasonable or disproportionately large load on our infrastructure; or","c":"copy, reproduce, alter, modify, or publicly display any information displayed on our website (except for Your Information), or create derivative works from our website (other than from Your Information), to the extent that such action(s) would constitute copyright infringement or otherwise violate the intellectual property rights of Coub.com or any other third party, except with the prior written consent of Coub.com or the appropriate third party.","main":"Non-Interference with Platform. You agree that you will not:"},"two":{"a_four":"collect or store personal data about other users.","a_main":"The use of our Platform to:","a_one":"harm or intimidate another person in any way, including restricting or inhibiting any other user from using our Platform;","a_three":"'stalk' or otherwise harass another; or","a_two":"disguise the origin of any Public Information that is transmitted to any third party;","b_five":"that is unsolicited or unauthorized advertising, promotional materials, or any other form of solicitation (including, but not limited to, 'spam', 'junk mail', and 'chain letters'); or","b_four":"that infringes any patent, trademark, trade secret, copyright or other proprietary rights of any party or rights of publicity or privacy;","b_main":"Posting any Information or other material:","b_one":"that is unlawful, harmful, threatening, abusive, harassing, defamatory, intimidating, vulgar, obscene, profane, libelous, invasive of another's privacy (including the posting of private emails or contact information of another individual), hateful, or racially, ethically or otherwise objectionable, including any Information or other material that may be considered hate speech;","b_six":"that is otherwise inappropriate or posted in bad faith;","b_three":"that you do not have a right to make available under any law or under contractual or fiduciary relationships;","b_two":"that is obscene, pornographic or adult in nature;","c_main":"Encouraging others to violate this Agreement;","d_main":"Refusing to follow Coub.com staff instruction or direction; or","e_main":"Violation (intentional or unintentional) of this Agreement, or of any applicable local, state, national or international law, statute, ordinance or regulation.","end_par_one":"While we prohibit the above conduct and content, you understand and agree that you nonetheless may be exposed to such conduct or content and that you use the Platform at your own risk.","end_par_two":"For purposes of this Agreement, 'posting' includes uploading, posting, emailing, transmitting or otherwise making available. Without limiting the foregoing, Coub.com and its designees shall have the right to remove any Information or other material that violates this Agreement or is otherwise objectionable.","main":"Grounds for Suspension and/or Termination. Notwithstanding any other provision of this Agreement, the following types of actions are cause for immediate suspension and/or termination of your status as an active Member of the Coub.com:"}},"users_and_members":{"_1":"the creation, distribution, transmission, public display and performance, accessing, downloading and copying of&nbsp;your Contribution does not and will not infringe the proprietary rights, including but not limited to&nbsp;the copyright, patent, trademark or&nbsp;trade secret rights of&nbsp;any third party;","_10":"your Contribution does not inundate the Coub Services with communications or&nbsp;other traffic suggesting no&nbsp;serious intent to&nbsp;use the Coub Services for its stated purpose;","_11":"your Contribution does not otherwise violate, or&nbsp;link to&nbsp;material that violates, any provision of&nbsp;this Agreement or&nbsp;any applicable law or&nbsp;regulation; and","_12":"your Contribution does not contain pictures, data, audio or&nbsp;visual files, or&nbsp;any other content that is&nbsp;excessive in&nbsp;size, as&nbsp;determined by&nbsp;Company in&nbsp;its sole discretion.","_2":"you have fully complied with any third-party licenses relating to&nbsp;your Contribution, and have done all things necessary to&nbsp;successfully pass through to&nbsp;viewers any required terms;","_3":"your Contribution does not contain any viruses, worms, Trojan horses, malicious code or&nbsp;other harmful or&nbsp;destructive content;","_4":"your Contribution is&nbsp;not obscene, lewd, lascivious, filthy, excessively violent, harassing or&nbsp;otherwise objectionable, libelous or&nbsp;slanderous, does not advocate the violent overthrow of&nbsp;the government of&nbsp;the United States, does not incite, encourage or&nbsp;threaten immediate physical harm against another, does not violate any applicable law, regulation, or&nbsp;rule, and does not violate the privacy or&nbsp;publicity rights of&nbsp;any third party;","_5":"your Contribution does not contain material that solicits personal information from anyone under 18&nbsp;or exploit people under the age of&nbsp;18&nbsp;in&nbsp;a&nbsp;sexual or&nbsp;violent manner, and does not violate any federal or&nbsp;state law concerning child pornography or&nbsp;otherwise intended to&nbsp;protect the health or&nbsp;wellbeing of&nbsp;minors;","_6":"if&nbsp;your employer has rights to&nbsp;intellectual property you create, you have either (a) received permission from your employer to&nbsp;make available the Contribution, or&nbsp;(b) secured from your employer a&nbsp;waiver as&nbsp;to&nbsp;all rights in&nbsp;or&nbsp;to&nbsp;your Contribution;","_7":"your Contribution does not violate any state or&nbsp;federal law designed to&nbsp;regulate electronic advertising;","_8":"your Contribution does not amount to&nbsp;trolling, or&nbsp;the making of&nbsp;controversial statements for the sole purpose of&nbsp;generating responses by&nbsp;others;","_9":"your Contribution does not constitute, contain, install or&nbsp;attempt to&nbsp;install or&nbsp;promote spyware, malware or&nbsp;other computer code, whether on&nbsp;the Company&rsquo;s or&nbsp;others computers or&nbsp;equipment, designed to&nbsp;enable you or&nbsp;others to&nbsp;gather information about or&nbsp;monitor the online or&nbsp;other activities of&nbsp;another party;","descr":"You are entirely responsible for the content&nbsp;of, and any harm resulting from your postings to&nbsp;the interactive portions of&nbsp;the Website of&nbsp;copyrighted user generated content, consisting generally of&nbsp;one or&nbsp;more video loops with or&nbsp;without audio, containing pictures, data, graphics files, referred to&nbsp;on&nbsp;the Website as&nbsp;a&nbsp;&ldquo;COUB&rdquo;, or&nbsp;any other content contributions you create, post or&nbsp;communicate to&nbsp;other users via the Coub Services (each a&nbsp;&ldquo;Contribution&rdquo;, and collectively, &ldquo;Contributions&rdquo;). When you create or&nbsp;make available a&nbsp;Contribution, you thereby represent and warrant that:","one":"Users. Use of the public areas of Coub.com is available to any individual without registration. In order to interact with Coub.com, including posting a comment, a user must register to become a Member of the Coub.com. The term “User” shall refer to any User who has not registered in coub.com.","three":"Password and Security. When you complete our registration process you will create a password that will enable you to access our Platform. You agree to maintain the confidentiality of your password, and are fully responsible for all liability and damages resulting from your failure to maintain that confidentiality and all activities that occur through the use of your password. You agree to immediately notify us of any unauthorized use of your password or any other breach of security. You agree that Coub.com cannot and will not be liable for any loss or damage arising from your failure to comply with this Section 1.3.","two":"Members. Membership in Coub.com is available to any individual residing anywhere in the world. The term “Member” shall refer to any User who has registered in coub.com. We have the right, in our sole discretion, to suspend or terminate your use of our Platform and refuse any and all current or future use of all or any portion of our Platform."},"warranties":{"one":"Disclaimer of Warranties. Your use of our Platform is at your sole risk. Our Platform is provided to you 'as is' and on an 'as available' basis. We specifically disclaim all warranties and conditions of any kind, whether express, implied or statutory, including but not limited to the implied warranties of merchantability, fitness for a particular purpose and non-infringement. We disclaim any warranties regarding the security, reliability, timeliness, and performance of our Platform. We disclaim any warranties for any information or advice obtained through our Platform. We disclaim any warranties for services or goods received through or advertised on our Platform or received through any links provided by our Platform, as well as for any information or advice received through any links provided through our Platform.","two":"Assumption of Risk. You understand and agree that you download or otherwise obtain material or data through the use of our Platform at your own discretion and risk and that you will be solely responsible for any damages to your computer system or loss of data that results from the download of such material or data."},"welcome":"The Coub Services allow users to&nbsp;access the Website and use certain mobile and online applications to&nbsp;create short media productions to&nbsp;share with other users and/or post them to&nbsp;the Website. The Coub Services are currently free of&nbsp;charge, but the Company reserves a&nbsp;right to&nbsp;charge fees for the Company Services upon notice to&nbsp;you. The Coub Services are hosted in&nbsp;the United States. Use of&nbsp;the Website and/or Coub Services is&nbsp;also subject to&nbsp;the Company&rsquo;s Privacy Policy available at&nbsp;<a href='http://coub.com/privacy'>http://coub.com/privacy</a>, which explains how the Company collects and uses your information. You may opt out of&nbsp;future emails about our Website or&nbsp;the Coub Services by&nbsp;following instructions in&nbsp;our Privacy Policy, on&nbsp;our Website, or&nbsp;contained in&nbsp;an&nbsp;email that you receive from&nbsp;us. We&nbsp;reserve the right, however, to&nbsp;email you important information relating to&nbsp;your account in&nbsp;accordance with Section 11&nbsp;below, including copyright or&nbsp;regulatory communications.","your_information":{"four":"Consent to Disclosure. You acknowledge and agree that Coub.com may disclose Your Information if required to do so by law or in the good faith belief that such disclosure is reasonably necessary to:(a) comply with a current judicial proceeding, a court order or legal process served on us or our website, (b) enforce the Terms of Service Agreement, (c) respond to claims that Your Information violates the rights of third parties; or (d) protect the rights, property or personal safety of Coub.com, its employees, users and the public.","one":{"main":"Definitions.","one":"'Your Information' is defined as any information post or other material you provide (directly or indirectly), including through the registration process or through your use of our Platform, in any public message board (including the personal introduction section), blog postings, comments, messages sent within Coub.com (“inmail”) or email. You are solely responsible for Your Information, and we act as a passive conduit for the online distribution and publication of your Public Information (as defined below).","three":"'Publicly accessible' areas of our website are those areas that are available either to some or all of our Members (i.e., not restricted to your viewing only) or to the general public.","two":"Your name, company affiliation and location, as well as any of Your Information that, through the use of our Platform or otherwise, you submit or make available for inclusion on publicly accessible areas of our website is referred to as 'Public Information'; any other portion of Your Information shall be referred to as 'Private Information'."},"three":"Restriction on Our Use of Your Information. Except as otherwise provided in our privacy policy, we will not sell, rent or otherwise disclose any of your Personally Identifiable Information about you (including your email address) to any third party.","two":"Restrictions. In consideration of your use of our Platform, you agree that Your Information:(a) shall not be fraudulent; (b) shall not infringe any third party's copyright, patent, trademark, trade secret or other proprietary rights or rights of publicity or privacy; (c) shall not violate any law, statute, ordinance or regulation; (d) shall not be defamatory, trade libelous, unlawfully threatening or unlawfully harassing; (e) shall not be obscene or contain, pornography, child pornography, or photographs of unclothed person(s); (f) shall not contain any viruses or other computer programming routines that may damage, detrimentally interfere with, surreptitiously intercept or expropriate any system, data or personal information; (g) shall not create liability for us or cause us to lose (in whole or in part) the services of our suppliers; (h) shall not link directly or indirectly to any materials to which you do not have a right to link to or include. In addition, you shall provide us with your valid, current email address, both at the time of your registration with us and from time to time as your email address changes. You agree further that your membership profile,  message board postings, uploaded pictures, or any other portions of the website reserved solely for Member use may not be used by you for commercial activity, sales of goods or services, or promotion of a company, good, or service unrelated to the topic or spirit of Coub.com. You shall be solely responsible for the disclosure of any information you enter into publicly accessible areas of the Platform, whether or not it was your intention to do so."}},"usage":{"header":"We consider coubs to be the next evolution of media with infinite potential. Here is some inspiration to help you try Coub out!","title":"A powerful tool for professionals"}},"promoted_coubs":{"all_countries":"All Countries","buttons":{"back":"Back","edit":"Edit","new":"New Campaign","next":"Next","pay":"Pay","promote":"Promote coub","replace_coub":"Replace Coub"},"clink_link_text":"Learn more on <u>%{hostname}</u>","contacts":"Please contact us directly if you have any questions: <a href='mailto:sales@cmtt.ru'>sales@cmtt.ru</a>","coub_by":"Promoted · %{name}","deleted_coub":"Coub has been deleted","deleted_coub_replace":"Coub has been deleted, please pick another one","details":{"android":"Android: ","ios":"iOS: ","location":"Location: ","pause":"Pause Campaign","platforms":"Platforms: ","start":"Start Campaign","start_date":"Start Date: ","status":"Status: ","title":"Campaign details","views":"Views: ","web":"Web: "},"form":{"android_link":"Android link","coub_tip":"Paste a coub link","edit":"Edit Promoted Coub","enter_name":"Enter Your Name","first_name":"First name","ios_link":"iOS link","last_name":"Last name","locations":"Targeting Locations","pay_and_launch":"Pay and Launch","platforms":"Targeting platforms","promote":"Promote a coub","select_coub":"Select a Coub to Promote","starts":"Starts","starts_tip":"no later than 3 months from now","total_budget":"Total Budget","update":"Update","views":"How Many Views You Want to Get","views_tip":"Minimum 1000 views","web_link":"Web link"},"info":"Campaign Info","platforms":{"all":"Website, iOs, Android","android":"Android","ios":"iOS","web":"Website"},"promoted":"Promoted","statuses":{"approved":"Approved","created":"Created","finished":"Finished","paid":"Paid","paused":"Paused","rejected":"Rejected","waiting_for_review":"Waiting for Review"},"stub":{"button":"Promote a coub","title":"Give your coub a boost!"},"title":"Promoted Coubs","values":{"average_cpv":"Average CPV","budget":"Budget","cpc":"Cost Per Click (CPC)","cpe":"Cost Per Engagement","cpv":"Cost Per View (CPV)","engagement":"Engagement","paid_views":"Paid Views","promoted_coubs":"Promoted Coubs","spend":"Spent","total_clicks":"Total Clicks","total_engagements":"Total Engagements","total_views":"Total Views"}},"push_notifications":{"cotd":{"mine":"You Rock! 🤘 Your coub “%{coub_title}” is Coub Of The Day."},"coub_pics_recoub":{"mine":"Coub Picks reposted your coub"},"famous_follow":{"mine":"%{sender} is now following you!"},"finished_processing":{"mine":"💥 Your coub “%{coub_title}” is ready. Share it!"},"follow":{"mine":"%{sender} is now following you!"},"follow_back":{"mine":"%{sender} has followed you back"},"friend_cotd":{"mine":"%{sender} got Coub Of The Day!"},"hot":{"mine":"🔥 Your coub “%{coub_title}” is in the Hot feed"},"like":{"mine":"🤘 %{sender} likes your coub “%{coub_title}”"},"like_recoub":{"mine":"🤘 %{sender} likes your 🔁 repost “%{coub_title}”"},"new_category":{"mine":"🌟 Your coub “%{coub_title}” has been featured"},"recoub":{"mine":"🔁 %{sender} has reposted your coub “%{coub_title}”"},"sn_friend_cotd":{"mine":"%{sender} got Coub Of The Day!"},"sn_friend_coub":{"mine":"%{sender} created new coub \"%{coub_title}\"!"},"sn_friend_follow":{"mine":"Your friend %{name} from %{from} is now following you!"},"sn_friend_registered":{"mine":"Your friend %{name} from %{from} is now on Coub!"},"weekly_digest":{"mine":"Watch all the week's best coubs!"}},"raw_video":{"errors":{"video_processing_failed":"Video processing failed, please try again later"}},"recommendation":{"channel_url":"Channel URL"},"registration_email_page":{"title":"One more detail to go!"},"rss":{"description":"Coub RSS Feed","titles":{"channel":"%{channel}’s coubs","explore":"%{title} coubs","timeline":"Your Coub Timeline"}},"search":{"page":{"channels":{"all":"See all ","description":"Channels"}}},"search_page":{"nothing_found":"Oops, no coubs found.","nothing_found_coubs":"Oops, no coubs found.","nothing_found_descr":"Check the spelling and try your search again.","nothing_found_names":"Oops, nothing found.","nothing_found_none":"Oops, nothing found."},"search_placeholder":"Search Coub","search_popup":{"recent_search":{"clear_all":"Clear all","title":"Recent Search"},"search_results":{"title":"See more results for ","view_coub_title":"View "}},"sessions":{"form":{"forgot_password":"Forgot password?","sign_up":"Sign up"},"new":{"title":"Sign in"}},"sharing":{"post_to_twitter":"Post to Twitter","post_to_vkontakte":"Post to Vkontakte","share":"Share","share_fb_short":"Share","share_story_subject":"Hey, check out this coub story!","share_subject":"Hey, check out this coub!","share_tweeter_short":"Tweet","share_vk_short":"VK","text_too_long_error":"Text length can't be more than 280 characters"},"signin":{"failed_to_find_authentication":"Sorry, we don't have such account"},"sing_up_panel":{"new_text_button":"Sign up","old_text_button":"Join Coub"},"site_notifications":{"kinds":{"sn_friend_follow":"Your %{sn} friend %{nickname} is now following you as %{channel}","sn_friend_follow_equal_name":"Your %{sn} friend %{nickname} is now following you","sn_friend_registered":"Your %{sn} friend %{nickname} just joined Coub as %{channel}","sn_friend_registered_equal_name":"Your %{sn} friend %{nickname} just joined Coub"}},"smart_datetime":{"ago":"ago","daynames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"days":"on %{dayname}","hours":{"one":"%{count} hour","other":"%{count} hours"},"minutes":{"one":"%{count} minute","other":"%{count} minutes"},"months":{"one":"%{count} month","other":"%{count} months"},"seconds":{"one":"%{count} second","other":"%{count} seconds"},"weeks":{"one":"%{count} week","other":"%{count} weeks"},"years":{"one":"%{count} year","other":"%{count} years"},"yesterday":"yesterday"},"smart_datetime_new":{"current_year":"%{month} %{day}","days":"%{days}d","hours":"%{hours}h","minutes":"%{minutes}m","month_full_names":["January","February","March","April","May","June","July","August","September","October","November","December"],"month_names":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"seconds":"%{seconds}s","year_ago":"%{month} %{day}, %{year}"},"social_names":{"facebook":"Facebook","gmail":"Gmail","google":"Gmail","google_plus":"Google Plus","kanobu":"Kanobu","link":"Link","linkedin":"LinkedIn","mail":"Mail","messenger":"Messenger","odnoklassniki":"Odnoklassniki","pinterest":"Pinterest","reddit":"Reddit","stumbleupon":"Stumbleupon","surfingbird":"Surfingbird","tumblr":"Tumblr","twitter":"Twitter","vkontakte":"Vkontakte","watsapp":"WhatsApp"},"stats":{"pane":"Stats pane","suggestions":"Suggestions"},"stories":{"add_new":"Create Story","by":"by","coubs_count":{"one":"coub","other":"coubs"},"dates":{"before_yesterday":"DAY BEFORE YESTERDAY","earlier":"EARLIER","yesterday":"YESTERDAY"},"delete":"Delete","edit":"Edit","featured":"Featured Stories","form":{"bottom_text":"Bottom text (optional)","coub_num":"COUB #<span>%{num}</span>","coub_url":"Coub URL","delete":"Delete","description":"Description (optional)","headline":"Headline (optional)","publish":"Publish","save_as_draft":"Save as Draft","suggest":"Suggest to feature","suggest_hint":"Editors can edit your story while featuring. They can change title, text or coubs. Also you can’t edit featured story.","tags":"Tags","thumbnail":"Use as a Thumbnail","title":"Title"},"more_stories":"More stories","next_set":"Next set of stories in","sort_types":{"anime":"Anime","best_of_the_month":"Best of the Month","cartoons":"Cartoons","channel_of_the_week":"Channel of the Week","coub_memes":"Coub Memes","coub_types":"Coub Types","games":"Games","mashup_of_the_week":"Mashup of the Week","recent":"Recent","top":"Top","trend_of_the_week":"Trend of the Week"},"title":{"edit":"Edit Story %{title} - Coub","new":"New Story - Coub"},"types":{"draft":"DRAFT","new":"NEW STORY","story":"STORY"}},"support":{"array":{"last_word_connector":", and ","two_words_connector":" and ","words_connector":", "}},"tags":{"page":{"channels_title":"User search results for ","not_found":"Oops, no coubs found. Check the spelling and try your search again.","tag_list":{"title":"Related tags"},"title":" on Coub","title_not_found":"Nothing found"}},"themes":{"dark":"Dark Theme","turn_off":"Turn Off","turn_on":"Turn On"},"time":{"am":"am","formats":{"default":"%a, %d %b %Y %H:%M:%S %z","long":"%B %d, %Y","short":"%d %b %H:%M","video_meta":"%d/%m/%Y %H:%M"},"pm":"pm"},"titles":{"channels_featured":"Featured Channels","coub_page":"%{coub}","create":"Coub: The Ultimate Loop Machine","edit":"Edit","edit_profile":"Edit Profile on Coub","errors":{"access_denied":"Coub. Access Denied","deploying":"We are working on new features","error_occured":"Coub. Error Occurred","not_found":"Coub. Page not found"},"explore":"Explore Coub","favourites":"Bookmarks","find_friends":"Find friends on Coub","fresh":"Fresh Coubs - The Biggest Video Meme Platform","fresh_category":"Fresh %{category} Coubs - The Biggest Video Meme Platform","hot":"Hot Coubs - The Biggest Video Meme Platform","hot_category":"Hot %{category} Coubs - The Biggest Video Meme Platform","likes":"Likes","new-hot":"Hot Coubs - The Biggest Video Meme Platform","new-rising":"Rising Coubs - The Biggest Video Meme Platform","new_coub":"New Coub","newest":"Fresh Coubs - The Biggest Video Meme Platform","newest_category":"Fresh %{category} Coubs - The Biggest Video Meme Platform","profile":{"adreport":"Ad campaign report","channel":"%{channel} - Coub","other":"%{user}’s coubs","you":"My coubs"},"promo":{"android":"Coub Android app","api_terms":"Coub API License Agreement","app":"Coub iOS app","apps":"Coub mobile apps","blog":"Coub’s blog","copyright":"Copyright Policy","faq":"FAQ","ios":"Coub iOS app","new_editor":"Create a coub","privacy":"Privacy Policy","tos":"Coub terms of service agreement"},"random":"Random Coubs - The Biggest Video Meme Platform","random_category":"Random %{category} Coubs - The Biggest Video Meme Platform","rising":"Rising Coubs - The Biggest Video Meme Platform","rising_category":"Rising %{category} Coubs - The Biggest Video Meme Platform","search":"Searched for \"%{query}\" on Coub","startpage":"My timeline","startpage_unlogged":"Coub: In Loops We Trust","timeline":"Timeline","top_category":"Top %{category} Coubs - The Biggest Video Meme Platform","views_category":"Popular %{category} Coubs - The Biggest Video Meme Platform"},"tooltips":{"dislike_button":{"dislike":"Dislike","undislike":"Undislike"},"like_button":{"like":"Like","unlike":"Unlike"},"recoub_button":{"recoub":"Repost","undo_recoub":"Undo repost"},"remix_button":{"dropdown_title":"RECOUBS","remix":"Recoub"}},"trends":{"cant_unsubscribe":"You can't unsubscribe from all communities","communities":"Communities","community":"Community","members_count":{"one":"%{number} member","other":"%{number} members"},"prompts":{"subscribe":"Subscribe","unsubscribe":"Unsubscribe"}},"unknown_error":"Unknown error","unlogged_index":{"make_loops_text_2":"Make <a id='video_loops_link'>video loops</a> from YouTube, GIF, Vine, your phone, whatever. <a id='mash_them_up_link' href='/create'>Mash them up</a>, add a cool soundtrack. You're the boss here   <span class='emoji-sunglasses'></span>&nbsp;<span class='emoji-ok'></span>","make_loops_text_2_mobile":"Make video loops from YouTube, GIF, Vine, your phone, whatever. Mash them up, add a cool soundtrack. You're the boss here   <span class='emoji-sunglasses'></span>&nbsp;<span class='emoji-ok'></span>","registration_header":"Sign up and follow the best creators.","scroll_down_text_1":"Now scroll down and <a id='take_a_look_link'>take a look</a>, damn it <span class='emoji-steam'></span>","scroll_down_text_1_mobile":"Now scroll down and take a look, damn it <span class='emoji-steam'></span>","watch_more":"Watch more"},"unlogged_page":{"text":"This page available only to registered users"},"user":{"coubs_count":{"one":"%{count} coub","other":"%{count} coubs"},"device_token":{"do_not_exists":"User has no given token","duplicate":"Another user already has given token"},"errors":{"channel_switch_error":"Invalid credentials. You can't reattach channels from your current account"},"unsubscribe":{"fail":{"header":"Unsubscribe issue","sub":"We could not find your email address. Please check the link and try again, or <a href=\"mailto:support@coub.com\" class=\"hthin\">contact us</a> if you encounter any more errors."},"success":{"header":"Successfully unsubscribed","sub":"Your email <a href=\"mailto:%{email}\" class=\"hthin\">%{email}</a> has been removed, and you will no longer receive any more mailings from us."}}},"users":{"new":{"sign_in":"Sign in","title":"Sign up"}},"verify_email":{"heading":"Please check your inbox <span class=\"userEmail\">%{email}&nbsp;</span>(<a href=\"%{edit_email}\" ,=\"\" class=\"changeEmail\">change</a>) to verify your email address.","heading_version":"Check your inbox <strong>%{email}</strong> (<a href='%{edit_email}'>change</a>) and verify your email.","resend":"Resend a verification email"},"video_popup":{"novideo":"Sorry, this video is not available.","sub":"Try to check the original video at&nbsp;"},"view_all":"View all","views":{"pagination":{"first":"&laquo; First","last":"Last &raquo;","next":"Next &rsaquo;","previous":"&lsaquo; Prev","truncate":"..."}},"vine_import":{"connect":{"connect_twitter_to_proceed":"Connect Vine","has_account_and_twitter_markdown":"You’ve logged in as *%{channel}* and already have Twitter account *%{twitter}* connected.\n\nYou can automatically link your Vine account if it is linked with your Twitter.\n","has_account_no_twitter_markdown":"You’ve logged in as *%{channel}*. Connect your Twitter account to import Vine to your channel.\n\nYour Vine account should be connected to Twitter to make it work.\n","header":"Connect your Vine account via Twitter","import_vines":"Import Vines"},"description":"Coub will help you to save everything you created over at Vine. Not just your vines, but also your followers, likes and revines.","errors":{"linked_to_other_channel":"Vine account already linked to other channel on Coub. Please contact support at support@coub.com.","no_twitter_auth":"Current channel isn’t linked with Twitter.","vine_account_not_found":"We couldn’t find a vine account linked with Twitter."},"intro":{"text_markdown":"Let’s Save the Vine Community!\n=============================\n\nCoub will help you to save everything you created over at&nbsp;Vine. Not just your vines, but also your followers, likes and revines.\n\n* Move your Vines\n* Your Followers\n* Your Likes\n* Your Revines\n\nThis means we can help you save your entire audience, not just the content. Also, all your vines will be posted with the date that they were originally posted on Vine.\n\n> The more Vine users join, the more followers and likes you get back.\n>\n> And more of the original community will be saved. [Read more...](https://medium.com/insider-coub/coub-to-save-the-vine-community-6c61c6e79194)\n","welcome":"Let’s Go!"},"sharing":{"text":"Save the Vine community with Coub"},"signup_title":"Sign up to Coub first","start":"Start","success":{"get_app":"Get App","header":"Awesome! Your vines are on their way to Coub!","open_app":"Open App","text_markdown":"It’ll take a little while to move all your vines. They will appear on your channel shortly. Your likes and followers will come next. Now you’re free to download the app and keep making those loops.\n\nShare it with your friends\n========================\n"},"title":"Save the Vine community with Coub"},"weekly":{"coubs":{"title":"Best Coubs <br/><b>Weekly</b>"},"navigation":{"next_week":"Next Week","prev_week":"Previous Week"},"share":{"title":"Share with friends"}},"who_to_follow":{"kinds":{"followed":"Followed by %{channels}","friends":"This channel is run by %{friend}","liked":"You liked %{count} from this channel"}}},"ru":{"about_page":{"description":"Good old remix culture put to next level."},"admin":{"audio_copyright_claims":{"claim_info":"Информация о клэйме","list":"Список клэймов"},"audio_tracks":{"labels_list":"Список лэйблов","list":"Список аудиотреков"},"editor_logs":{"recoubs_added":"Editor recoubs added","recoubs_removed":"Editor recoubs removed"},"pane":"Admin Control Pane","set_external_video_source":"Установить внешний источник видео","source":"Источник: "},"announces":{"add_heading":"Добавить новое видео","author_heading":"Добавить видео вашей компании","buttons":{"add":"Добавить","cancel":"Отмена","delete":"Удалить","remove":"Удалить видео","video":"Видео"},"errors":{"heading":"Ошибка","sub":"Видео должно быть короче 20 минут"},"make_coub_heading":"Сделать коуб из видео %{author}","placeholder":"url","sub":"Вставьте ссылку из YouTube или Vimeo","uploading":"Загружается"},"app":{"body":"Explore and become a part of the creative Coub community: find, like and share the best coubs, and add your own to the mix. Funny, arty, fashionable or profound, coubs come in all shapes and sizes. Share your unique perspective with 50 million monthly viewers, and get inspired.","heading":"Создавайте и</br>смотрите</br>на ходу"},"audio_upload":{"errors":{"no_audio_track":"Отсутствует аудио трек у этого коуба"}},"auth_api":{"oauth_data_fetcher":{"provider_api_error":"Failed to fetch data from provider with given credentials","temporary_provider_issue":"Failed to get registration data due to some provider issues. Пожалуйста, повторите попытку позже!"}},"auth_popup":{"buttons":{"back":"Назад","change":"Сменить","done":"Готово","sign_in":"Войти","view_less":"Скрыть","view_less_1":"Скрыть","view_more":"Показать больше","view_more_1":"Показать больше"},"channels_registration":{"whotofollow-description":"Подпишитесь на каналы чтобы следить за новыми коубами.","whotofollow-no-channels":"Каналов не нашлось","whotofollow-step-3":"Подпишитесь на 3 канала","whotofollow-title":"Выстройте ваши подписки","whotofollow_step_0":"Подпишитесь на 3 канала","whotofollow_step_1":"Подпишитесь на 3 канала","whotofollow_step_2":"Еще 2 канала","whotofollow_step_other":"Ура!"},"oauth_errors":{"email":{"already_registered_text":"Уже есть аккаунт с этим е-мейлом. ","email_pass":"Неверный е-мейл или пароль","incorrect":"Неверный е-мейл","not_registered_text":"Нет аккаунта с этим е-мейлом. "},"no_data":{"no_token":"Insufficient data: token can't be blank","no_uid":"Insufficient data: Uid can't be blank"},"password":{"simple":"Пароль слишком простой"}},"sign_in":"Войти","sign_up":"Зарегистрироваться","signin":{"login_with_facebook":"Войти через Facebook","login_with_google":"Войти через Google","login_with_phone":"По номеру телефона","login_with_twitter":"Войти через Twitter","login_with_vkontakte":"Войти через VKontakte","popup":{"login":"Войти","unknown_error":"Неизвестная ошибка"},"reset":{"forgot_password":"Забыли пароль?","no_email_error":"К вашему аккаунту не привязан email","password_recovery":"Новый пароль","reset_password":"Сбросить пароль","reset_password_button":"Сбросить","sent_instructions":"<p>Пожалуйста, проверьте свой почтовый ящик <strong></strong></p>"},"verify":{"check":"Пожалуйста, проверьте свой почтовый ящик","success":"Е-мейл отправлен"}},"signup":{"birthcontrol":{"sex":{"female":"Женский","male":"Мужской","unspecified":"Другой"}},"with_phone":"По номеру"}},"banners":{"announcement":{"promoted":"Реклама"},"follow_banner":{"channel_coubs":"%{count} подписчиков","channel_coubs_multi":"%{count} подписчиков","channel_coubs_one":" подписчик","count_followers":"%{count} подписчиков"},"weekly":{"heading":"Лучшие коубы недели"}},"categories":{"titles":{"all":"Все","animals-pets":"Животные","anime":"Аниме","art":"Арт и дизайн","cars":"Авто","cartoons":"Мультфильмы","categories":"Категории","celebrity":"Знаменитости","dance":"Танцы","fashion":"Мода","gaming":"Игры","mashup":"Мэшапы","movies":"Фильмы и ТВ","music":"Музыка","nature-travel":"Природа и путешествия","news":"Новости и политика","nsfw":"18+","science-technology":"Наука и техника","sports":"Спорт"}},"channel":{"coubs_count":{"few":"%{count} коуба","many":"%{count} коубов","one":"%{count} коуб"},"errors":{"not_allowed_to_post":"Вы не можете %{action} от этого канала","not_found":"Канал не найден","provider_not_found":"Given channel has no such provider","unspecified_channel":"Не удалось найти канал","wrong_avatar_format":"Формат не поддерживается"},"no_coubs":"Еще нет коубов","recoubs_count":{"few":"%{count} репоста","many":"%{count} репостов","one":"%{count} репост"}},"channel_recommendation":{"recommend":"Порекомендуйте канал вашим друзьям","recommendation_limit_reached":"Канал достиг лимита рекомендаций","run_by_me":"Мой канал (спрячьте этот значок в настройках)","run_by_someone":"Этот канал ведет %{name}","with_channels_title":"%{title} рекомендует"},"channel_recommendations":{"add_btn":"+","create":{"cant_recommend_to_same_channel":"Извините, канал не может рекомендовать сам себя","channel_already_recommended":"Этот канал уже добавлен","channel_not_found":"Канал не найден"}},"channels":{"add_new":"Создать канал","attached_channel_popup":{"button":"Хорошо","sub":"Ваш канал <strong>${title}</strong> был добавлен к вашему аккаунту.","title":"Урааа!"},"create_new":"Новый канал","create_popup":{"cancel_button":"Отменить","create_button":"Создать","link_button":"Присоединить канал","permalink_placeholder":"URL coub.com/","title_placeholder":"Название"},"featured":"Избранные каналы","link_popup":{"button":"Привязать аккаунт","cancel":"Отменить","sub":"Если у вас есть другой аккаунт на Coub вы можете привязать его к этому и вам больше не надо будет перелогиниваться каждый раз.","title":"Link account"},"more_channels":"Следите за обновлениями","oauth_api_errors":{"channel_deletion":"Вы не можете удалить этот канал"},"view_more":"Смотреть еще"},"chat":{"header_prompt":"Чат","message_button":"Сообщение"},"community_description":{"about":"О сообществе","cancel":"Отмена","description":"Описание","edit":"Редактировать","edit_rule":"Редактировать правило","markdown_hint":"Вы можете использовать **<strong>Жирный текст</strong>**<br>и [<em>Ссылки</em>](https://example.com)","move_down":"Переместить ниже","move_up":"Переместить выше","new_rule":"Новое правило","rule_info":"Эти правила должны соблюдать все, кто участвует в данном сообществе. Нарушение правил может быть поводом к удалению коубов из сообщества или бану пользователя. Максимум 15 правил.","rules":"Правила","save":"Сохранить","settings":"Настройки","title":"Заголовок"},"coub":{"abuse":{"header":"Пожаловаться на коуб","popup":{"close_popup":"Отменить","submit":"Отправить"},"reasons":{"adult_content":"Для взрослых","offensive":"Оскорбительный","other":"Другое","sex":"Порно","spam":"Спам","violence":"Насилие"},"sub":"Пожалуйста, выберите причину жалобы, чтобы мы могли рассмотреть ее.","title":"Пожаловаться"},"auto_post":{"message":"%{title} @coub %{url}","message_with_author":"%{title} @%{author} @coub %{url}"},"buttons":{"download":"Скачать","edit":{"add_category":"Добавить в сообщество","add_sharing_picture":"Добавить картинку для шаринга","change_category":"Поменять сообщество","copy":"Скопировать коуб","copy_link":"Ссылка","delete":"Удалить","download_audio":"Скачать аудио","download_video":"Скачать видео","heading":"Редактировать","in_progress_sharing_picture":"В процессе...","info":"Инфо","open_in_editor":"Открыть в редакторе","remove_sharing_picture":"Очистить картинку для шаринга"},"embed":"Эмбед"},"by":"%{name}","by_small_card":"%{name}","cotd":"Коуб дня","dash":"&mdash;","dot":"・","embed_dropdown":{"autostart":{"header":"Автоплей"},"get_coub_link":"Ссылка на коуб","get_embed_code":"Код для вставки","mute":{"header":"Стартовать без звука"},"size":{"custom_size":{"header":"Произвольный размер","height":"Высота","width":"Ширина"},"given_size":{"original_size":"Исходный размер "},"header":"Размер"},"startwithhd":{"header":"Запускать в HD"}},"explore":{"best":"Лучшее за год","channels":"Каналы","coub_of_the_day":"Коуб дня","coub_picks":"Выбор редакции","coubs":"Коубы","fresh":"Свежее","home":"Домой","hot":"Горячее","newest":"Свежее","period":{"daily":"День","halfofyear":"Полгода","monthly":"Месяц","quarterly":"Квартал","weekly":"Неделя"},"popular":"Популярное","random":"Случайные","recent":"Недавнее","rising":"В тренде","show_less":"Показать меньше","show_more":"Показать еще...","stories":"Истории","title_for_header":"Интересное","top":"Топ","top_of_the_month":"Топ месяца","undervalued":"Недооценённое","views":"По просмотрам","views_count":"По просмотрам","weekly":"Коубы недели","weekly_menu":"Лучшие коубы недели"},"external_download":{"link":" из <a target='_blank' class='description__stamp__source' href='%{url}'>%{type}</a>","providers":{"android":"Android","iphone":"iPhone","youtube":"YouTube"}},"featured":"Избранные коубы","featured_badge":"Избранное","follow_heading":"Подписаться на","from_mobile_app":" из <a href=%{url} class='description__stamp__source' target=%{target}>%{os}</a>","gifv":{"made_by":"<a href='%{coub_url}' target='_blank'>%{coub_title}</a> создан <a href='%{channel_url}' target='_blank'>%{channel_title}</a>","try_original":"Whops! Looks like script did not work for you. Try the <a href='%{link}' target='_blank'>исходная ссылка</a>."},"liked_by":"Лайкнул ","logo_prompt":"Коуб","make_another":"Закоубить","media_block":{"hide_button":"Спрятать","more_coubs_from_this_video":"Другие коубы из этого видео","original_video":"ОРИГИНАЛ","recoubed_from":"РЕКОУБНУТО ИЗ","show_less":"Показать меньше","show_more":"Показать больше","source":"ИСХОДНИК","video_source":"Исходное видео"},"original_by":"<a href=%{source} target=_blank>Рекоуб</a> · %{original}","original_by_small_card":"%{original}","profile":{"sort_by":{"likes_count":"По лайкам","newest":"Новые","oldest":"Старые","random":"Вразнобой","views_count":"По просмотрам"}},"recoub_by":"репостнул %{name}","redo":"Reconvert this coub!","stubs":{"age_restricted":{"button":"Да, мне есть 18 лет","header":"Этот коуб только для взрослых. Пожалуйста, подтвердите свой возраст.","title":"NSFW"},"no_permission":{"header":"Доступ запрещен"}},"stubs_new":{"no_permission":{"header":"Этот коуб недоступен для вас","sub":"Возможно он приватный или забаненный"},"processing":{"header":"Коуб обрабатывается","sub":"Вы можете походить по сайту, пока ждете."},"temp_coub":{"header":"Temp coub heading","sub":"Temp coub sub"}},"suggest_stats":{"traffic":"Traffic"},"timeline":{"prompts":{"list":"Список","mosaic":"Мозаика"},"sort_by":{"followers_count":"Top followers","most_liked":"По лайкам","most_viewed":"По просмотрам","newest":"Новые","newest_all":"Новые","newest_popular":"Популярные","oldest":"Старые","relevance":"Релевантные"}},"views_count":{"few":"просмотра","many":"просмотров","one":"просмотр","other":"просмотров"},"visibility":{"banned":"Забанен","draft":"Черновик","friends":"Для друзей","private":"Приватный","public":"Публичный","unlisted":"Только по ссылке"},"visibility_description":{"banned":"Только вы можете видеть этот коуб","friends":"Виден только тем на кого вы подписаны","nsfw":"Этот коуб только для взрослых","private":"Виден вам","public":"Виден всем","unlisted":"Доступен только по ссылке"}},"countries":{"ad":"Андорра","ae":"ОАЭ","af":"Афганистан","ag":"Антигуа и Барбуда","ai":"Ангилья","al":"Албания","am":"Армения","ao":"Ангола","aq":"Антарктида","ar":"Аргентина","as":"Американское Самоа","at":"Австрия","au":"Австралия","aw":"Аруба","ax":"Аландские острова","az":"Азербайджан","ba":"Босния и Герцеговина","bb":"Барбадос","bd":"Бангладеш","be":"Бельгия","bf":"Буркина-Фасо","bg":"Болгария","bh":"Бахрейн","bi":"Бурунди","bj":"Бенин","bl":"Сен-Бартелеми","bm":"Бермуды","bn":"Бруней","bo":"Боливия","bq":"Бонэйр, Синт-Эстатиус и Саба","br":"Бразилия","bs":"Багамские Острова","bt":"Бутан","bv":"Остров Буве","bw":"Ботсвана","by":"Белоруссия","bz":"Белиз","ca":"Канада","cc":"Кокосовые острова","cd":"ДР Конго","cf":"ЦАР","cg":"Республика Конго","ch":"Швейцария","ci":"Кот-д’Ивуар","ck":"Острова Кука","cl":"Чили","cm":"Камерун","cn":"Китай (Китайская Народная Республика)","co":"Колумбия","cr":"Коста-Рика","cu":"Куба","cv":"Кабо-Верде","cw":"Кюрасао","cx":"Остров Рождества","cy":"Кипр","cz":"Чехия","de":"Германия","dj":"Джибути","dk":"Дания","dm":"Доминика","do":"Доминиканская Республика","dz":"Алжир","ec":"Эквадор","ee":"Эстония","eg":"Египет","eh":"САДР","er":"Эритрея","es":"Испания","et":"Эфиопия","fi":"Финляндия","fj":"Фиджи","fk":"Фолклендские острова","fm":"Микронезия","fo":"Фареры","fr":"Франция","ga":"Габон","gb":"Великобритания","gd":"Гренада","ge":"Грузия","gf":"Гвиана","gg":"Гернси","gh":"Гана","gi":"Гибралтар","gl":"Гренландия","gm":"Гамбия","gn":"Гвинея","gp":"Гваделупа","gq":"Экваториальная Гвинея","gr":"Греция","gs":"Южная Георгия и Южные Сандвичевы Острова","gt":"Гватемала","gu":"Гуам","gw":"Гвинея-Бисау","gy":"Гайана","hk":"Гонконг","hm":"Херд и Макдональд","hn":"Гондурас","hr":"Хорватия","ht":"Гаити","hu":"Венгрия","id":"Индонезия","ie":"Ирландия","il":"Израиль","im":"Остров Мэн","in":"Индия","io":"Британская территория в Индийском океане","iq":"Ирак","ir":"Иран","is":"Исландия","it":"Италия","je":"Джерси","jm":"Ямайка","jo":"Иордания","jp":"Япония","ke":"Кения","kg":"Киргизия","kh":"Камбоджа","ki":"Кирибати","km":"Коморы","kn":"Сент-Китс и Невис","kp":"КНДР (Корейская Народно-Демократическая Республика)","kr":"Республика Корея","kw":"Кувейт","ky":"Острова Кайман","kz":"Казахстан","la":"Лаос","lb":"Ливан","lc":"Сент-Люсия","li":"Лихтенштейн","lk":"Шри-Ланка","lr":"Либерия","ls":"Лесото","lt":"Литва","lu":"Люксембург","lv":"Латвия","ly":"Ливия","ma":"Марокко","mc":"Монако","md":"Молдавия","me":"Черногория","mf":"Сен-Мартен","mg":"Мадагаскар","mh":"Маршалловы Острова","mk":"Северная Македония","ml":"Мали","mm":"Мьянма","mn":"Монголия","mo":"Макао","mp":"Северные Марианские Острова","mq":"Мартиника","mr":"Мавритания","ms":"Монтсеррат","mt":"Мальта","mu":"Маврикий","mv":"Мальдивы","mw":"Малави","mx":"Мексика","my":"Малайзия","mz":"Мозамбик","na":"Намибия","nc":"Новая Каледония","ne":"Нигер","nf":"Остров Норфолк","ng":"Нигерия","ni":"Никарагуа","nl":"Нидерланды","no":"Норвегия","np":"Непал","nr":"Науру","nu":"Ниуэ","nz":"Новая Зеландия","om":"Оман","pa":"Панама","pe":"Перу","pf":"Французская Полинезия","pg":"Папуа — Новая Гвинея","ph":"Филиппины","pk":"Пакистан","pl":"Польша","pm":"Сен-Пьер и Микелон","pn":"Острова Питкэрн","pr":"Пуэрто-Рико","ps":"Государство Палестина","pt":"Португалия","pw":"Палау","py":"Парагвай","qa":"Катар","re":"Реюньон","ro":"Румыния","rs":"Сербия","ru":"Россия","rw":"Руанда","sa":"Саудовская Аравия","sb":"Соломоновы Острова","sc":"Сейшельские Острова","sd":"Судан","se":"Швеция","sg":"Сингапур","sh":"Острова Святой Елены, Вознесения и Тристан-да-Кунья","si":"Словения","sj":"Шпицберген и Ян-Майен","sk":"Словакия","sl":"Сьерра-Леоне","sm":"Сан-Марино","sn":"Сенегал","so":"Сомали","sr":"Суринам","ss":"Южный Судан","st":"Сан-Томе и Принсипи","sv":"Сальвадор","sx":"Синт-Мартен","sy":"Сирия","sz":"Эсватини","tc":"Теркс и Кайкос","td":"Чад","tf":"Французские Южные и Антарктические Территории","tg":"Того","th":"Таиланд","tj":"Таджикистан","tk":"Токелау","tl":"Восточный Тимор","tm":"Туркмения","tn":"Тунис","to":"Тонга","tr":"Турция","tt":"Тринидад и Тобаго","tv":"Тувалу","tw":"Китайская Республика","tz":"Танзания","ua":"Украина","ug":"Уганда","um":"Внешние малые острова (США)","us":"США","uy":"Уругвай","uz":"Узбекистан","va":"Ватикан","vc":"Сент-Винсент и Гренадины","ve":"Венесуэла","vg":"Виргинские Острова (Великобритания)","vi":"Виргинские Острова (США)","vn":"Вьетнам","vu":"Вануату","wf":"Уоллис и Футуна","ws":"Самоа","ye":"Йемен","yt":"Майотта","za":"ЮАР","zm":"Замбия","zw":"Зимбабве"},"country_selector":{"title":"Регион: <i class='flag-icon flag-icon-%{country_code}'></i> <span>%{country_title}</span>"},"create":{"add_music":{"external":"Вставить ссылку","external_placeholder":"Ссылка на coub или youtube"},"add_segment":{"cancel":"Отмена","coub_link":"Ссылка на коуб","coub_link_note":"Paste coub link to make yours more awesome","coub_link_placeholder":"Вставьте ссылку на коуб","duplicate":"Копировать видео","duplicate_video":"Копировать видео","error_while_downloading":"Ошибка","upload_audio":"Загрузить","upload_video":"Загрузить видео","video_link":"Ссылка на видео","video_link_note":"Paste youtube or vimeo link to make yours more awesome","video_link_placeholder":"Вставьте ссылку на YouTube, Vimeo ..."},"audio_upload_errors":{"cant_read":"Мы не можем прочитать аудио файл.","wrong_permalink":"Неверная ссылка на коуб."},"delete_segment":{"delete_button":"Копировать сегмент"},"edit":{"heavily_modified_popup":{"post_as_new":"Опубликовать как новый.","reasons":{"audio":"Вы изменили аудио трек","playback":"You have changed a playback type","segment_added":"You have added a segment","segment_changed_too_much":"You have changed a segment very much","segment_removed":"You have removed a segment"},"title":"You've made significant changes to your coub."}},"exit_signals":{"on_editing":"You are exiting during editing","on_uploading":"You are exiting during upload"},"extended":"Extended","external":{"header":"Вставить ссылку на видео","sub":"Можно использовать видео с Vimeo, YouTube и тд. До 20 минут длиной. Пожалуйста, уважайте авторское право."},"frames":{"colon":":","dot":".","first_frame":"Первый кадр:","last_frame":"Последний кадр:","player_first_frame":"Первый кадр","player_last_frame":"Последний кадр"},"help":{"another_video":{"header":"Добавить другое видео","sub":"Добавьте еще одно видео к вашему коубу нажав на кнопку плюс"},"caption":{"header":"Заголовок и теги","sub":"Чем лучше будет заголовок и теги тем больше людей найдут ваш коуб."},"length":{"header":"10 секунд максимум","sub":"Максимальная длина коуба 10 секунд. Минимальная — всего три кадра!"},"low_quality":{"header":"Качество","sub":"Качество видео в редакторе ниже чем в коубе на выходе. Это сделано для того чтобы ускорить процесс."},"mute":{"header":"Звук","sub":"Звук часто портит цикл. Вы можете выключить звук или добавить аудиотрек для того чтобы это скрыть."},"restricted":{"header":"Запрещенный контент","sub":"Порнография и насилие запрещены на коубе. Все такие коубы будут забанены."},"reverse":{"header":"Реверс","sub":"Если у вас не получается свести коуб, попробуйте «пинг-понг» или «реверс». Часто получаются очень неожиданные вещи."},"shadow_button":{"header":"Прозрачный кадр","sub":"Для того чтобы легче было совместить первый и последний кадр.","tutorial":"Посмотрите как это работает"},"soundtrack":{"header":"Саундтрек","sub":"Вы можете загружать MP3 или брать звук из YouTube для своих коубов. До 20MB."},"video":{"header":"Как сделать коуб","sub":""}},"messages":{"add_segment_with_wrong_aspect_ration":{"message":"Trying to add segment with wrong aspect ratio","title":"Нельзя совмещать вертикальное и горизонтальное видео"},"audio_too_heavy_error":{"message":"Извините, аудио файл слишком тяжелый. Вы можете загрузить максимум 20 MB.","title":"Ошибка загрузки"},"audio_upload_error":{"message":"Ошибка загрузки аудио","title":"Ошибка загрузки"},"cancel":"Отмена","converting":"Конвертируется","coub_will_be_saved_as_new":"Ваш коуб будет сохранен, как новый.","delete":"Удалить","delete_segment":"Вы действительно хотите удалить сегмент?","downloading":"Скачивается","error":"Ошибка","error_coub_not_found":"Коуб не найден","recording":"Recording","save_button":{"music_is_uploading":"Аудио загружается","overall_time_exceeded_error":"Overall time exceeded","video_is_processing":"Пожалуйста подождите, видео процессится"},"save_error":{"message":"Произошла ошибка записи, попробуйте обновить редактор.","title":"Ошибка записи!"},"save_success":{"message":"Ваш коуб сохранен","title":"Сохранено!"},"saving_while_music_uploading":{"message":"Аудио загружается.","title":"Ошибка записи!"},"stand_by":"Stand by","unexpected_error":{"message":"Неизвестная ошибка. Попробуйте еще раз или напишите в поддержку support@coub.com если не заработает.","title":"Неожиданная ошибка"},"unknown_error":"Неизвестная ошибка","uploaded":"Загружено","uploading":"Загружается","video_too_heavy_error":{"message":"Извините, видео слишком большое. Вы можете загружать видео до 400 MB.","title":"Ошибка загрузки"}},"options":{"description_placeholder":"Название","upload_music":"Добавить аудио"},"pastable_forms":{"errors":{"empty_url":"Вы вставили пустой URL","wrong_coub_url":"Неверный URL"}},"placeholder":"http://","player":{"be_patient":"Пожалуйста, подождите","loading_previous":"Загружается предыдущее выделение","loading_video":"Загружается видео","toggle_flash_html5":"HTML5 редактор <span>β</span>"},"popup":{"heading":"Выберете сегмент коуба, который хотите вставить"},"prompts":{"backloop":"Обратный цикл","default":"Цикл","delete_music":"Удалить трек","next_frame":"Следующий кадр","prev_frame":"Предыдущий кадр","privacy":"Приватность","reactions":"Случайные реакции","redo":"Вернуть","reverse_off":"Пинг-понг отключен","reverse_on":"Пинг-понг","segment":"Добавить сегмент","sound":"Звук","soundtrack":"Добавить аудио","splices":"Вставки","undo":"Отменить"},"remix":{"cant_post_because_dont_changed":{"description":"Вы должны изменить звук или выбрать другую часть видео или загрузить другие сегменты для монтажа","title":"Вы не можете сохранить этот коуб, потому что такой уже есть, вы можете репостнуть его"}},"safari_stub":{"sub":"Safari не поддерживается, пожалуйста воспользуйтесь другим браузером (Chrome, Firefox, Opera etc.)"},"save":{"done":"Готово","next":"Далее"},"segment_popup":{"delete":"Удалить","duplicate":"Дублировать сегмент","mute":"Выключить звук","time_reverse":"Реверс"},"segments":{"errors":{"coub_is_not_done":"Коуб процессится, попробуйте позже"}},"shadow_button":{"title":"Прозрачный кадр","tooltip":"Прозрачный кадр"},"stripes":{"content":{"after":"После","before":"До","cancel":"Отмена","remove_stripes":"Удалить черные полосы","return_stripes":"Вернуть черные полосы"},"text":{"removed":"Черные полосы были удалены из этого видео.","returned":"Черные полосы были добавлены в это видео."},"text_button":"Отмена"},"sub":"YouTube, Vimeo, Coub, Twitch, Instagram и тд.","switch":{"new":"Switch to new editor","old":"Switch to old editor"},"upload":{"be_patient":"Пожалуйста подождите","converting_file":"<strong>Конвертируется: </strong> %{file_name}","downloading_file":"<strong>Скачивается: </strong> %{file_name}","header":"Загрузить видео","reconverting_header":"The video is being reconverted","states":{"converting":"Конвертируем видео","uploading":"Загружаем видео"},"sub":"Загрузите и обрежьте видео. До 400 MB, максимум 20 минут. Коуб поддерживает большинство видео форматов.","uploading_file":"<strong>Загружается: </strong> %{file_name}"},"upload_title":"Coub редактор: %{title}","video_upload_errors":{"cant_read":"Мы не смогли прочесть этот файл.","empty_file":"Файл пустой","exceeds_duration":"Видео должно быть 20 минут или короче.","exceeds_loop_duration":"Видео должно быть до 10 секунд.","falls_short_min_duration":"Видео слишком короткое","gif_is_too_small":"Gif должны быть минимум 401x226","no_data":"No data received","unacceptable_file_type":"Мы не поддерживаем этот тип файла","video_resolution_is_too_big":"Разрешение видео слишком большое","video_resolution_is_too_small":"Видео должны быть больше 300x100"},"webcam":{"header":"Камера","reshoot":"Переснять","sub":"Для тех случаев, когда ваша комната интереснее интернета"}},"create_a_coub":"Создать","create_a_coub_ext":"Создать коуб","customize_popup":{"after_create":{"buttons":{"advanced":"Дополнительно","back":"Назад","clear_tags":"Очистить тэги","next":"Дальше","publish":"Опубликовать","publish_and_stay":"Опубликовать и сделать еще один","save":"Сохранить"},"heading":"Опишите свой коуб","message_placeholder":"Write something to accompany your post","share_heading":"Поделиться","share_opts":{"adult":{"description":"Mark the coub if there is nudity or violent images. We will require viewers to confirm their age.","label":"Your content will be invisible for users who are not logged in and for those who's age is under 18."},"age_restricted":{"description":"Check this box if your coub contains violence or nudity. Viewers will be asked to confirm that they are over 18.","label":"Mark as adult content"},"allow_reuse":{"description":"Check this box to allow other users to create coubs from your video. Make sure it doesn't contain anything you'd prefer to keep private.","label":"Let others use your video"},"another_coub":{"description":"Check this box to remain in the editor while we process your current coub.","label":"Make another coub from this video"},"cutter":{"description":"We don't cut off black stripes on the coub if enabled. May be useful if your video is dark.","label":"Cut off black stripes"},"dont_crop":{"description":"Check this box to keep the horizontal or vertical black bars around your coub. Otherwise, they'll be automatically cropped out.","label":"Отключить авто кроп"},"normalize_sound":{"label":"Нормализовать звук"},"publish_on":{"label":"Опубликовать"},"user_video":{"label":"Allow to use your video"}},"tags_placeholder":"Use comma or press Enter to separate tags"},"error_messages":{"title_required":"Please write a caption for your coub.","title_too_long":"You've exceeded the 140 character limit."},"select_categories":"Выберите сообщество для публикации","simple_edit":{"buttons":{"cancel":"Отмена","publish":"Сохранить"},"heading":"Редактировать","message_after_save":{"header":"Готово!","message":"Изменения сохранены."}}},"date":{"formats":{"cotd":"%d %B","default":"%Y-%m-%d","long":"%B %d, %Y","short":"%b %d"}},"datetime":{"distance_in_words":{"about_x_hours":{"few":"примерно %{count} часа","many":"примерно %{count} часов","one":"примерно %{count} час","other":"примерно %{count} часов"},"about_x_months":{"few":"примерно %{count} месяца","many":"примерно %{count} месяцев","one":"примерно %{count} месяц","other":"примерно %{count} месяцев"},"about_x_years":{"few":"примерно %{count} года","many":"примерно %{count} лет","one":"примерно %{count} год","other":"примерно %{count} лет"},"almost_x_years":{"few":"почти %{count} года","many":"почти %{count} лет","one":"почти %{count} год","other":"почти %{count} лет"},"half_a_minute":"пол минуты","less_than_x_minutes":{"few":"меньше %{count} минут","many":"меньше %{count} минут","one":"меньше %{count} минуты","other":"меньше %{count} минут"},"less_than_x_seconds":{"few":"меньше %{count} секунд","many":"меньше %{count} секунд","one":"меньше %{count} секунды","other":"меньше %{count} секунд"},"over_x_years":{"few":"больше %{count} лет","many":"больше %{count} лет","one":"больше %{count} года","other":"больше %{count} лет"},"x_days":{"few":"%{count} дня","many":"%{count} дней","one":"%{count} день","other":"%{count} дней"},"x_minutes":{"few":"%{count} минуты","many":"%{count} минут","one":"%{count} минута","other":"%{count} минут"},"x_months":{"few":"%{count} месяца","many":"%{count} месяцев","one":"%{count} месяц","other":"%{count} месяцев"},"x_seconds":{"few":"%{count} секунды","many":"%{count} секунд","one":"%{count} секундa","other":"%{count} секунд"}},"prompts":{"day":"День","hour":"Час","minute":"Минута","month":"Месяц","second":"Секунда","year":"Год"}},"dev":{"applications":{"blocks":{"application_settings":{"description":"Your application's id and Secret are used to authenticate requests to the Coub.","labels":{"authorize":"Authorize app","callback":"Callback URL","id":"Application Id","request_token":"Request access token","revoke_token":"Revoke access token","secret":"Secret"},"title":"Application Settings"},"organization":{"description":"Information about the organization or company associated with your application. This information is optional.","labels":{"organization":"Organization","website":"Organization website"},"title":"Organization"}},"buttons":{"add_new_application":"Add application","create_new_application":"Create","delete":{"cancel":"Отмена","label":"<i></i>Delete application","ok":"Ok"},"menu":{"details":"Details","settings":"Настройки"},"oauth":{"cancel":"Отмена","ok":"Хорошо"},"update_application_settings":"Update settings","upload_avatar":"<i></i><br>Add your app icon"},"delete_description":"Are you sure you want to delete this application? This action cannot be undone!","form":{"agreement_checkbox":"Creating this application I agree to the <a href=\"/api-terms\" class=\"-color--blue-ribbon\">Terms of Service</a>","agreement_error":"You cannot create an application without agreeing to the terms of service","descriptions":{"callback":"Where should we return after successfully authenticating?","description":"Your application description, which will be shown in user-facing authorization screens.","image":"JPG, GIF, PNG","name":"Your application name, which will be shown in user-facing authorization screens.","organization_name":"The organization or company behind this application, if any.","organization_website":"The organization or company behind this application's web page, if any.","website":"Your application's publicly accessible home page, where users can go to download, make use of, or find out more information about your application."},"error":"This field is invalid","labels":{"android_url_scheme":"Android app scheme","app_store_url":"App Store link","callback":"Callback URL","channel_url":"Coub channel link","description":"Description","google_play_url":"Google Play link","image":"Application icon","ios_url_scheme":"IOS app scheme","name":"Name","organization_name":"Name","organization_website":"Website","website":"Website"}},"headers":{"application":"Application","applications":"Applications","delete_popup":"Delete application","new_application":"New application","oauth_popup":"Authorize required"},"oauth":{"description":"<b>%{app_name}</b> will receive your coub account info and:"},"titles":{"new_application":"Add new application"}},"docs":{"header":"API Documentation","search":{"label":"Search docs","nothing_found":"Oops, nothing found","title":"Search"}}},"elements":{"followers":{"few":"подписчика","many":"подписчиков","one":"подписчик"},"followings":{"few":"подписки","many":"подписок","one":"подписка"}},"embed_errors":{"403":{"heading":"Sorry, an unexpected error occurred."},"404":{"heading":"Коуб был удален пользователем."},"500":{"heading":"This coub is unavailable due to the user's privacy settings."},"bottom":"You can use %{link} to find coubs with same title.","e_403":{"heading":"This coub is unavailable due to the user's privacy settings."},"e_404":{"heading":"Коуб был удален пользователем."},"e_500":{"heading":"Sorry, an unexpected error occurred."},"link":"search on coub.com"},"errors":{"access_denied":{"header":"У вас нет прав смотреть эту страницу."},"auth_failed":{"header":"Authorization failed","sub":"It seems, that you cancelled authorization process. Please, try again."},"authentication_error":{"header":"Произошла ошибка","sub":"Ошибка авторизации"},"deleted_user":{"header":"Пользователь удален","sub":"Этого канала больше не существует"},"internal_server_error":{"header":"Sorry, this page cannot be shown at this time.","sub":"An unexpected error occurred.","try_again":"We are working to solve this issue.<br />Please try again later."},"not_found":{"check_coubs":"While you're here, check out these coubs:","header":"Sorry, that page doesn't exist.","show_others":"Показать больше","sub":"Please check the URL address or use the search function."},"oauth_token_restrictions":{"too_many_requests":"Request limit exceeded"},"required":{"bug_report":"Поля обязательны к заполнению"},"too_fast":{"follow":"Вы подписываетесь слишком быстро","like":"Вы лайкаете слишком быстро","recoub":"Вы репостите слишком быстро","slow_down":"Пожалуйста, помедленнее, я записываю"}},"explore_page":{"description":"Newest and featured coubs to discover. ","hot":{"description":"Trending coubs."}},"external_download":{"errors":{"access_denied":"Access to this video is denied by the owner.","cant_download_this_file":"Videos bigger than 400MB are not allowed.","exceeds_duration":"Videos must be 20 minutes or shorter.","external_service_error":"External service might be not accessible. Please try again later.","file_is_too_big":"Videos bigger than 400MB are not allowed.","instagram_not_video":"Not Instagram video","internal_server_error":"An error occurred during the upload. Our support team has automatically been notified. Please try again later.","invalid_carambatv_video":"Url provided is not CarambaTV video.","invalid_dailymotion_video":"Url provided is not Dailymotion video.","invalid_live_leak_video":"Url provided is not Live Leak video.","invalid_odnoklassniki_video":"Url provided is not Odnoklassniki video.","invalid_twitter_video":"Url provided is not Twitter video.","invalid_url":"URL is invalid","invalid_vk_video":"Url provided is not Vk video.","invalid_wimp_video":"Can't download this file","no_meta":"Видео не найдено. This might be due to a copyright issue.","not_found":"Видео не найдено. Проверьте правильная ли у вас ссылка.","service_not_available":"External service is not available, please try again later","video_not_available":"Это видео не доступно. Мы не можем его скачать. Извините.","vk_auth_required":"The video is not public. We can't download it. Sorry."}},"find_friends":{"banners":{"facebook":{"button":"Подключить Facebook","heading":"Coub лучше с друзьями","text":"Подключите Facebook чтобы найти друзей на Coub."},"google":{"button":"Загрузить","heading":"Coub лучше с друзьями!","text":"Загрузите контакты из  <strong>%{email}</strong> чтобы найти друзей на Coub."},"twitter":{"button":"Подключить Twitter","heading":"Coub лучше с друзьями!","text":"Подключите Twitter чтобы найти друзей на Coub."}},"errors":{"friends_not_found":"Друзья не найдены"},"from_facebook":"Из Facebook","from_google":"Из Gmail","from_twitter":"Из Twitter","from_vkontakte":"Из Vkontakte","invite":{"facebook":{"invite_message":"Регистрируйся на Coub,"}},"page":{"connect":"Подключите социальные сети <br />чтобы найти друзей на Coub.","errors":{"invalid_emails":"Неверный е-мейл: ","invitations_already_sent_to":"Приглашение высланы: ","invites_sent_to":"Приглашение высланы: "},"follow_all":"Подписаться на всех","heading":"Искать друзей на коубе","invintation_sent":"Приглашение отправлено.","invite_all":"Пригласить всех","invite_missing":"Пригласи друзей","invite_missing_tip":"Пригласи друзей присоединиться к тебе на Coub.","invite_via_email":"Пригласить друзей через е-мейл","invite_via_email_placeholder":"Пригласить друзей через е-мейл","invite_via_email_tip":"Введите несколько е-мейлов через запятую.","no_friends_found":"Друзья не найдены :(","no_friends_found_tip":"Пригласи друзей присоединиться к тебе на Coub!","no_social":"Без друзей скучно. Найди их!","no_social_tip":"Подключите социальные сети и пригласи друзей. Или пригласи через е-мейл.","registered_filter_placeholder":"Поиск по имени","send_more":"Отправить еще одно?","unregistered_filter_placeholder":"Фильтр","who_to_follow":"На кого подписаться"}},"follow_confirmation":{"confirm":"Confirm channel following"},"footer":{"acrcloud":"Распознавание музыки от <a href=\"https://www.acrcloud.com\" target=\"_blank\">ACRCloud</a>.","copyright":"&copy;&nbsp;%{years}&nbsp;Coub.","menu":{"about":"О нас","advertise":"Реклама","apps":"Приложения","blog":"Блог","brand_assets":"Брэнд","developers":"Разработчикам","dmca":"DMCA","faq":"Помощь","privacy":"Конфиденциальность","terms":"Условия"},"selectel":"Хостится на <a href=\"http://selectel.com\" target=\"_blank\">Selectel</a>."},"footer_ios":{"menu":{"about":"О нас","explore":"Explore","terms":"Условия"}},"footer_mainpage":{"menu":{"about":"О нас","brand_assets":"Брэнд","developers":"Разработчикам","faq":"Помощь","media":"Для медиа","terms":"Условия"}},"growl_errors":{"channels":{"change":{"title":"Сменить канал"}},"coub_abuse_dropdown":{"error_empty":"Your complaint is empty. Please describe the reason that reflects your concern about this coub.","error_while_delete":"Error occured while deleting your complaint. Please try again later.","error_while_send":"Error occured while sending your complaint. Please try again later.","header":"Пожаловаться"},"like":{"error_when_set":"Ошибка. Пожалуйста, попробуйте позже.","header":"Лайк"},"recoub":{"error_when_set":"Ошибка. Пожалуйста, попробуйте позже.","header":"Репост"},"reload":{"error":"Попробуйте обновить страницу","header":"Ошибка страницы"},"save_error":"Ошибка!","unlike":{"error_when_set":"Ошибка. Пожалуйста, попробуйте позже.","header":"Отмена лайка"},"unrecoub":{"error_when_set":"Ошибка. Пожалуйста, попробуйте позже.","header":"Отрепост"}},"guide":{"button":"Понял!","simple_helper":{"hide_owner_helper":"Корона показывает что вы ведете этот канал. Если вы предпочитаете не афишировать это то вы можете убрать эту метку в настройках канала.","hide_owner_helper_title":"Корона"}},"headers":{"signup_from_invite_title":"Coub"},"hints":{"profile":{"avatar_upload":{"content":"Загрузите картинку 300x300 или больше. По аватару люди будут вас узнавать и больше подписываться.","heading":"Загрузить аватар"},"cover_upload":{"content":"Используйте картинки и коубы высокого разрешения, чтобы канал выглядел круто","heading":"Загрузить обложку"},"liked_by":{"heading":{"many":"You liked %{count} coubs created by <strong>%{title}</strong>","one":"You liked %{count} coub created by <strong>%{title}</strong>"}}}},"i18n":{"plural":{"keys":["one","few","many","other"],"rule":{}}},"image_for_sharing":{"stories":{"coubs_count":{"few":"%{count} коуба","many":"%{count} коубов","one":"%{count} коуб"},"story":"История"}},"invite_friends":{"messages":{"common":"%{name} invited you to join Coub. Invite is non-transferable. Go check out what's on the plate. %{invite_link}"},"timeline":{"buttons":{"invite":"Приглос"}}},"likes_page":{"heading":"МОИ ЛАЙКИ"},"locale_selector":{"language":"Русский","selected":"Язык: <span>Русский</span>"},"logout":"Выйти","mail_registration_form":{"have_an_account":"<span data-dialog-change=\"sign_in\">Есть аккаунт? <b>Войти</b></span>","legal_note":"Создавая аккаунт, вы соглашаетесь с <a href=\"#{terms_of_service_page_path}\" target=\"_blank\">Условиями использования</a> и <a href=\"#{terms_of_service_policy_page_path}\" target=\"_blank\">Политикой конфиденциальности</a>.","legal_note_1":"Создавая аккаунт, вы соглашаетесь с <a href=\"%{tos_url}\" target=\"_blank\">Условиями использования</a> и <a href=\"%{privacy_policy_url}\" target=\"_blank\">Политикой конфиденциальности</a>.","popup_title":"<b>Впервые на Coub?</b> Зарегистрироваться","sign_up_btn":"Зарегистрироваться"},"meta":{"title":"Coub"},"mobile":{"coub":"Coub","coub_page":{"like":"Лайк","no_access":{"banned":"Этот коуб был забанен.","channel_title":"Кто-то","copyright_banned":"This coub has been removed due to DMCA copyright notice from copyright owner.","date":"Когда-то","friends_only":"Этот коуб доступен только для друзей автора.","private":"Этот коуб доступен только автору."},"open_in_app":"Открыть в приложении","recoub":"Рекоуб","share":"Поделиться","source":"источник <a href=\"%{url}\">%{name}</a> · ","suggestions":"Другие коубы","views":{"few":"просмотра","many":"просмотров","one":"просмотр","other":"просмотров"}},"get_app":"Скачать приложение Коуб","header":{"chats":"Чат","create":"Создать","home":"Домой","hot":"Популярное"},"install":"Установить","open_in_app":"Открыть в приложении","sharing__button_facebook":"Facebook","sharing__button_imessage":"iMessage","sharing__button_kik":"Kik","sharing__button_messenger":"Messenger","sharing__button_telegram":"Telegram","sharing__button_tumblr":"Tumblr","sharing__button_twitter":"Twitter","sharing__button_whatsapp":"WhatsApp","story_page":{"like":"Лайк","repost":"Репост"},"stub":{"base":"в&nbsp;приложении Coub","best2018_gems":"Cмотрите самые популярные коубы 2018&nbsp;года %{base}","best2018_likes":"Cмотрите самые популярные коубы 2018&nbsp;года %{base}","best2018_memes":"Смотрите лучшие мемы 2018&nbsp;года %{base}","best2019_gems":"Cмотрите самые популярные коубы 2019&nbsp;года %{base}","best2019_likes":"Cмотрите самые популярные коубы 2019&nbsp;года %{base}","best2019_memes":"Смотрите лучшие мемы 2019&nbsp;года %{base}","bookmarks":"Смотрите закладки %{base}","channel":"Смотрите больше коубов от %{channel} %{base}","chat":"Используйте чат %{base}","community":"Смотрите больше коубов от %{community} %{base}","create":"Создавайте коубы %{base}","default":"Смотрите эту страницу %{base}","description":"Все функции Coub доступны в нашем быстром и бесплатном приложении","featured":"Смотрите интересные кобы %{base}","feed":"Смотрите ленту %{base}","hot":"Смотрите популярные коубы %{base}","likes":"Смотрите лайки %{base}","random":"Смотрите случайные коубы %{base}","stories":"Читайте истории %{base}","stories_feed":"Смотрите список историй %{base}","tag":"Смотрите коубы с тегом #%{tag} %{base}","weekly":"Смотрите лучшие коубы недели %{base}"}},"my_likes":{"filter_all_channels":"Все каналы"},"no_flash":{"get":"Скачать Adobe Flash Player","sub":"Вам нужна свежая версия Adobe Flash Player, чтобы делать коубы."},"notifications":{"background_ban":{"mine":"Ваша обложка была забанена"},"banned":{"mine":"Ваш коуб был забанен"},"copyright_ban":{"mine":"Ваш коуб был забанен из-за обращения правообладателя"},"cotd":{"mine":"Ваш коуб %{cotd_link}"},"famous_follow":{"mine":"%{sender} подписался на тебя!"},"favorite_follow":{"mine":"%{sender} подписался на тебя!"},"follow":{"follow_back_suffix":"подписался в ответ","foreign":{"few":"%{sender} подписалось на %{recipient}","many":"%{sender} подписалось на %{recipient}","one":"%{sender} подписался на %{recipient}"},"is_now_following_suffix":"подписался на тебя","mine":"%{sender} подписался на тебя!"},"follow_back":{"mine":"%{sender} подписался в ответ"},"friend_cotd":{"mine":"Ваш друг %{sender} получил Коуб дня!"},"friends":{"prompt":"Подписчики"},"hot":{"mine":"Ваш коуб попал в горячее"},"like":{"foreign":{"few":"%{sender} лайкнули %{someone}’s коуб","many":"%{sender} залайкали %{someone}’s коуб","one":"%{sender} лайкнул %{someone}’s коуб"},"mine":{"few":"%{sender} лайкнули коуб","many":"%{sender} лайкнули коуб","one":"%{sender} лайкнул коуб"}},"like_recoub":{"foreign":{"few":"%{sender} лайкнули %{someone}’s репост","many":"%{sender} лайкнули %{someone}’s репост","one":"%{sender} лайкнул %{someone}’s репост"},"mine":{"few":"%{sender} лайкнули репост","many":"%{sender} лайкнули репост","one":"%{sender} лайкнул репост"}},"marked_18":{"mine":"Ваш коуб был отмечен как коуб для взрослых"},"new_category":{"mine":"Ваш коуб попал в «Избранные»"},"prompt":"Уведомления","raw_video":{"title":"Ваше видео <span>%{video_title}</span> закачалось!"},"recoub":{"foreign":{"few":"%{sender} репостнули","many":"%{sender} репостнули","one":"%{sender} репостнул"},"mine":{"few":"%{sender} репостнули коуб","many":"%{sender} репостнули коуб","one":"%{sender} репостнул коуб"}},"sn_friend_cotd":{"mine":"Твой друг %{sender} получил Коуб дня!"},"sn_friend_follow":{"mine":"Твой друг %{sender} из %{meta} подписался на тебя!"},"sn_friend_registered":{"mine":"Твой друг %{sender} из %{meta} зарегистрировался на Coub"},"userpic_ban":{"mine":"Ваш аватар был забанен. Пожалуйста, загрузите новый"}},"notifications_button":{"disable":"Отключить уведомления о новых коубах","enable":"Включить уведомления о&nbsp;новых коубах","pushes_tip":{"button":"Понятно!","heading":"Пожалуйста включите уведомления в&nbsp;вашем браузере"}},"notifications_popup":{"all_channels":"Все каналы","empty":"Ничего нет.. только тлен","find_friends":"Найти друзей","new_followers":"Новые подписчики","see_more":"Еще","who_to_follow":"На кого подписаться"},"objects_group_pluralizer":{"and":"и","many_with_dropdown":"%{first} и %{dropdown}","others_text":{"few":"%{count}&nbsp;другие","many":"%{count}&nbsp;другие","one":"%{count}&nbsp;другой"},"two":"%{first} и %{second}"},"profile":{"add_cover":"Редактировать обложку","background":{"coub_doesnt_exist":"Коуба не существует","coub_is_age_restricted":"Коубы для взрослых не могут стоять на обложке.","coub_is_not_public":"Только публичные или доступные только по ссылке коубы могут стоять на обложке.","coub_is_too_small":"Разрешение коуба слишком маленькое. Используйте HD коуб","coub_width_is_too_small_for_cover":"Коуб слишком маленький для обложки","image_is_not_jpg":"Поддерживаются только jpg-картинки","image_is_too_small":"Картинка слишком маленькая","invalid_url":"Неверная ссылка на коуб","no_coub_or_image_given":"No coub or image given"},"banners":{"leeco":{"h2":"Конкурс завершён.<br>Всем спасибо за участие!","intro":"LeEco представляет смартфоны Le2 и Le Max2 с мощной начинкой и крутой камерой.","rules":"Поздравляем победителей! Авторы лучших коубов стали обладателями телефонов LeEco:<br><a href=\"http://coub.com/dvrectenup\" target=\"_blank\">Алексей Ящер</a> выиграл LeEco LeMax2<br><a href=\"http://coub.com/1967none\" target=\"_blank\">RUSSR</a> выиграл LeEco Le2<br><a href=\"http://s.storage.akamai.coub.com/get/b20/p/promo_rule/cw_text_file/4b1a5a4f860/f4a5f3af7f3f68568153b/1474470045_____________________LeEco.pdf\" target=\"_blank\">Остальные победители</a> получают яркие наушники LeMe"},"lenovo":{"heading":"Новый планшет <strong>Lenovo Yoga Tablet 2</strong> совмещает в себе сразу 4 режима.","ptwo":"Прими участие в конкурсе: сделай коуб про то, что еще можно использовать в четырех разных режимах или просто сделай смешной коуб из официальных роликов Lenovo Yoga Tablet 2.<br><br>Добавь свой коуб в коллекцию, поставь хэштэг <a class=\"lenovo-hash\" href=\"http://ads.adfox.ru/214153/goLink?p1=brkor&amp;p2=v&amp;p5=coxkb&amp;pr=44615\">#lenovoyoga</a>,&nbsp;собери тучу лайков и выиграй Lenovo Yoga Tablet 2.<br /><br><span style=\"font-size: 13px; line-height: 18.2000007629395px; background-color: rgb(255, 255, 255);\"><b><i>Конкурс завершён, всем спасибо за участие. С победителем свяжутся в ближайшее время.</i></b></span>","rules":"Правила участия в конкурсе"},"micromax":{"rules":"Знакомо ощущение, когда телефон разряжается в&nbsp;самый ответственный момент? С новым <em><a href='//ads.adfox.ru/214153/goLink?p1=brkor&p2=v&p5=dyhyd&pr=538291' target='_blank'>Micromax Canvas Juice&nbsp;4 (Q465)</a></em> и&nbsp;его по-настоящему выносливым аккумулятором об&nbsp;этом можно забыть. <br />Спасибо всем за&nbsp;участие в&nbsp;конкурсе! Победителями стали: <em> <a href='//coub.com/view/f6d6s'>Insight</a></em>, <em><a href='//coub.com/view/f5ie5'>Dragov</a></em>, <em><a href='//coub.com/view/f79s0'>COUB</a></em>."}},"change_channel":"Сменить канал","change_channel_userpic":"Выбрать аватар для канала","cover":{"popups":{"cover_positioner":"Потяните для перемещения","error":"Картинка слишком маленькая. Загрузите картинку минимум 1000x400 пикселей.","hd_mark":"Только HD коубы","placeholder":"Вставьте ссылку на коуб","remove":"Удалить","remove_cover":{"coub":"Вы уверены?","photo":"Вы уверены?"},"tip":"Для того чтобы узнать какой коуб HD наведите мышкой на любой коуб и если рядом со значком звука есть иконка HD, то этот коуб подходит."}},"edit":{"account_settings":{"add_new_channel":"Новый канал","date_of_birth":"Дата рождения","delete_account_button":"Удалить аккаунт","delete_account_heading":"Удалить аккаунт","delete_account_sub":"Вы уверены, что хотите удалить аккаунт?","delete_channel_button":"Удалить канал","delete_channel_heading":"Удалить канал","delete_channel_sub":"Вы уверены, что хотите удалить этот канал?","email":"Е-мейл","gender":"Пол","link_phone_number":"Привязать","locale":"Язык","password":"Пароль","phone_number":"Номер телефона","title":"Настройки аккаунта","unlink_phone_number":"Отвязать"},"change_pass":"Сменить пароль","confirm_pass":"Подтверить пароль","edit":"Настройки","email_settings":{"mails":{"mail_digest":"Ежедневные новости","mail_newsletter":"Новостное письмо","mail_weekly":"Лучшие коубы недели","system_mail":"Системные письма"},"sub":"Вы можете настроить оповещения для каждого канала отдельно.","title":"Настройки е-мейла"},"hide_owner":"<strong>Вести канал анонимно.</strong> Вы не будете значиться автором канала в социальных сетях, рекомендациях или поиске","profile_settings":{"autopost_to_social":{"coub":"Автоматически постить коубы в %{social}","recoub":"Автоматически постить репосты в %{social}"},"description":"Описание","social_networks":"Социальные сети","textarea_sub":"символов осталось","title":"Название","username":"Никнэйм","username_rules":"Изменить никнэйм можно только один раз. Разрешены только латинские буквы, цифры, точки и дэши"},"save_settings":"Сохранить изменения","saved_successfull":{"header":"Готово!","message":"Изменения сохранены."},"strong_pass":"Сильный","weak_pass":"Слабый"},"errors":{"auth_error":"Неверный е-мейл или пароль","auth_taken":"Эта авторизация была взята","email_is_invalid":"Неверный е-мейл","email_is_registered":"Этот е-мейл уже зарегистрирован","empty_fields":"Поля обязательные к заполнению","not_found":"Канал не найден","password_incorrect":"Неверный пароль","permalink_ends_with_dot":"URL не может заканчиваться точкой","permalink_invalid":"Можно использовать только a-z, 0-9, точку (.), или тире (-)","permalink_is_required":"Ссылки не найдено","permalink_too_short":"URL должен быть длиннее 8 символов","permalink_unavailable":"Этот URL недоступен","phone_unlink_error":"Пожалуйста, привяжите е-мейл","title_is_required":"Заголовок должен быть","title_is_too_long":"Заголовок должан быть короче 255 символов"},"feed":"Лента","find_friends":"Найти друзей","follow":"Подписаться","following":"Подписан","home":"Главная","my_coubs":"Мои коубы","my_favourites":"Закладки","my_likes":"Мои лайки","no_coubs_available":"%{user} нет коубов","no_favourites_user":"У вас нет закладок","no_likes_available":"%{user} нет лайков","no_likes_user":"У вас нет лайков","no_stories_available":"%{user} нет историй","save":"Сохранить","settings":"Настройки","stories":"Лента историй","timeline":{"friendships_block":{"followers_title_more":" подписчики","followers_title_one":" подписчик","heading":"На кого подписаться"},"types":{"all_coubs":"Все","coubs":"Коубы","likes":"Мои лайки","recoubs":"Репосты","stories":"Истории"}},"unfollow":"Отписаться","views":"просмотры","who_to_follow":"На кого подписаться"},"promoted_coubs":{"all_countries":"Все страны","buttons":{"back":"Назад","edit":"Редактировать","new":"Новая кампания","next":"Дальше","pay":"Оплатить","promote":"Раскрутить коуб","replace_coub":"Заменить коуб"},"clink_link_text":"Узнай больше на <u>%{hostname}</u>","contacts":"В случае если у вас возникли вопросы, напишите нам: <a href='mailto:sales@cmtt.ru'>sales@cmtt.ru</a>","coub_by":"Промо · %{name}","deleted_coub":"Коуб был удален","deleted_coub_replace":"Коуб был удален, пожалуйста выберите другой","details":{"android":"Android: ","ios":"iOS: ","location":"Таргетинг: ","pause":"Пауза","platforms":"Платформы: ","start":"Старт","start_date":"Дата старта: ","status":"Статус: ","title":"Детали кампании","views":"Просмотры: ","web":"Веб: "},"form":{"android_link":"Ссылка для Android","coub_tip":"Вставьте ссылку на коуб","edit":"Редактирование промо коуба","enter_name":"Введите своё имя","first_name":"Имя","ios_link":"Ссылка для iOS","last_name":"Фамилия","locations":"Таргетинг по странам","pay_and_launch":"Оплатить и запустить","platforms":"Таргетинг по платформам","promote":"Раскрутить коуб","select_coub":"Выберите коуб для раскрутки","starts":"Начало","starts_tip":"Не позднее 3х месяцев от текущей даты","total_budget":"Суммарный бюджет","update":"Обновить","views":"Желаемое количество просмотров","views_tip":"Минимум 1000 просмотров","web_link":"Ссылка для веба"},"info":"Инфо о кампании","platforms":{"all":"Вебсайт, iOs, Android","android":"Android","ios":"iOS","web":"Вебсайт"},"promoted":"Промо","statuses":{"approved":"Одобрен","created":"Создан","finished":"Завершен","paid":"Оплачен","paused":"Приостановлен","rejected":"Отклонен","waiting_for_review":"Ожидает ревью"},"stub":{"button":"Раскрутить коуб","title":"Сделайте ваш коуб заметней!"},"title":"Промо коубы","values":{"average_cpv":"Средняя цена показа","budget":"Бюджет","cpc":"Цена перехода","cpe":"Средняя цена вовлечения","cpv":"Цена показа","engagement":"Вовлечение","paid_views":"Оплаченные просмотры","promoted_coubs":"Промо коубы","spend":"Потрачено","total_clicks":"Всего переходов","total_engagements":"Суммарное вовлечение","total_views":"Суммарные просмотры"}},"push_notifications":{"cotd":{"mine":"Ты крут! 🤘 Твой коуб “%{coub_title}” стал Коубом дня!"},"coub_pics_recoub":{"mine":"Coub Picks репостнул ваш коуб"},"famous_follow":{"mine":"%{sender} подписался на вас!"},"finished_processing":{"mine":"💥 Ваш коуб “%{coub_title}” готов. Разошлите друзьям!"},"follow":{"mine":"%{sender} подписался на вас!"},"follow_back":{"mine":"%{sender} подписался в ответ"},"friend_cotd":{"mine":"%{sender} получил Коуб дня!"},"hot":{"mine":"🔥 Ваш коуб “%{coub_title}” попал в горячее"},"like":{"mine":"🤘 %{sender} понравился ваш коуб “%{coub_title}”"},"like_recoub":{"mine":"🤘 %{sender} понравился ваш 🔁 репост “%{coub_title}”"},"new_category":{"mine":"🌟 Ваш коуб “%{coub_title}” попал в «выбор редакции»"},"recoub":{"mine":"🔁 %{sender} зарепостил ваш коуб “%{coub_title}”"},"sn_friend_cotd":{"mine":"%{sender} получил Коуб дня!"},"sn_friend_coub":{"mine":"%{sender} создал новый коуб \"%{coub_title}\"!"},"sn_friend_follow":{"mine":"Ваш друг %{name} из %{from} теперь на Coub!"},"sn_friend_registered":{"mine":"Ваш друг %{name} из %{from} теперь на Coub!"},"weekly_digest":{"mine":"Смотрите все лучшие коубы недели!"}},"raw_video":{"errors":{"video_processing_failed":"Обработка видео не удалась, попробуйте позже"}},"recommendation":{"channel_url":"URL канала"},"registration_email_page":{"title":"Последняя деталь!"},"rss":{"description":"RSS-канал","titles":{"channel":"%{channel}’s coubs","explore":"%{title} coubs","timeline":"Ваши подписки"}},"search":{"page":{"channels":{"all":"Посмотреть все ","description":"Каналы"}}},"search_page":{"nothing_found":"Ничего не найдено :(","nothing_found_coubs":"Ничего не найдено :(","nothing_found_descr":"проверьте написание и попробуйте снова.","nothing_found_names":"Ничего не найдено :(","nothing_found_none":"Ничего не найдено :("},"search_placeholder":"Поиск","search_popup":{"recent_search":{"clear_all":"Очистить","title":"Последние запросы"},"search_results":{"title":"Посмотреть больше результатов для ","view_coub_title":"Посмотреть "}},"sharing":{"post_to_twitter":"Написать в твиттер","post_to_vkontakte":"Написать в ВК","share":"Поделиться","share_fb_short":"Facebook","share_subject":"Зацени этот коуб!","share_tweeter_short":"Twitter","share_vk_short":"ВК","text_too_long_error":"Длина текста не может быть больше 280 символов"},"signin":{"failed_to_find_authentication":"Извините, у нас нет такого аккаунта"},"sing_up_panel":{"new_text_button":"Регистрация","old_text_button":"Вступить в Coub"},"site_notifications":{"kinds":{"sn_friend_follow":"Ваш %{sn} друг %{nickname} подписался на вас как %{channel}","sn_friend_follow_equal_name":"Ваш %{sn} друг %{nickname} подписался на вас","sn_friend_registered":"Ваш %{sn} друг %{nickname} зарегистрировался на Coub как %{channel}","sn_friend_registered_equal_name":"Ваш %{sn} друг %{nickname} зарегистрировался на Coub"}},"smart_datetime":{"ago":"назад","daynames":["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],"days":"%{dayname}","hours":{"few":"примерно %{count} часа","many":"примерно %{count} часов","one":"примерно %{count} час","other":"примерно %{count} часов"},"minutes":{"few":"%{count} минуты","many":"%{count} минут","one":"%{count} минута","other":"%{count} минут"},"months":{"few":"%{count} месяца","many":"%{count} месяцев","one":"%{count} месяц","other":"%{count} месяцев"},"seconds":{"few":"%{count} секунды","many":"%{count} секунд","one":"%{count} секундa","other":"%{count} секунд"},"weeks":{"few":"%{count} недели","many":"%{count} недель","one":"%{count} неделя","other":"%{count} недель"},"years":{"few":"%{count} года","many":"%{count} лет","one":"%{count} год","other":"%{count} лет"},"yesterday":"вчера"},"smart_datetime_new":{"current_year":"%{month} %{day}","days":"%{days}д","hours":"%{hours}ч","minutes":"%{minutes}м","month_full_names":["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],"month_names":["янв","февр","март","апр","май","июня","июля","авг","сент","окт","нояб","дек"],"seconds":"%{seconds}с","year_ago":"%{month} %{day}, %{year}"},"social_names":{"facebook":"Facebook","gmail":"Gmail","google":"Gmail","google_plus":"Google Plus","kanobu":"Канобу","link":"Ссылка","linkedin":"LinkedIn","mail":"Е-мейл","messenger":"Messenger","odnoklassniki":"Одноклассники","pinterest":"Pinterest","reddit":"Reddit","stumbleupon":"Stumbleupon","surfingbird":"Surfingbird","tumblr":"Tumblr","twitter":"Twitter","vkontakte":"Вконтакте","watsapp":"WhatsApp"},"stats":{"pane":"Stats pane","suggestions":"Suggestions"},"stories":{"add_new":"Создать историю","by":"от","coubs_count":{"few":"коуба","many":"коубов","one":"коуб"},"dates":{"before_yesterday":"ПОЗАВЧЕРА","earlier":"РАНЬШЕ","yesterday":"ВЧЕРА"},"delete":"Удалить","edit":"Редактировать","featured":"Фичерные истории","form":{"bottom_text":"Заключительный текст (не обязательно)","coub_num":"КОУБ #<span>%{num}</span>","coub_url":"Ссылка на коуб","delete":"Удалить","description":"Описание (не обязательно)","headline":"Заголовок (не обязательно)","publish":"Опубликовать","save_as_draft":"Сохранить как черновик","suggest":"Предложить к фичеру","suggest_hint":"Редакторы смогут менять название, текст и коубы фичерной истории, а вы лишитесь такой возможности.","tags":"Теги","thumbnail":"Сделать превью","title":"Название"},"more_stories":"Больше историй","next_set":"Следующий выпуск историй через","sort_types":{"anime":"Аниме","best_of_the_month":"Лучшее за месяц","cartoons":"Мультфильмы","channel_of_the_week":"Лучший канал недели","coub_memes":"Мемы","coub_types":"Типы коубов","games":"Игры","mashup_of_the_week":"Склейка недели","recent":"Свежее","top":"Лучшее","trend_of_the_week":"Тренд недели"},"title":{"edit":"Редактировать историю %{title} - Коуб","new":"Новая история - Коуб"},"types":{"draft":"ЧЕРНОВИК","new":"НОВАЯ ИСТОРИЯ","story":"ИСТОРИЯ"}},"support":{"array":{"last_word_connector":", и ","two_words_connector":" и ","words_connector":", "}},"tags":{"page":{"channels_title":"Результаты поиска ","not_found":"Ничего не найдено. Проверьте написание и попробуйте снова.","tag_list":{"title":"Похожие"},"title":" на Coub","title_not_found":"Ничего не найдено"}},"themes":{"dark":"Темная тема","turn_off":"Выключить","turn_on":"Включить"},"time":{"am":"am","formats":{"default":"%a, %d %b %Y %H:%M:%S %z","long":"%B %d, %Y","short":"%d %b %H:%M","video_meta":"%d/%m/%Y %H:%M"},"pm":"pm"},"titles":{"fresh":"Свежее","fresh_category":"Свежее %{category}","hot":"Горячее","hot_category":"Горячее %{category}","newest":"Свежее","newest_category":"Свежее %{category}","random":"Случайное","random_category":"Случайное %{category}","rising":"В тренде","rising_category":"В тренде %{category}","top_category":"Топ %{category}","views_category":"Популярное %{category}"},"tooltips":{"dislike_button":{"dislike":"Не нравится","undislike":"Не не нравится"},"like_button":{"like":"Лайк","unlike":"Разонравилось"},"recoub_button":{"recoub":"Репост","undo_recoub":"Отрепостить"},"remix_button":{"dropdown_title":"РЕКОУБЫ","remix":"Рекоуб"}},"trends":{"cant_unsubscribe":"Вы не можете отписаться от всех комьюнити","communities":"Сообщества","community":"Сообщество","members_count":{"few":"%{number} участника","many":"%{number} участников","one":"%{number} участник"},"prompts":{"subscribe":"Подписаться","unsubscribe":"Отписаться"}},"unknown_error":"Неизвестная ошибка","unlogged_index":{"make_loops_text_2":"Make <a id='video_loops_link'>video loops</a> from YouTube, GIF, Vine, your phone, whatever. <a id='mash_them_up_link' href='/create'>Mash them up</a>, add a cool soundtrack. You're the boss here   <span class='emoji-sunglasses'></span>&nbsp;<span class='emoji-ok'></span>","make_loops_text_2_mobile":"Make video loops from YouTube, GIF, Vine, your phone, whatever. Mash them up, add a cool soundtrack. You're the boss here   <span class='emoji-sunglasses'></span>&nbsp;<span class='emoji-ok'></span>","registration_header":"Sign up and follow the best creators.","scroll_down_text_1":"Now scroll down and <a id='take_a_look_link'>take a look</a>, damn it <span class='emoji-steam'></span>","scroll_down_text_1_mobile":"Now scroll down and take a look, damn it <span class='emoji-steam'></span>","watch_more":"Больше"},"unlogged_page":{"text":"Эта страница доступна только зарегистрированным пользователям"},"user":{"coubs_count":{"few":"%{count} коуба","many":"%{count} коубов","one":"%{count} коуб"},"device_token":{"do_not_exists":"User has no given token","duplicate":"Another user already has given token"},"errors":{"channel_switch_error":"Invalid credentials. You can't reattach channels from your current account"},"unsubscribe":{"fail":{"header":"Unsubscribe issue","sub":"We could not find your email address. Please check the link and try again, or <a href=\"mailto:support@coub.com\" class=\"hthin\">contact us</a> if you encounter any more errors."},"success":{"header":"Successfully unsubscribed","sub":"Your email <a href=\"mailto:%{email}\" class=\"hthin\">%{email}</a> has been removed, and you will no longer receive any more mailings from us."}}},"verify_email":{"heading":"Проверьте ваш почтовый ящик <span class=\"userEmail\">%{email}&nbsp;</span>(<a href=\"%{edit_email}\" ,=\"\" class=\"changeEmail\">сменить</a>)  для подтверждения е-мейла.","heading_version":"Проверьте ваш почтовый ящик <strong>%{email}</strong> (<a href='%{edit_email}'>сменить</a>) для подтверждения е-мейла.","resend":"Выслать верификационный емейл"},"video_popup":{"novideo":"Извините, но видео больше не доступно.","sub":"Попробуйте посмотреть исходное видео на&nbsp;"},"view_all":"Посмотреть все","views":{"pagination":{"first":"&laquo; Первая","last":"Последняя &raquo;","next":"Следующая &rsaquo;","previous":"&lsaquo; Предыдущая","truncate":"..."}},"weekly":{"coubs":{"title":"Лучшие коубы <br/><b>Недели</b>"},"navigation":{"next_week":"Следующая неделя","prev_week":"Предыдущая неделя"},"share":{"title":"Поделиться с друзьями"}},"who_to_follow":{"kinds":{"followed":"Подписан %{channels}","friends":"Этот канал ведет %{friend}","liked":"Вам понравилось %{count} коубов в этом канале"}}}};
}));



//     Underscore.js 1.7.0
//     http://underscorejs.org
//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function(){var n=this,t=n._,r=Array.prototype,e=Object.prototype,u=Function.prototype,i=r.push,a=r.slice,o=r.concat,l=e.toString,c=e.hasOwnProperty,f=Array.isArray,s=Object.keys,p=u.bind,h=function(n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=h),exports._=h):n._=h,h.VERSION="1.7.0";var g=function(n,t,r){if(t===void 0)return n;switch(null==r?3:r){case 1:return function(r){return n.call(t,r)};case 2:return function(r,e){return n.call(t,r,e)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)}}return function(){return n.apply(t,arguments)}};h.iteratee=function(n,t,r){return null==n?h.identity:h.isFunction(n)?g(n,t,r):h.isObject(n)?h.matches(n):h.property(n)},h.each=h.forEach=function(n,t,r){if(null==n)return n;t=g(t,r);var e,u=n.length;if(u===+u)for(e=0;u>e;e++)t(n[e],e,n);else{var i=h.keys(n);for(e=0,u=i.length;u>e;e++)t(n[i[e]],i[e],n)}return n},h.map=h.collect=function(n,t,r){if(null==n)return[];t=h.iteratee(t,r);for(var e,u=n.length!==+n.length&&h.keys(n),i=(u||n).length,a=Array(i),o=0;i>o;o++)e=u?u[o]:o,a[o]=t(n[e],e,n);return a};var v="Reduce of empty array with no initial value";h.reduce=h.foldl=h.inject=function(n,t,r,e){null==n&&(n=[]),t=g(t,e,4);var u,i=n.length!==+n.length&&h.keys(n),a=(i||n).length,o=0;if(arguments.length<3){if(!a)throw new TypeError(v);r=n[i?i[o++]:o++]}for(;a>o;o++)u=i?i[o]:o,r=t(r,n[u],u,n);return r},h.reduceRight=h.foldr=function(n,t,r,e){null==n&&(n=[]),t=g(t,e,4);var u,i=n.length!==+n.length&&h.keys(n),a=(i||n).length;if(arguments.length<3){if(!a)throw new TypeError(v);r=n[i?i[--a]:--a]}for(;a--;)u=i?i[a]:a,r=t(r,n[u],u,n);return r},h.find=h.detect=function(n,t,r){var e;return t=h.iteratee(t,r),h.some(n,function(n,r,u){return t(n,r,u)?(e=n,!0):void 0}),e},h.filter=h.select=function(n,t,r){var e=[];return null==n?e:(t=h.iteratee(t,r),h.each(n,function(n,r,u){t(n,r,u)&&e.push(n)}),e)},h.reject=function(n,t,r){return h.filter(n,h.negate(h.iteratee(t)),r)},h.every=h.all=function(n,t,r){if(null==n)return!0;t=h.iteratee(t,r);var e,u,i=n.length!==+n.length&&h.keys(n),a=(i||n).length;for(e=0;a>e;e++)if(u=i?i[e]:e,!t(n[u],u,n))return!1;return!0},h.some=h.any=function(n,t,r){if(null==n)return!1;t=h.iteratee(t,r);var e,u,i=n.length!==+n.length&&h.keys(n),a=(i||n).length;for(e=0;a>e;e++)if(u=i?i[e]:e,t(n[u],u,n))return!0;return!1},h.contains=h.include=function(n,t){return null==n?!1:(n.length!==+n.length&&(n=h.values(n)),h.indexOf(n,t)>=0)},h.invoke=function(n,t){var r=a.call(arguments,2),e=h.isFunction(t);return h.map(n,function(n){return(e?t:n[t]).apply(n,r)})},h.pluck=function(n,t){return h.map(n,h.property(t))},h.where=function(n,t){return h.filter(n,h.matches(t))},h.findWhere=function(n,t){return h.find(n,h.matches(t))},h.max=function(n,t,r){var e,u,i=-1/0,a=-1/0;if(null==t&&null!=n){n=n.length===+n.length?n:h.values(n);for(var o=0,l=n.length;l>o;o++)e=n[o],e>i&&(i=e)}else t=h.iteratee(t,r),h.each(n,function(n,r,e){u=t(n,r,e),(u>a||u===-1/0&&i===-1/0)&&(i=n,a=u)});return i},h.min=function(n,t,r){var e,u,i=1/0,a=1/0;if(null==t&&null!=n){n=n.length===+n.length?n:h.values(n);for(var o=0,l=n.length;l>o;o++)e=n[o],i>e&&(i=e)}else t=h.iteratee(t,r),h.each(n,function(n,r,e){u=t(n,r,e),(a>u||1/0===u&&1/0===i)&&(i=n,a=u)});return i},h.shuffle=function(n){for(var t,r=n&&n.length===+n.length?n:h.values(n),e=r.length,u=Array(e),i=0;e>i;i++)t=h.random(0,i),t!==i&&(u[i]=u[t]),u[t]=r[i];return u},h.sample=function(n,t,r){return null==t||r?(n.length!==+n.length&&(n=h.values(n)),n[h.random(n.length-1)]):h.shuffle(n).slice(0,Math.max(0,t))},h.sortBy=function(n,t,r){return t=h.iteratee(t,r),h.pluck(h.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index-t.index}),"value")};var m=function(n){return function(t,r,e){var u={};return r=h.iteratee(r,e),h.each(t,function(e,i){var a=r(e,i,t);n(u,e,a)}),u}};h.groupBy=m(function(n,t,r){h.has(n,r)?n[r].push(t):n[r]=[t]}),h.indexBy=m(function(n,t,r){n[r]=t}),h.countBy=m(function(n,t,r){h.has(n,r)?n[r]++:n[r]=1}),h.sortedIndex=function(n,t,r,e){r=h.iteratee(r,e,1);for(var u=r(t),i=0,a=n.length;a>i;){var o=i+a>>>1;r(n[o])<u?i=o+1:a=o}return i},h.toArray=function(n){return n?h.isArray(n)?a.call(n):n.length===+n.length?h.map(n,h.identity):h.values(n):[]},h.size=function(n){return null==n?0:n.length===+n.length?n.length:h.keys(n).length},h.partition=function(n,t,r){t=h.iteratee(t,r);var e=[],u=[];return h.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n)}),[e,u]},h.first=h.head=h.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:0>t?[]:a.call(n,0,t)},h.initial=function(n,t,r){return a.call(n,0,Math.max(0,n.length-(null==t||r?1:t)))},h.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:a.call(n,Math.max(n.length-t,0))},h.rest=h.tail=h.drop=function(n,t,r){return a.call(n,null==t||r?1:t)},h.compact=function(n){return h.filter(n,h.identity)};var y=function(n,t,r,e){if(t&&h.every(n,h.isArray))return o.apply(e,n);for(var u=0,a=n.length;a>u;u++){var l=n[u];h.isArray(l)||h.isArguments(l)?t?i.apply(e,l):y(l,t,r,e):r||e.push(l)}return e};h.flatten=function(n,t){return y(n,t,!1,[])},h.without=function(n){return h.difference(n,a.call(arguments,1))},h.uniq=h.unique=function(n,t,r,e){if(null==n)return[];h.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=h.iteratee(r,e));for(var u=[],i=[],a=0,o=n.length;o>a;a++){var l=n[a];if(t)a&&i===l||u.push(l),i=l;else if(r){var c=r(l,a,n);h.indexOf(i,c)<0&&(i.push(c),u.push(l))}else h.indexOf(u,l)<0&&u.push(l)}return u},h.union=function(){return h.uniq(y(arguments,!0,!0,[]))},h.intersection=function(n){if(null==n)return[];for(var t=[],r=arguments.length,e=0,u=n.length;u>e;e++){var i=n[e];if(!h.contains(t,i)){for(var a=1;r>a&&h.contains(arguments[a],i);a++);a===r&&t.push(i)}}return t},h.difference=function(n){var t=y(a.call(arguments,1),!0,!0,[]);return h.filter(n,function(n){return!h.contains(t,n)})},h.zip=function(n){if(null==n)return[];for(var t=h.max(arguments,"length").length,r=Array(t),e=0;t>e;e++)r[e]=h.pluck(arguments,e);return r},h.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},h.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if("number"!=typeof r)return e=h.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}for(;u>e;e++)if(n[e]===t)return e;return-1},h.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=n.length;for("number"==typeof r&&(e=0>r?e+r+1:Math.min(e,r+1));--e>=0;)if(n[e]===t)return e;return-1},h.range=function(n,t,r){arguments.length<=1&&(t=n||0,n=0),r=r||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;e>i;i++,n+=r)u[i]=n;return u};var d=function(){};h.bind=function(n,t){var r,e;if(p&&n.bind===p)return p.apply(n,a.call(arguments,1));if(!h.isFunction(n))throw new TypeError("Bind must be called on a function");return r=a.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(a.call(arguments)));d.prototype=n.prototype;var u=new d;d.prototype=null;var i=n.apply(u,r.concat(a.call(arguments)));return h.isObject(i)?i:u}},h.partial=function(n){var t=a.call(arguments,1);return function(){for(var r=0,e=t.slice(),u=0,i=e.length;i>u;u++)e[u]===h&&(e[u]=arguments[r++]);for(;r<arguments.length;)e.push(arguments[r++]);return n.apply(this,e)}},h.bindAll=function(n){var t,r,e=arguments.length;if(1>=e)throw new Error("bindAll must be passed function names");for(t=1;e>t;t++)r=arguments[t],n[r]=h.bind(n[r],n);return n},h.memoize=function(n,t){var r=function(e){var u=r.cache,i=t?t.apply(this,arguments):e;return h.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]};return r.cache={},r},h.delay=function(n,t){var r=a.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},h.defer=function(n){return h.delay.apply(h,[n,1].concat(a.call(arguments,1)))},h.throttle=function(n,t,r){var e,u,i,a=null,o=0;r||(r={});var l=function(){o=r.leading===!1?0:h.now(),a=null,i=n.apply(e,u),a||(e=u=null)};return function(){var c=h.now();o||r.leading!==!1||(o=c);var f=t-(c-o);return e=this,u=arguments,0>=f||f>t?(clearTimeout(a),a=null,o=c,i=n.apply(e,u),a||(e=u=null)):a||r.trailing===!1||(a=setTimeout(l,f)),i}},h.debounce=function(n,t,r){var e,u,i,a,o,l=function(){var c=h.now()-a;t>c&&c>0?e=setTimeout(l,t-c):(e=null,r||(o=n.apply(i,u),e||(i=u=null)))};return function(){i=this,u=arguments,a=h.now();var c=r&&!e;return e||(e=setTimeout(l,t)),c&&(o=n.apply(i,u),i=u=null),o}},h.wrap=function(n,t){return h.partial(t,n)},h.negate=function(n){return function(){return!n.apply(this,arguments)}},h.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,e=n[t].apply(this,arguments);r--;)e=n[r].call(this,e);return e}},h.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},h.before=function(n,t){var r;return function(){return--n>0?r=t.apply(this,arguments):t=null,r}},h.once=h.partial(h.before,2),h.keys=function(n){if(!h.isObject(n))return[];if(s)return s(n);var t=[];for(var r in n)h.has(n,r)&&t.push(r);return t},h.values=function(n){for(var t=h.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},h.pairs=function(n){for(var t=h.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},h.invert=function(n){for(var t={},r=h.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},h.functions=h.methods=function(n){var t=[];for(var r in n)h.isFunction(n[r])&&t.push(r);return t.sort()},h.extend=function(n){if(!h.isObject(n))return n;for(var t,r,e=1,u=arguments.length;u>e;e++){t=arguments[e];for(r in t)c.call(t,r)&&(n[r]=t[r])}return n},h.pick=function(n,t,r){var e,u={};if(null==n)return u;if(h.isFunction(t)){t=g(t,r);for(e in n){var i=n[e];t(i,e,n)&&(u[e]=i)}}else{var l=o.apply([],a.call(arguments,1));n=new Object(n);for(var c=0,f=l.length;f>c;c++)e=l[c],e in n&&(u[e]=n[e])}return u},h.omit=function(n,t,r){if(h.isFunction(t))t=h.negate(t);else{var e=h.map(o.apply([],a.call(arguments,1)),String);t=function(n,t){return!h.contains(e,t)}}return h.pick(n,t,r)},h.defaults=function(n){if(!h.isObject(n))return n;for(var t=1,r=arguments.length;r>t;t++){var e=arguments[t];for(var u in e)n[u]===void 0&&(n[u]=e[u])}return n},h.clone=function(n){return h.isObject(n)?h.isArray(n)?n.slice():h.extend({},n):n},h.tap=function(n,t){return t(n),n};var b=function(n,t,r,e){if(n===t)return 0!==n||1/n===1/t;if(null==n||null==t)return n===t;n instanceof h&&(n=n._wrapped),t instanceof h&&(t=t._wrapped);var u=l.call(n);if(u!==l.call(t))return!1;switch(u){case"[object RegExp]":case"[object String]":return""+n==""+t;case"[object Number]":return+n!==+n?+t!==+t:0===+n?1/+n===1/t:+n===+t;case"[object Date]":case"[object Boolean]":return+n===+t}if("object"!=typeof n||"object"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]===n)return e[i]===t;var a=n.constructor,o=t.constructor;if(a!==o&&"constructor"in n&&"constructor"in t&&!(h.isFunction(a)&&a instanceof a&&h.isFunction(o)&&o instanceof o))return!1;r.push(n),e.push(t);var c,f;if("[object Array]"===u){if(c=n.length,f=c===t.length)for(;c--&&(f=b(n[c],t[c],r,e)););}else{var s,p=h.keys(n);if(c=p.length,f=h.keys(t).length===c)for(;c--&&(s=p[c],f=h.has(t,s)&&b(n[s],t[s],r,e)););}return r.pop(),e.pop(),f};h.isEqual=function(n,t){return b(n,t,[],[])},h.isEmpty=function(n){if(null==n)return!0;if(h.isArray(n)||h.isString(n)||h.isArguments(n))return 0===n.length;for(var t in n)if(h.has(n,t))return!1;return!0},h.isElement=function(n){return!(!n||1!==n.nodeType)},h.isArray=f||function(n){return"[object Array]"===l.call(n)},h.isObject=function(n){var t=typeof n;return"function"===t||"object"===t&&!!n},h.each(["Arguments","Function","String","Number","Date","RegExp"],function(n){h["is"+n]=function(t){return l.call(t)==="[object "+n+"]"}}),h.isArguments(arguments)||(h.isArguments=function(n){return h.has(n,"callee")}),"function"!=typeof/./&&(h.isFunction=function(n){return"function"==typeof n||!1}),h.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},h.isNaN=function(n){return h.isNumber(n)&&n!==+n},h.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"===l.call(n)},h.isNull=function(n){return null===n},h.isUndefined=function(n){return n===void 0},h.has=function(n,t){return null!=n&&c.call(n,t)},h.noConflict=function(){return n._=t,this},h.identity=function(n){return n},h.constant=function(n){return function(){return n}},h.noop=function(){},h.property=function(n){return function(t){return t[n]}},h.matches=function(n){var t=h.pairs(n),r=t.length;return function(n){if(null==n)return!r;n=new Object(n);for(var e=0;r>e;e++){var u=t[e],i=u[0];if(u[1]!==n[i]||!(i in n))return!1}return!0}},h.times=function(n,t,r){var e=Array(Math.max(0,n));t=g(t,r,1);for(var u=0;n>u;u++)e[u]=t(u);return e},h.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},h.now=Date.now||function(){return(new Date).getTime()};var _={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},w=h.invert(_),j=function(n){var t=function(t){return n[t]},r="(?:"+h.keys(n).join("|")+")",e=RegExp(r),u=RegExp(r,"g");return function(n){return n=null==n?"":""+n,e.test(n)?n.replace(u,t):n}};h.escape=j(_),h.unescape=j(w),h.result=function(n,t){if(null==n)return void 0;var r=n[t];return h.isFunction(r)?n[t]():r};var x=0;h.uniqueId=function(n){var t=++x+"";return n?n+t:t},h.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var A=/(.)^/,k={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},O=/\\|'|\r|\n|\u2028|\u2029/g,F=function(n){return"\\"+k[n]};h.template=function(n,t,r){!t&&r&&(t=r),t=h.defaults({},t,h.templateSettings);var e=RegExp([(t.escape||A).source,(t.interpolate||A).source,(t.evaluate||A).source].join("|")+"|$","g"),u=0,i="__p+='";n.replace(e,function(t,r,e,a,o){return i+=n.slice(u,o).replace(O,F),u=o+t.length,r?i+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'":e?i+="'+\n((__t=("+e+"))==null?'':__t)+\n'":a&&(i+="';\n"+a+"\n__p+='"),t}),i+="';\n",t.variable||(i="with(obj||{}){\n"+i+"}\n"),i="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+i+"return __p;\n";try{var a=new Function(t.variable||"obj","_",i)}catch(o){throw o.source=i,o}var l=function(n){return a.call(this,n,h)},c=t.variable||"obj";return l.source="function("+c+"){\n"+i+"}",l},h.chain=function(n){var t=h(n);return t._chain=!0,t};var E=function(n){return this._chain?h(n).chain():n};h.mixin=function(n){h.each(h.functions(n),function(t){var r=h[t]=n[t];h.prototype[t]=function(){var n=[this._wrapped];return i.apply(n,arguments),E.call(this,r.apply(h,n))}})},h.mixin(h),h.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=r[n];h.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!==n&&"splice"!==n||0!==r.length||delete r[0],E.call(this,r)}}),h.each(["concat","join","slice"],function(n){var t=r[n];h.prototype[n]=function(){return E.call(this,t.apply(this._wrapped,arguments))}}),h.prototype.value=function(){return this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return h})}).call(this);
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.page=e()}(this,function(){"use strict";var p=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},o=c,t=a,e=function(t){return r(a(t))},n=r,i=h,_=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(t){for(var e,n,i=[],o=0,r=0,a="";null!=(e=_.exec(t));){var s=e[0],h=e[1],c=e.index;if(a+=t.slice(r,c),r=c+s.length,h)a+=h[1];else{a&&(i.push(a),a="");var p=e[2],u=e[3],f=e[4],d=e[5],l=e[6],g=e[7],v="+"===l||"*"===l,m="?"===l||"*"===l,w=p||"/",y=f||d||(g?".*":"[^"+w+"]+?");i.push({name:u||o++,prefix:p||"",delimiter:w,optional:m,repeat:v,pattern:(n=y,n.replace(/([=!:$\/()])/g,"\\$1"))})}}return r<t.length&&(a+=t.substr(r)),a&&i.push(a),i}function r(h){for(var c=new Array(h.length),t=0;t<h.length;t++)"object"==typeof h[t]&&(c[t]=new RegExp("^"+h[t].pattern+"$"));return function(t){for(var e="",n=t||{},i=0;i<h.length;i++){var o=h[i];if("string"!=typeof o){var r,a=n[o.name];if(null==a){if(o.optional)continue;throw new TypeError('Expected "'+o.name+'" to be defined')}if(p(a)){if(!o.repeat)throw new TypeError('Expected "'+o.name+'" to not repeat, but received "'+a+'"');if(0===a.length){if(o.optional)continue;throw new TypeError('Expected "'+o.name+'" to not be empty')}for(var s=0;s<a.length;s++){if(r=encodeURIComponent(a[s]),!c[i].test(r))throw new TypeError('Expected all "'+o.name+'" to match "'+o.pattern+'", but received "'+r+'"');e+=(0===s?o.prefix:o.delimiter)+r}}else{if(r=encodeURIComponent(a),!c[i].test(r))throw new TypeError('Expected "'+o.name+'" to match "'+o.pattern+'", but received "'+r+'"');e+=o.prefix+r}}else e+=o}return e}}function u(t){return t.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(t,e){return t.keys=e,t}function f(t){return t.sensitive?"":"i"}function h(t,e){for(var n=(e=e||{}).strict,i=!1!==e.end,o="",r=t[t.length-1],a="string"==typeof r&&/\/$/.test(r),s=0;s<t.length;s++){var h=t[s];if("string"==typeof h)o+=u(h);else{var c=u(h.prefix),p=h.pattern;h.repeat&&(p+="(?:"+c+p+")*"),o+=p=h.optional?c?"(?:"+c+"("+p+"))?":"("+p+")?":c+"("+p+")"}}return n||(o=(a?o.slice(0,-2):o)+"(?:\\/(?=$))?"),o+=i?"$":n&&a?"":"(?=\\/|$)",new RegExp("^"+o,f(e))}function c(t,e,n){return p(e=e||[])?n||(n={}):(n=e,e=[]),t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var i=0;i<n.length;i++)e.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return s(t,e)}(t,e):p(t)?function(t,e,n){for(var i=[],o=0;o<t.length;o++)i.push(c(t[o],e,n).source);return s(new RegExp("(?:"+i.join("|")+")",f(n)),e)}(t,e,n):function(t,e,n){for(var i=a(t),o=h(i,n),r=0;r<i.length;r++)"string"!=typeof i[r]&&e.push(i[r]);return s(o,e)}(t,e,n)}o.parse=t,o.compile=e,o.tokensToFunction=n,o.tokensToRegExp=i;var d,l="undefined"!=typeof document,g="undefined"!=typeof window,v="undefined"!=typeof history,m="undefined"!=typeof process,w=l&&document.ontouchstart?"touchstart":"click",y=g&&!(!window.history.location&&!window.location);function b(){this.callbacks=[],this.exits=[],this.current="",this.len=0,this._decodeURLComponents=!0,this._base="",this._strict=!1,this._running=!1,this._hashbang=!1,this.clickHandler=this.clickHandler.bind(this),this._onpopstate=this._onpopstate.bind(this)}function x(t,e){if("function"==typeof t)return x.call(this,"*",t);if("function"==typeof e)for(var n=new R(t,null,this),i=1;i<arguments.length;++i)this.callbacks.push(n.middleware(arguments[i]));else"string"==typeof t?this["string"==typeof e?"redirect":"show"](t,e):this.start(t)}function E(t,e,n){var i=this.page=n||x,o=i._window,r=i._hashbang,a=i._getBase();"/"===t[0]&&0!==t.indexOf(a)&&(t=a+(r?"#!":"")+t);var s=t.indexOf("?");if(this.canonicalPath=t,this.path=t.replace(a,"")||"/",r&&(this.path=this.path.replace("#!","")||"/"),this.title=l&&o.document.title,this.state=e||{},this.state.path=t,this.querystring=~s?i._decodeURLEncodedURIComponent(t.slice(s+1)):"",this.pathname=i._decodeURLEncodedURIComponent(~s?t.slice(0,s):t),this.params={},this.hash="",!r){if(!~this.path.indexOf("#"))return;var h=this.path.split("#");this.path=this.pathname=h[0],this.hash=i._decodeURLEncodedURIComponent(h[1])||"",this.querystring=this.querystring.split("#")[0]}}function R(t,e,n){this.page=n||k;var i=e||{};i.strict=i.strict||n._strict,this.path="*"===t?"(.*)":t,this.method="GET",this.regexp=o(this.path,this.keys=[],i)}b.prototype.configure=function(t){var e=t||{};this._window=e.window||g&&window,this._decodeURLComponents=!1!==e.decodeURLComponents,this._popstate=!1!==e.popstate&&g,this._click=!1!==e.click&&l,this._hashbang=!!e.hashbang;var n=this._window;this._popstate?n.addEventListener("popstate",this._onpopstate,!1):g&&n.removeEventListener("popstate",this._onpopstate,!1),this._click?n.document.addEventListener(w,this.clickHandler,!1):l&&n.document.removeEventListener(w,this.clickHandler,!1),this._hashbang&&g&&!v?n.addEventListener("hashchange",this._onpopstate,!1):g&&n.removeEventListener("hashchange",this._onpopstate,!1)},b.prototype.base=function(t){if(0===arguments.length)return this._base;this._base=t},b.prototype._getBase=function(){var t=this._base;if(t)return t;var e=g&&this._window&&this._window.location;return g&&this._hashbang&&e&&"file:"===e.protocol&&(t=e.pathname),t},b.prototype.strict=function(t){if(0===arguments.length)return this._strict;this._strict=t},b.prototype.start=function(t){var e=t||{};if(this.configure(e),!1!==e.dispatch){var n;if(this._running=!0,y){var i=this._window.location;n=this._hashbang&&~i.hash.indexOf("#!")?i.hash.substr(2)+i.search:this._hashbang?i.search+i.hash:i.pathname+i.search+i.hash}this.replace(n,null,!0,e.dispatch)}},b.prototype.stop=function(){if(this._running){this.current="",this.len=0,this._running=!1;var t=this._window;this._click&&t.document.removeEventListener(w,this.clickHandler,!1),g&&t.removeEventListener("popstate",this._onpopstate,!1),g&&t.removeEventListener("hashchange",this._onpopstate,!1)}},b.prototype.show=function(t,e,n,i){var o=new E(t,e,this),r=this.prevContext;return this.prevContext=o,this.current=o.path,!1!==n&&this.dispatch(o,r),!1!==o.handled&&!1!==i&&o.pushState(),o},b.prototype.back=function(t,e){var n=this;if(0<this.len){var i=this._window;v&&i.history.back(),this.len--}else t?setTimeout(function(){n.show(t,e)}):setTimeout(function(){n.show(n._getBase(),e)})},b.prototype.redirect=function(t,e){var n=this;"string"==typeof t&&"string"==typeof e&&x.call(this,t,function(t){setTimeout(function(){n.replace(e)},0)}),"string"==typeof t&&void 0===e&&setTimeout(function(){n.replace(t)},0)},b.prototype.replace=function(t,e,n,i){var o=new E(t,e,this),r=this.prevContext;return this.prevContext=o,this.current=o.path,o.init=n,o.save(),!1!==i&&this.dispatch(o,r),o},b.prototype.dispatch=function(e,n){var i=0,o=0,r=this;function a(){var t=r.callbacks[i++];if(e.path===r.current)return t?void t(e,a):function(t){if(t.handled)return;var e,n=this._window;e=this._hashbang?y&&this._getBase()+n.location.hash.replace("#!",""):y&&n.location.pathname+n.location.search;if(e===t.canonicalPath)return;this.stop(),t.handled=!1,y&&(n.location.href=t.canonicalPath)}.call(r,e);e.handled=!1}n?function t(){var e=r.exits[o++];if(!e)return a();e(n,t)}():a()},b.prototype.exit=function(t,e){if("function"==typeof t)return this.exit("*",t);for(var n=new R(t,null,this),i=1;i<arguments.length;++i)this.exits.push(n.middleware(arguments[i]))},b.prototype.clickHandler=function(t){if(1===this._which(t)&&!(t.metaKey||t.ctrlKey||t.shiftKey||t.defaultPrevented)){var e=t.target,n=t.path||(t.composedPath?t.composedPath():null);if(n)for(var i=0;i<n.length;i++)if(n[i].nodeName&&"A"===n[i].nodeName.toUpperCase()&&n[i].href){e=n[i];break}for(;e&&"A"!==e.nodeName.toUpperCase();)e=e.parentNode;if(e&&"A"===e.nodeName.toUpperCase()){var o="object"==typeof e.href&&"SVGAnimatedString"===e.href.constructor.name;if(!e.hasAttribute("download")&&"external"!==e.getAttribute("rel")){var r=e.getAttribute("href");if((this._hashbang||!this._samePath(e)||!e.hash&&"#"!==r)&&!(r&&-1<r.indexOf("mailto:"))&&(o?!e.target.baseVal:!e.target)&&(o||this.sameOrigin(e.href))){var a=o?e.href.baseVal:e.pathname+e.search+(e.hash||"");a="/"!==a[0]?"/"+a:a,m&&a.match(/^\/[a-zA-Z]:\//)&&(a=a.replace(/^\/[a-zA-Z]:\//,"/"));var s=a,h=this._getBase();0===a.indexOf(h)&&(a=a.substr(h.length)),this._hashbang&&(a=a.replace("#!","")),(!h||s!==a||y&&"file:"===this._window.location.protocol)&&(t.preventDefault(),this.show(s))}}}}},b.prototype._onpopstate=(d=!1,g?(l&&"complete"===document.readyState?d=!0:window.addEventListener("load",function(){setTimeout(function(){d=!0},0)}),function(t){if(d)if(t.state){var e=t.state.path;this.replace(e,t.state)}else if(y){var n=this._window.location;this.show(n.pathname+n.search+n.hash,void 0,void 0,!1)}}):function(){}),b.prototype._which=function(t){return null==(t=t||g&&this._window.event).which?t.button:t.which},b.prototype._toURL=function(t){var e=this._window;if("function"==typeof URL&&y)return new URL(t,e.location.toString());if(l){var n=e.document.createElement("a");return n.href=t,n}},b.prototype.sameOrigin=function(t){if(!t||!y)return!1;var e=this._toURL(t),n=this._window.location;return n.protocol===e.protocol&&n.hostname===e.hostname&&n.port===e.port},b.prototype._samePath=function(t){if(!y)return!1;var e=this._window.location;return t.pathname===e.pathname&&t.search===e.search},b.prototype._decodeURLEncodedURIComponent=function(t){return"string"!=typeof t?t:this._decodeURLComponents?decodeURIComponent(t.replace(/\+/g," ")):t},E.prototype.pushState=function(){var t=this.page,e=t._window,n=t._hashbang;t.len++,v&&e.history.pushState(this.state,this.title,n&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},E.prototype.save=function(){var t=this.page;v&&"file:"!==t._window.location.protocol&&t._window.history.replaceState(this.state,this.title,t._hashbang&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},R.prototype.middleware=function(n){var i=this;return function(t,e){if(i.match(t.path,t.params))return n(t,e);e()}},R.prototype.match=function(t,e){var n=this.keys,i=t.indexOf("?"),o=~i?t.slice(0,i):t,r=this.regexp.exec(decodeURIComponent(o));if(!r)return!1;for(var a=1,s=r.length;a<s;++a){var h=n[a-1],c=this.page._decodeURLEncodedURIComponent(r[a]);void 0===c&&hasOwnProperty.call(e,h.name)||(e[h.name]=c)}return!0};var k=function t(){var e=new b;function n(){return x.apply(e,arguments)}return n.callbacks=e.callbacks,n.exits=e.exits,n.base=e.base.bind(e),n.strict=e.strict.bind(e),n.start=e.start.bind(e),n.stop=e.stop.bind(e),n.show=e.show.bind(e),n.back=e.back.bind(e),n.redirect=e.redirect.bind(e),n.replace=e.replace.bind(e),n.dispatch=e.dispatch.bind(e),n.exit=e.exit.bind(e),n.configure=e.configure.bind(e),n.sameOrigin=e.sameOrigin.bind(e),n.clickHandler=e.clickHandler.bind(e),n.create=t,Object.defineProperty(n,"len",{get:function(){return e.len},set:function(t){e.len=t}}),Object.defineProperty(n,"current",{get:function(){return e.current},set:function(t){e.current=t}}),n.Context=E,n.Route=R,n}(),U=k,L=k;return U.default=L,U});
if ("jQuery" in window && "defineProperty" in Object) {
  Object.defineProperty(window, "$", {value: jQuery, writable: false});
  Object.defineProperty(window, "jQuery", {value: $, writable: false});
}
;

/*
  Абстрактный объект - родитель всех объектов
 */

(function() {
  abstract.Object = (function() {
    function Object() {
      this.s = this.constructor;
    }

    return Object;

  })();

}).call(this);

/*
  Абстрактный класс для всех классов
 */

(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.AbstractPiece = (function(superClass) {
    extend(AbstractPiece, superClass);

    function AbstractPiece() {
      AbstractPiece.__super__.constructor.apply(this, arguments);
    }

    return AbstractPiece;

  })(abstract.Object);

}).call(this);

/*
  Main file with namespace and imports
 */

(function() {
  if (window.chms == null) {
    window.chms = {};
  }

  if (window.chms.utils === void 0) {
    window.chms.utils = {};
  }

}).call(this);

/*
  Mixins for javascript
 */

(function() {
  chms.utils.Mixin = (function() {
    function Mixin(to) {
      if (to != null) {
        chms.utils.Mixin.mix(to, this);
      }
    }

    Mixin.mix = function(cl, mixin) {
      var name, value;
      for (name in mixin) {
        value = mixin[name];
        if (name !== "constructor") {
          switch (typeof value) {
            case "function":
              cl[name] = value.bind(cl);
              break;
            default:
              cl[name] = value;
          }
        }
      }
      return void 0;
    };

    return Mixin;

  })();

}).call(this);

/*
  Система очередей для ARD
 */

(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  siteData.ArdQueuesMixin = (function(superClass) {
    extend(ArdQueuesMixin, superClass);

    function ArdQueuesMixin() {
      this._queues = {};
      ArdQueuesMixin.__super__.constructor.apply(this, arguments);
    }

    ArdQueuesMixin.prototype.createAndRunQueue = function(field, time) {
      var q;
      if (this.getQueue(field) != null) {
        this.removeQueue(field);
      }
      q = new chms.utils.IntervalQueue();
      if (time != null) {
        q.setInterval(time);
      }
      q.start();
      return this._queues[field] = q;
    };

    ArdQueuesMixin.prototype.removeQueue = function(field) {
      if (this.getQueue(field) != null) {
        this._queues[field].stop();
        return delete this._queues[field];
      }
    };

    ArdQueuesMixin.prototype.getQueue = function(field) {
      return this._queues[field];
    };

    ArdQueuesMixin.prototype.setInQueue = function(key, val, stream, flags) {
      var q;
      if (flags == null) {
        flags = {};
      }
      if ((q = this.getQueue(key))) {
        q.clear();
        return q.add((function(_this) {
          return function() {
            return _this.set(key, val, stream, flags);
          };
        })(this));
      } else {
        throw "siteData.ArdQueuesMixin: trying to use queue for field " + key + " but it is not defined";
      }
    };

    return ArdQueuesMixin;

  })(chms.utils.Mixin);

}).call(this);

/*
  Миксин для интерфейсов bacon.js
 */

(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  siteData.ArdBaconMixin = (function(superClass) {
    extend(ArdBaconMixin, superClass);

    function ArdBaconMixin(to) {
      if (typeof Bacon !== "undefined" && Bacon !== null) {
        ArdBaconMixin.__super__.constructor.apply(this, arguments);
        to._ardBaconMixinMix();
      }
    }

    ArdBaconMixin.prototype._ardBaconMixinMix = function() {
      this.sChanged = $(this).asEventStream(this.s.EVENT_DATA_CHANGED);
      this.sBeforeChanged = $(this).asEventStream(this.s.EVENT_BEFORE_DATA_CHANGED);
      this.sProcessBeforeStart = $(this).asEventStream(this.s.EVENT_PROCESS_OF_CHANGE_BEFORE_START);
      this.sProcessBeforeEnd = $(this).asEventStream(this.s.EVENT_PROCESS_OF_CHANGE_BEFORE_END);
      this.sProcessStarted = $(this).asEventStream(this.s.EVENT_PROCESS_OF_CHANGE_STARTED);
      this.sProcessEnded = $(this).asEventStream(this.s.EVENT_PROCESS_OF_CHANGE_ENDED);
      return this.sProcessTakesPlace = this.sProcessStarted.merge(this.sProcessEnded);
    };

    ArdBaconMixin.prototype.getFiltedStream = function(fields, streams) {
      var f;
      f = this.sChanged.filter((function(_this) {
        return function(e) {
          return fields.indexOf(e.key) !== -1;
        };
      })(this));
      if (streams != null) {
        f = f.filter((function(_this) {
          return function(e) {
            return streams.indexOf(e.stream) !== -1;
          };
        })(this));
      }
      return f;
    };

    return ArdBaconMixin;

  })(chms.utils.Mixin);

}).call(this);

/*
  Абстрактные реактивные данные
 */

(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  siteData.AbstractReactiveData = (function() {
    AbstractReactiveData.EVENT_BEFORE_DATA_CHANGED = "coubEditor-data-AbstractReactiveData:EVENT_BEFORE_DATA_CHANGED";

    AbstractReactiveData.EVENT_DATA_CHANGED = "coubEditor.data.AbstractReactiveData:EVENT_DATA_CHANGED";

    AbstractReactiveData.EVENT_DATA_ADDED = "coubEditor.data.AbstractReactiveData:EVENT_DATA_ADDED";

    AbstractReactiveData.EVENT_DATA_INSERTED_TO_ARRAY = "coubEditor.data.AbstractReactiveData:EVENT_DATA_INSERTED_TO_ARRAY";

    AbstractReactiveData.EVENT_DATA_DELETED_FROM_ARRAY = "coubEditor.data.AbstractReactiveData:EVENT_DATA_DELETER_FROM_ARRAY";

    AbstractReactiveData.EVENT_DATA_CONCATED_TO_ARRAY = "coubEditor-data-AbstractReactiveData:EVENT_DATA_CONCATED_TO_ARRAY";

    AbstractReactiveData.EVENT_PROCESS_OF_CHANGE_BEFORE_START = "coubEditor-data-AbstractReactiveData:EVENT_PROCESS_OF_CHANGE_BEFORE_START";

    AbstractReactiveData.EVENT_PROCESS_OF_CHANGE_BEFORE_END = "coubEditor-data-AbstractReactiveData:EVENT_PROCESS_OF_CHANGE_BEFORE_END";

    AbstractReactiveData.EVENT_PROCESS_OF_CHANGE_STARTED = "coubEditor-data-AbstractReactiveData:EVENT_PROCESS_OF_CHANGE_STARTED";

    AbstractReactiveData.EVENT_PROCESS_OF_CHANGE_ENDED = "coubEditor-data-AbstractReactiveData:EVENT_PROCESS_OF_CHANGE_ENDED";

    AbstractReactiveData.STREAM_NOTIFICATION = "notification";

    AbstractReactiveData.prototype.DEBUG_TAG = "coubEditor.data.AbstractReactiveData";

    function AbstractReactiveData(data) {
      if (data == null) {
        data = {};
      }
      this.isAllInProcessOfChange = bind(this.isAllInProcessOfChange, this);
      this.isAnyInProcessOfChange = bind(this.isAnyInProcessOfChange, this);
      this.getProcessesForKeys = bind(this.getProcessesForKeys, this);
      this.isInProcessOfChange = bind(this.isInProcessOfChange, this);
      this.endProcessOfChange = bind(this.endProcessOfChange, this);
      this.startProcessOfChange = bind(this.startProcessOfChange, this);
      this.checkType = bind(this.checkType, this);
      this.setType = bind(this.setType, this);
      this.updateModel = bind(this.updateModel, this);
      this.overwriteModel = bind(this.overwriteModel, this);
      this.notifyAboutAllFields = bind(this.notifyAboutAllFields, this);
      this.notify = bind(this.notify, this);
      this.addNum = bind(this.addNum, this);
      this.concat = bind(this.concat, this);
      this.deleteAtIndex = bind(this.deleteAtIndex, this);
      this.insertAt = bind(this.insertAt, this);
      this.deleteFirstByValue = bind(this.deleteFirstByValue, this);
      this.pushUniq = bind(this.pushUniq, this);
      this.push = bind(this.push, this);
      this.get = bind(this.get, this);
      this.toggleBool = bind(this.toggleBool, this);
      this.setIfUnequal = bind(this.setIfUnequal, this);
      this.set = bind(this.set, this);
      this.getCurrentState = bind(this.getCurrentState, this);
      this.reset = bind(this.reset, this);
      this._initModel = bind(this._initModel, this);
      this.mix = bind(this.mix, this);
      this.s = this.constructor;
      this.eh = {
        err: (function(_this) {
          return function(tag, msg) {
            return console.error(tag, msg);
          };
        })(this),
        log: (function(_this) {
          return function(tag, msg) {
            return console.log(tag, msg);
          };
        })(this),
        warn: (function(_this) {
          return function(tag, msg) {
            return console.warn(tag, msg);
          };
        })(this)
      };
      this.mix();
      this._types = {};
      this._processes = {};
      this._initModel();
    }

    AbstractReactiveData.prototype.mix = function() {
      if (siteData.ArdQueuesMixin != null) {
        new siteData.ArdQueuesMixin(this);
      }
      if (siteData.ArdBaconMixin != null) {
        return new siteData.ArdBaconMixin(this);
      }
    };

    AbstractReactiveData.prototype._initModel = function() {
      return this._data = {};
    };

    AbstractReactiveData.prototype.reset = function() {
      return this._initModel();
    };

    AbstractReactiveData.prototype.getCurrentState = function() {
      return this._data;
    };

    AbstractReactiveData.prototype.set = function(key, val, stream, flags) {
      var event, evts, existBefore, j, len, prevValue;
      if (flags == null) {
        flags = {};
      }
      if (!this.checkType(key, val)) {
        this.eh.err(this.DEBUG_TAG, "Trying to set inappropriate type to field: " + key + "!");
        return;
      }
      prevValue = this._data[key];
      existBefore = this._data[key] != null;
      $(this).trigger({
        type: this.s.EVENT_BEFORE_DATA_CHANGED,
        key: key,
        current: this._data[key],
        next: val,
        stream: stream
      });
      this._data[key] = val;
      evts = [];
      if (!existBefore) {
        evts.push(this.s.EVENT_DATA_ADDED);
      }
      evts.push(this.s.EVENT_DATA_CHANGED);
      for (j = 0, len = evts.length; j < len; j++) {
        event = evts[j];
        $(this).trigger({
          type: event,
          key: key,
          value: val,
          stream: stream,
          prevValue: prevValue,
          flags: flags
        });
      }
      return val;
    };

    AbstractReactiveData.prototype.setIfUnequal = function(key, val, stream, flags) {
      var cv;
      if (flags == null) {
        flags = {};
      }
      cv = this.get(key);
      if (cv !== val) {
        return this.set(key, val, stream, flags);
      }
    };

    AbstractReactiveData.prototype.toggleBool = function(key) {
      var cv;
      cv = this.get(key);
      if (typeof cv === "boolean") {
        return this.set(key, !cv);
      } else {
        return this.eh.err(this.DEBUG_TAG, "Trying to toggle value of " + key + " which is not a boolean!");
      }
    };

    AbstractReactiveData.prototype.get = function(key) {
      return this._data[key];
    };

    AbstractReactiveData.prototype.push = function(key, val, stream, flags) {
      var a;
      if (flags == null) {
        flags = {};
      }
      a = this._data[key];
      if (this.criticArrayCheck(a)) {
        return this.insertAt(key, a.length, val, stream, flags);
      }
    };

    AbstractReactiveData.prototype.pushUniq = function(key, val, stream, flags) {
      var a;
      if (flags == null) {
        flags = {};
      }
      a = this._data[key];
      if (this.criticArrayCheck(a)) {
        if (a.indexOf(val) === -1) {
          return this.push(key, val, stream, flags);
        }
      }
    };

    AbstractReactiveData.prototype.deleteFirstByValue = function(key, val, stream, flags) {
      var a, i;
      if (flags == null) {
        flags = {};
      }
      a = this._data[key];
      if (this.criticArrayCheck(a)) {
        if ((i = a.indexOf(val)) !== -1) {
          return this.deleteAtIndex(key, i, stream, flags);
        }
      }
    };

    AbstractReactiveData.prototype.insertAt = function(key, i, val, stream, flags) {
      var a;
      if (flags == null) {
        flags = {};
      }
      a = this._data[key];
      if (this.criticArrayCheck(a)) {
        i = Math.min(i, a.length);
        a = utils.CArray.insertAt(i, a, [val]);
        this.set(key, a, stream, flags);
        return $(this).trigger({
          type: this.s.EVENT_DATA_INSERTED_TO_ARRAY,
          key: key,
          value: a,
          pushed: val,
          index: i,
          stream: stream
        });
      }
    };

    AbstractReactiveData.prototype.deleteAtIndex = function(key, i, stream, flags) {
      var a, deleted;
      if (flags == null) {
        flags = {};
      }
      a = this._data[key];
      if (this.criticArrayCheck(a)) {
        if (a[i] != null) {
          deleted = a[i];
          a.splice(i, 1);
          this.set(key, a, stream, flags);
          return $(this).trigger({
            type: this.s.EVENT_DATA_DELETED_FROM_ARRAY,
            key: key,
            value: a,
            deletedAt: i,
            deletedValue: deleted,
            stream: stream
          });
        } else {
          return this.eh.err(this.DEBUG_TAG, "trying to remove value from array which are not exists");
        }
      }
    };

    AbstractReactiveData.prototype.concat = function(key, values, stream, flags) {
      var a, aisarray, visarray;
      if (flags == null) {
        flags = {};
      }
      a = this._data[key];
      aisarray = this.criticArrayCheck(a);
      visarray = this.criticArrayCheck(values);
      if (aisarray && visarray) {
        this.set(key, a.concat(values), stream, flags);
        return $(this).trigger({
          type: this.s.EVENT_DATA_CONCATED_TO_ARRAY,
          key: key,
          concated: values
        });
      } else {
        return this.eh.err(this.DEBUG_TAG, "Trying to add values to " + key + " but key or values (" + aisarray + ", " + visarray + ") are not array!");
      }
    };

    AbstractReactiveData.prototype.addNum = function(key, num, stream, flags) {
      var a;
      if (flags == null) {
        flags = {};
      }
      a = this._data[key];
      if (!($.isNumeric(a) && $.isNumeric(num))) {
        this.eh.err(this.DEBUG_TAG, "trying to add number to NaN");
      }
      return this.set(key, a + num, stream, flags);
    };

    AbstractReactiveData.prototype.notify = function(key, stream, flags) {
      var v;
      if (flags == null) {
        flags = {};
      }
      if ((v = this._data[key]) == null) {
        this.eh.err(this.DEBUG_TAG, "try to notify about non existing field");
      }
      if (stream == null) {
        stream = this.s.STREAM_NOTIFICATION;
      }
      return this.set(key, v, stream, flags);
    };

    AbstractReactiveData.prototype.notifyAboutAllFields = function(flags) {
      var key, ref, results, value;
      if (flags == null) {
        flags = {};
      }
      ref = this._data;
      results = [];
      for (key in ref) {
        value = ref[key];
        results.push(this.notify(key, flags));
      }
      return results;
    };

    AbstractReactiveData.prototype.overwriteModel = function(data, flags) {
      if (flags == null) {
        flags = {};
      }
      this._data = data;
      return this.notifyAboutAllFields(flags);
    };

    AbstractReactiveData.prototype.updateModel = function(data, ignore, accept, flags) {
      var j, key, len, results, val, value;
      if (ignore != null) {
        for (j = 0, len = ignore.length; j < len; j++) {
          key = ignore[j];
          delete data[key];
        }
      }
      if (accept != null) {
        for (key in data) {
          value = data[key];
          if (accept.indexOf(key) === -1) {
            delete data[key];
          }
        }
      }
      this._data = $.extend(this._data, data);
      results = [];
      for (key in data) {
        val = data[key];
        results.push(this.notify(key, void 0, flags));
      }
      return results;
    };

    AbstractReactiveData.prototype.criticArrayCheck = function(a) {
      if ($.isArray(a)) {
        return true;
      } else {
        this.eh.err(this.DEBUG_TAG, "Element is not an array!");
        return false;
      }
    };

    AbstractReactiveData.prototype.setType = function(key, type) {
      return this._types[key] = type;
    };

    AbstractReactiveData.prototype.checkType = function(key, value) {
      if (this._types[key] != null) {
        return this._types[key].test(value);
      } else {
        return true;
      }
    };

    AbstractReactiveData.prototype.startProcessOfChange = function(keys, processId) {
      var cbk, cbks, j, key, l, len, len1, results;
      for (j = 0, len = keys.length; j < len; j++) {
        key = keys[j];
        this._processes[key] = processId;
      }
      cbks = [this.s.EVENT_PROCESS_OF_CHANGE_BEFORE_START, this.s.EVENT_PROCESS_OF_CHANGE_STARTED];
      results = [];
      for (l = 0, len1 = cbks.length; l < len1; l++) {
        cbk = cbks[l];
        results.push($(this).trigger({
          type: cbk,
          keys: keys,
          process: processId
        }));
      }
      return results;
    };

    AbstractReactiveData.prototype.endProcessOfChange = function(keys, processId) {
      var cbk, cbks, j, key, l, len, len1, results;
      for (j = 0, len = keys.length; j < len; j++) {
        key = keys[j];
        if (this.isInProcessOfChange(key, processId)) {
          delete this._processes[key];
        } else {
          this.eh.warn("Trying to end process for key " + key + " but it is not in any process or does not belong to specific process " + processId + ".");
        }
      }
      cbks = [this.s.EVENT_PROCESS_OF_CHANGE_BEFORE_END, this.s.EVENT_PROCESS_OF_CHANGE_ENDED];
      results = [];
      for (l = 0, len1 = cbks.length; l < len1; l++) {
        cbk = cbks[l];
        results.push($(this).trigger({
          type: cbk,
          keys: keys,
          process: processId
        }));
      }
      return results;
    };

    AbstractReactiveData.prototype.isInProcessOfChange = function(key, processId) {
      return (this._processes[key] != null) && (!processId || this._processes[key] === processId);
    };

    AbstractReactiveData.prototype.getProcessesForKeys = function(keys) {
      return keys.map((function(_this) {
        return function(k) {
          return _this._processes[k];
        };
      })(this));
    };

    AbstractReactiveData.prototype.isAnyInProcessOfChange = function(keys, processId) {
      return keys.map((function(_this) {
        return function(key) {
          return _this.isInProcessOfChange(key, processId);
        };
      })(this)).reduce((function(_this) {
        return function(o, t) {
          return o || t;
        };
      })(this));
    };

    AbstractReactiveData.prototype.isAllInProcessOfChange = function(keys, processId) {
      return keys.map((function(_this) {
        return function(key) {
          return _this.isInProcessOfChange(key, processId);
        };
      })(this)).reduce((function(_this) {
        return function(o, t) {
          return o && t;
        };
      })(this));
    };

    return AbstractReactiveData;

  })();

}).call(this);
(function() {


}).call(this);
